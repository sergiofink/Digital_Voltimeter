

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Nov 30 19:06:48 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.36
    46                           ; Generated 28/01/2022 GMT
    47                           ; 
    48                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  000E                     	;# 
   216  000F                     	;# 
   217  0010                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0013                     	;# 
   221  0014                     	;# 
   222  0015                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001D                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0086                     	;# 
   238  0087                     	;# 
   239  0088                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0088                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0094                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320                           
   321                           	psect	idataBANK1
   322  0008                     __pidataBANK1:
   323                           
   324                           ;initializer for _AVG_NUM
   325  0008  340A               	retlw	10
   326  0009  3400               	retlw	0
   327                           
   328                           	psect	strings
   329  1800                     __pstrings:
   330  1800                     stringtab:
   331  1800                     __stringtab:
   332  1800                     stringcode:	
   333                           ;	String table - string pointers are 1 byte each
   334                           
   335  1800                     stringdir:
   336  1800  3018               	movlw	high stringdir
   337  1801  008A               	movwf	10
   338  1802  0804               	movf	4,w
   339  1803  0A84               	incf	4,f
   340  1804  0782               	addwf	2,f
   341  1805                     __stringbase:
   342  1805  3400               	retlw	0
   343  1806                     __end_of__stringtab:
   344  1806                     __powers_:
   345  1806  3400               	retlw	0
   346  1807  3400               	retlw	0
   347  1808  3480               	retlw	128
   348  1809  343F               	retlw	63
   349  180A  3400               	retlw	0
   350  180B  3400               	retlw	0
   351  180C  3420               	retlw	32
   352  180D  3441               	retlw	65
   353  180E  3400               	retlw	0
   354  180F  3400               	retlw	0
   355  1810  34C8               	retlw	200
   356  1811  3442               	retlw	66
   357  1812  3400               	retlw	0
   358  1813  3400               	retlw	0
   359  1814  347A               	retlw	122
   360  1815  3444               	retlw	68
   361  1816  3400               	retlw	0
   362  1817  3440               	retlw	64
   363  1818  341C               	retlw	28
   364  1819  3446               	retlw	70
   365  181A  3400               	retlw	0
   366  181B  3450               	retlw	80
   367  181C  34C3               	retlw	195
   368  181D  3447               	retlw	71
   369  181E  3400               	retlw	0
   370  181F  3424               	retlw	36
   371  1820  3474               	retlw	116
   372  1821  3449               	retlw	73
   373  1822  3480               	retlw	128
   374  1823  3496               	retlw	150
   375  1824  3418               	retlw	24
   376  1825  344B               	retlw	75
   377  1826  3420               	retlw	32
   378  1827  34BC               	retlw	188
   379  1828  34BE               	retlw	190
   380  1829  344C               	retlw	76
   381  182A  3428               	retlw	40
   382  182B  346B               	retlw	107
   383  182C  346E               	retlw	110
   384  182D  344E               	retlw	78
   385  182E  34F9               	retlw	249
   386  182F  3402               	retlw	2
   387  1830  3415               	retlw	21
   388  1831  3450               	retlw	80
   389  1832  34EC               	retlw	236
   390  1833  3478               	retlw	120
   391  1834  34AD               	retlw	173
   392  1835  3460               	retlw	96
   393  1836  34CA               	retlw	202
   394  1837  34F2               	retlw	242
   395  1838  3449               	retlw	73
   396  1839  3471               	retlw	113
   397  183A                     __end_of__powers_:
   398  183A                     __npowers_:
   399  183A  3400               	retlw	0
   400  183B  3400               	retlw	0
   401  183C  3480               	retlw	128
   402  183D  343F               	retlw	63
   403  183E  34CD               	retlw	205
   404  183F  34CC               	retlw	204
   405  1840  34CC               	retlw	204
   406  1841  343D               	retlw	61
   407  1842  340A               	retlw	10
   408  1843  34D7               	retlw	215
   409  1844  3423               	retlw	35
   410  1845  343C               	retlw	60
   411  1846  346F               	retlw	111
   412  1847  3412               	retlw	18
   413  1848  3483               	retlw	131
   414  1849  343A               	retlw	58
   415  184A  3417               	retlw	23
   416  184B  34B7               	retlw	183
   417  184C  34D1               	retlw	209
   418  184D  3438               	retlw	56
   419  184E  34AC               	retlw	172
   420  184F  34C5               	retlw	197
   421  1850  3427               	retlw	39
   422  1851  3437               	retlw	55
   423  1852  34BD               	retlw	189
   424  1853  3437               	retlw	55
   425  1854  3486               	retlw	134
   426  1855  3435               	retlw	53
   427  1856  3495               	retlw	149
   428  1857  34BF               	retlw	191
   429  1858  34D6               	retlw	214
   430  1859  3433               	retlw	51
   431  185A  3477               	retlw	119
   432  185B  34CC               	retlw	204
   433  185C  342B               	retlw	43
   434  185D  3432               	retlw	50
   435  185E  345F               	retlw	95
   436  185F  3470               	retlw	112
   437  1860  3489               	retlw	137
   438  1861  3430               	retlw	48
   439  1862  34FF               	retlw	255
   440  1863  34E6               	retlw	230
   441  1864  34DB               	retlw	219
   442  1865  342E               	retlw	46
   443  1866  3408               	retlw	8
   444  1867  34E5               	retlw	229
   445  1868  343C               	retlw	60
   446  1869  341E               	retlw	30
   447  186A  3460               	retlw	96
   448  186B  3442               	retlw	66
   449  186C  34A2               	retlw	162
   450  186D  340D               	retlw	13
   451  186E                     __end_of__npowers_:
   452  186E                     _dpowers:
   453  186E  3401               	retlw	1
   454  186F  3400               	retlw	0
   455  1870  3400               	retlw	0
   456  1871  3400               	retlw	0
   457  1872  340A               	retlw	10
   458  1873  3400               	retlw	0
   459  1874  3400               	retlw	0
   460  1875  3400               	retlw	0
   461  1876  3464               	retlw	100
   462  1877  3400               	retlw	0
   463  1878  3400               	retlw	0
   464  1879  3400               	retlw	0
   465  187A  34E8               	retlw	232
   466  187B  3403               	retlw	3
   467  187C  3400               	retlw	0
   468  187D  3400               	retlw	0
   469  187E  3410               	retlw	16
   470  187F  3427               	retlw	39
   471  1880  3400               	retlw	0
   472  1881  3400               	retlw	0
   473  1882  34A0               	retlw	160
   474  1883  3486               	retlw	134
   475  1884  3401               	retlw	1
   476  1885  3400               	retlw	0
   477  1886  3440               	retlw	64
   478  1887  3442               	retlw	66
   479  1888  340F               	retlw	15
   480  1889  3400               	retlw	0
   481  188A  3480               	retlw	128
   482  188B  3496               	retlw	150
   483  188C  3498               	retlw	152
   484  188D  3400               	retlw	0
   485  188E  3400               	retlw	0
   486  188F  34E1               	retlw	225
   487  1890  34F5               	retlw	245
   488  1891  3405               	retlw	5
   489  1892  3400               	retlw	0
   490  1893  34CA               	retlw	202
   491  1894  349A               	retlw	154
   492  1895  343B               	retlw	59
   493  1896                     __end_of_dpowers:
   494  0006                     _PORTBbits	set	6
   495  0006                     _PORTB	set	6
   496  001E                     _ADRESH	set	30
   497  001F                     _ADCON0	set	31
   498  00FA                     _GO_nDONE	set	250
   499  0086                     _TRISB	set	134
   500  009E                     _ADRESL	set	158
   501  0089                     _TRISE	set	137
   502  0085                     _TRISA	set	133
   503  009F                     _ADCON1	set	159
   504  1896                     STR_1:
   505  1896  3425               	retlw	37	;'%'
   506  1897  3432               	retlw	50	;'2'
   507  1898  342E               	retlw	46	;'.'
   508  1899  3432               	retlw	50	;'2'
   509  189A  3466               	retlw	102	;'f'
   510  189B  3456               	retlw	86	;'V'
   511  189C  346F               	retlw	111	;'o'
   512  189D  346C               	retlw	108	;'l'
   513  189E  3474               	retlw	116	;'t'
   514  189F  3473               	retlw	115	;'s'
   515  18A0  3400               	retlw	0
   516                           
   517                           	psect	cinit
   518  07EE                     start_initialization:	
   519                           ; #config settings
   520                           
   521  07EE                     __initialization:
   522                           
   523                           ; Initialize objects allocated to BANK1
   524  07EE  1683               	bsf	3,5	;RP0=1, select bank1
   525  07EF  1303               	bcf	3,6	;RP1=0, select bank1
   526  07F0  120A  118A  2008  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   527  07F5  00E8               	movwf	__pdataBANK1& (0+127)
   528  07F6  120A  118A  2009  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   529  07FB  00E9               	movwf	(__pdataBANK1+1)& (0+127)
   530  07FC                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  07FC                     __end_of__initialization:
   534  07FC  0183               	clrf	3
   535  07FD  160A  118A  29F6   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	dataBANK1
   538  00E8                     __pdataBANK1:
   539  00E8                     _AVG_NUM:
   540  00E8                     	ds	2
   541                           
   542                           	psect	cstackBANK1
   543  00A0                     __pcstackBANK1:
   544  00A0                     ?_sprintf:
   545  00A0                     sprintf@f:	
   546                           ; 2 bytes @ 0x0
   547                           
   548                           
   549                           ; 1 bytes @ 0x0
   550  00A0                     	ds	5
   551  00A5                     ??_sprintf:
   552                           
   553                           ; 1 bytes @ 0x5
   554  00A5                     	ds	5
   555  00AA                     _sprintf$829:
   556                           
   557                           ; 4 bytes @ 0xA
   558  00AA                     	ds	4
   559  00AE                     sprintf@ap:
   560                           
   561                           ; 1 bytes @ 0xE
   562  00AE                     	ds	1
   563  00AF                     sprintf@val:
   564                           
   565                           ; 4 bytes @ 0xF
   566  00AF                     	ds	4
   567  00B3                     sprintf@flag:
   568                           
   569                           ; 2 bytes @ 0x13
   570  00B3                     	ds	2
   571  00B5                     sprintf@width:
   572                           
   573                           ; 2 bytes @ 0x15
   574  00B5                     	ds	2
   575  00B7                     sprintf@tmpval:
   576                           
   577                           ; 4 bytes @ 0x17
   578  00B7                     	ds	4
   579  00BB                     sprintf@eexp:
   580                           
   581                           ; 2 bytes @ 0x1B
   582  00BB                     	ds	2
   583  00BD                     sprintf@fval:
   584                           
   585                           ; 4 bytes @ 0x1D
   586  00BD                     	ds	4
   587  00C1                     sprintf@sp:
   588                           
   589                           ; 1 bytes @ 0x21
   590  00C1                     	ds	1
   591  00C2                     sprintf@prec:
   592                           
   593                           ; 2 bytes @ 0x22
   594  00C2                     	ds	2
   595  00C4                     sprintf@c:
   596                           
   597                           ; 1 bytes @ 0x24
   598  00C4                     	ds	1
   599  00C5                     main@string:
   600                           
   601                           ; 25 bytes @ 0x25
   602  00C5                     	ds	25
   603  00DE                     main@Volt:
   604                           
   605                           ; 4 bytes @ 0x3E
   606  00DE                     	ds	4
   607  00E2                     _main$825:
   608                           
   609                           ; 4 bytes @ 0x42
   610  00E2                     	ds	4
   611  00E6                     main@ADC_Value:
   612                           
   613                           ; 2 bytes @ 0x46
   614  00E6                     	ds	2
   615                           
   616                           	psect	cstackCOMMON
   617  0070                     __pcstackCOMMON:
   618  0070                     ?_isdigit:
   619  0070                     ?___fleq:	
   620                           ; 1 bit 
   621                           
   622  0070                     ?___flge:	
   623                           ; 1 bit 
   624                           
   625  0070                     ??_isdigit:	
   626                           ; 1 bit 
   627                           
   628  0070                     ?_Init_ADC:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_Init_ADC:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_lcdcmd:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_lcdcmd:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_lcddata:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ??_lcddata:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_InitLCD:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_WriteStringToLCD:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_WriteLCDLine1:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_main:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?__Umul8_16:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_GetADCValue:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0070                     ?___wmul:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0070                     ?___awmod:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0070                     ?___lwmod:	
   671                           ; 2 bytes @ 0x0
   672                           
   673  0070                     ?__tdiv_to_l_:	
   674                           ; 2 bytes @ 0x0
   675                           
   676  0070                     ?__div_to_l_:	
   677                           ; 4 bytes @ 0x0
   678                           
   679  0070                     ?___lldiv:	
   680                           ; 4 bytes @ 0x0
   681                           
   682  0070                     ?___flneg:	
   683                           ; 4 bytes @ 0x0
   684                           
   685  0070                     ?___llmod:	
   686                           ; 4 bytes @ 0x0
   687                           
   688  0070                     ?___xxtofl:	
   689                           ; 4 bytes @ 0x0
   690                           
   691  0070                     __Umul8_16@multiplicand:	
   692                           ; 4 bytes @ 0x0
   693                           
   694  0070                     _isdigit$634:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ___wmul@multiplier:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ___awmod@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0070                     ___lwmod@divisor:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  0070                     ___lldiv@divisor:	
   707                           ; 2 bytes @ 0x0
   708                           
   709  0070                     __div_to_l_@f1:	
   710                           ; 4 bytes @ 0x0
   711                           
   712  0070                     ___fleq@ff1:	
   713                           ; 4 bytes @ 0x0
   714                           
   715  0070                     ___flge@ff1:	
   716                           ; 4 bytes @ 0x0
   717                           
   718  0070                     ___flneg@f1:	
   719                           ; 4 bytes @ 0x0
   720                           
   721  0070                     __tdiv_to_l_@f1:	
   722                           ; 4 bytes @ 0x0
   723                           
   724  0070                     ___llmod@divisor:	
   725                           ; 4 bytes @ 0x0
   726                           
   727  0070                     ___xxtofl@val:	
   728                           ; 4 bytes @ 0x0
   729                           
   730                           
   731                           ; 4 bytes @ 0x0
   732  0070                     	ds	1
   733  0071                     isdigit@c:
   734                           
   735                           ; 1 bytes @ 0x1
   736  0071                     	ds	1
   737  0072                     ??__Umul8_16:
   738  0072                     ??_GetADCValue:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     lcdcmd@value:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     lcddata@value:	
   745                           ; 1 bytes @ 0x2
   746                           
   747  0072                     ___wmul@multiplicand:	
   748                           ; 1 bytes @ 0x2
   749                           
   750  0072                     ___awmod@dividend:	
   751                           ; 2 bytes @ 0x2
   752                           
   753  0072                     ___lwmod@dividend:	
   754                           ; 2 bytes @ 0x2
   755                           
   756                           
   757                           ; 2 bytes @ 0x2
   758  0072                     	ds	1
   759  0073                     lcdcmd@cmd:
   760  0073                     lcddata@dta:	
   761                           ; 1 bytes @ 0x3
   762                           
   763                           
   764                           ; 1 bytes @ 0x3
   765  0073                     	ds	1
   766  0074                     ??_InitLCD:
   767  0074                     ??_WriteStringToLCD:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ??___wmul:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     ??___awmod:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     ??___flneg:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     ??___lwmod:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     ??___xxtofl:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     ___wmul@product:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     __Umul8_16@product:	
   789                           ; 2 bytes @ 0x4
   790                           
   791  0074                     ___lldiv@dividend:	
   792                           ; 2 bytes @ 0x4
   793                           
   794  0074                     __div_to_l_@f2:	
   795                           ; 4 bytes @ 0x4
   796                           
   797  0074                     ___fleq@ff2:	
   798                           ; 4 bytes @ 0x4
   799                           
   800  0074                     ___flge@ff2:	
   801                           ; 4 bytes @ 0x4
   802                           
   803  0074                     __tdiv_to_l_@f2:	
   804                           ; 4 bytes @ 0x4
   805                           
   806  0074                     ___llmod@dividend:	
   807                           ; 4 bytes @ 0x4
   808                           
   809                           
   810                           ; 4 bytes @ 0x4
   811  0074                     	ds	1
   812  0075                     GetADCValue@Channel:
   813  0075                     WriteStringToLCD@s:	
   814                           ; 1 bytes @ 0x5
   815                           
   816  0075                     ___awmod@counter:	
   817                           ; 1 bytes @ 0x5
   818                           
   819  0075                     ___lwmod@counter:	
   820                           ; 1 bytes @ 0x5
   821                           
   822                           
   823                           ; 1 bytes @ 0x5
   824  0075                     	ds	1
   825  0076                     ??_WriteLCDLine1:
   826  0076                     ?___lwdiv:	
   827                           ; 1 bytes @ 0x6
   828                           
   829  0076                     WriteLCDLine1@s:	
   830                           ; 2 bytes @ 0x6
   831                           
   832  0076                     ___awmod@sign:	
   833                           ; 1 bytes @ 0x6
   834                           
   835  0076                     ___lwdiv@divisor:	
   836                           ; 1 bytes @ 0x6
   837                           
   838  0076                     __Umul8_16@word_mpld:	
   839                           ; 2 bytes @ 0x6
   840                           
   841                           
   842                           ; 2 bytes @ 0x6
   843  0076                     	ds	1
   844  0077                     ?___awdiv:
   845  0077                     ___awdiv@divisor:	
   846                           ; 2 bytes @ 0x7
   847                           
   848                           
   849                           ; 2 bytes @ 0x7
   850  0077                     	ds	1
   851  0078                     ??__tdiv_to_l_:
   852  0078                     ??__div_to_l_:	
   853                           ; 1 bytes @ 0x8
   854                           
   855  0078                     ??___lldiv:	
   856                           ; 1 bytes @ 0x8
   857                           
   858  0078                     ??___fleq:	
   859                           ; 1 bytes @ 0x8
   860                           
   861  0078                     ??___flge:	
   862                           ; 1 bytes @ 0x8
   863                           
   864  0078                     ??___llmod:	
   865                           ; 1 bytes @ 0x8
   866                           
   867  0078                     __Umul8_16@multiplier:	
   868                           ; 1 bytes @ 0x8
   869                           
   870  0078                     ___xxtofl@sign:	
   871                           ; 1 bytes @ 0x8
   872                           
   873  0078                     ___lwdiv@dividend:	
   874                           ; 1 bytes @ 0x8
   875                           
   876                           
   877                           ; 2 bytes @ 0x8
   878  0078                     	ds	1
   879  0079                     ___llmod@counter:
   880  0079                     ___xxtofl@exp:	
   881                           ; 1 bytes @ 0x9
   882                           
   883  0079                     ___awdiv@dividend:	
   884                           ; 1 bytes @ 0x9
   885                           
   886  0079                     ___lldiv@quotient:	
   887                           ; 2 bytes @ 0x9
   888                           
   889                           
   890                           ; 4 bytes @ 0x9
   891  0079                     	ds	1
   892  007A                     ??___lwdiv:
   893  007A                     ___xxtofl@arg:	
   894                           ; 1 bytes @ 0xA
   895                           
   896                           
   897                           ; 4 bytes @ 0xA
   898  007A                     	ds	1
   899  007B                     ??___awdiv:
   900  007B                     ___lwdiv@quotient:	
   901                           ; 1 bytes @ 0xB
   902                           
   903                           
   904                           ; 2 bytes @ 0xB
   905  007B                     	ds	2
   906  007D                     ___lldiv@counter:
   907  007D                     ___lwdiv@counter:	
   908                           ; 1 bytes @ 0xD
   909                           
   910                           
   911                           ; 1 bytes @ 0xD
   912  007D                     	ds	1
   913  007E                     ??___flsub:
   914                           
   915                           	psect	cstackBANK0
   916  0020                     __pcstackBANK0:	
   917                           ; 1 bytes @ 0xE
   918                           
   919  0020                     ?_Read_adc:
   920  0020                     ___awdiv@counter:	
   921                           ; 2 bytes @ 0x0
   922                           
   923  0020                     __div_to_l_@quot:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0020                     __tdiv_to_l_@quot:	
   927                           ; 4 bytes @ 0x0
   928                           
   929                           
   930                           ; 4 bytes @ 0x0
   931  0020                     	ds	1
   932  0021                     ___awdiv@sign:
   933                           
   934                           ; 1 bytes @ 0x1
   935  0021                     	ds	1
   936  0022                     ??_Read_adc:
   937  0022                     ___awdiv@quotient:	
   938                           ; 1 bytes @ 0x2
   939                           
   940                           
   941                           ; 2 bytes @ 0x2
   942  0022                     	ds	2
   943  0024                     ?___flmul:
   944  0024                     __div_to_l_@cntr:	
   945                           ; 4 bytes @ 0x4
   946                           
   947  0024                     __tdiv_to_l_@cntr:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0024                     Read_adc@sample:	
   951                           ; 1 bytes @ 0x4
   952                           
   953  0024                     ___flmul@b:	
   954                           ; 2 bytes @ 0x4
   955                           
   956                           
   957                           ; 4 bytes @ 0x4
   958  0024                     	ds	1
   959  0025                     __div_to_l_@exp1:
   960  0025                     __tdiv_to_l_@exp1:	
   961                           ; 1 bytes @ 0x5
   962                           
   963                           
   964                           ; 1 bytes @ 0x5
   965  0025                     	ds	1
   966  0026                     Read_adc@adc_parameter:
   967                           
   968                           ; 1 bytes @ 0x6
   969  0026                     	ds	1
   970  0027                     Read_adc@sum:
   971                           
   972                           ; 2 bytes @ 0x7
   973  0027                     	ds	1
   974  0028                     ___flmul@a:
   975                           
   976                           ; 4 bytes @ 0x8
   977  0028                     	ds	1
   978  0029                     Read_adc@i:
   979                           
   980                           ; 2 bytes @ 0x9
   981  0029                     	ds	3
   982  002C                     ??___flmul:
   983                           
   984                           ; 1 bytes @ 0xC
   985  002C                     	ds	5
   986  0031                     ___flmul@sign:
   987                           
   988                           ; 1 bytes @ 0x11
   989  0031                     	ds	1
   990  0032                     ___flmul@grs:
   991                           
   992                           ; 4 bytes @ 0x12
   993  0032                     	ds	4
   994  0036                     ___flmul@aexp:
   995                           
   996                           ; 1 bytes @ 0x16
   997  0036                     	ds	1
   998  0037                     ___flmul@bexp:
   999                           
  1000                           ; 1 bytes @ 0x17
  1001  0037                     	ds	1
  1002  0038                     ___flmul@prod:
  1003                           
  1004                           ; 4 bytes @ 0x18
  1005  0038                     	ds	4
  1006  003C                     ___flmul@temp:
  1007                           
  1008                           ; 2 bytes @ 0x1C
  1009  003C                     	ds	2
  1010  003E                     ?_fround:
  1011  003E                     ?_scale:	
  1012                           ; 4 bytes @ 0x1E
  1013                           
  1014                           
  1015                           ; 4 bytes @ 0x1E
  1016  003E                     	ds	4
  1017  0042                     ??_fround:
  1018  0042                     ??_scale:	
  1019                           ; 1 bytes @ 0x22
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x22
  1023  0042                     	ds	7
  1024  0049                     _fround$827:
  1025                           
  1026                           ; 4 bytes @ 0x29
  1027  0049                     	ds	3
  1028  004C                     _scale$828:
  1029                           
  1030                           ; 4 bytes @ 0x2C
  1031  004C                     	ds	1
  1032  004D                     _fround$826:
  1033                           
  1034                           ; 4 bytes @ 0x2D
  1035  004D                     	ds	3
  1036  0050                     scale@scl:
  1037                           
  1038                           ; 1 bytes @ 0x30
  1039  0050                     	ds	1
  1040  0051                     ?___fltol:
  1041  0051                     fround@prec:	
  1042                           ; 4 bytes @ 0x31
  1043                           
  1044  0051                     ___fltol@f1:	
  1045                           ; 1 bytes @ 0x31
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x31
  1049  0051                     	ds	1
  1050  0052                     ?___fladd:
  1051  0052                     ___fladd@b:	
  1052                           ; 4 bytes @ 0x32
  1053                           
  1054                           
  1055                           ; 4 bytes @ 0x32
  1056  0052                     	ds	3
  1057  0055                     ??___fltol:
  1058                           
  1059                           ; 1 bytes @ 0x35
  1060  0055                     	ds	1
  1061  0056                     ___fladd@a:
  1062                           
  1063                           ; 4 bytes @ 0x36
  1064  0056                     	ds	4
  1065  005A                     ??___fladd:
  1066  005A                     ___fltol@sign1:	
  1067                           ; 1 bytes @ 0x3A
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x3A
  1071  005A                     	ds	1
  1072  005B                     ___fltol@exp1:
  1073                           
  1074                           ; 1 bytes @ 0x3B
  1075  005B                     	ds	7
  1076  0062                     ___fladd@signs:
  1077                           
  1078                           ; 1 bytes @ 0x42
  1079  0062                     	ds	1
  1080  0063                     ___fladd@aexp:
  1081                           
  1082                           ; 1 bytes @ 0x43
  1083  0063                     	ds	1
  1084  0064                     ___fladd@bexp:
  1085                           
  1086                           ; 1 bytes @ 0x44
  1087  0064                     	ds	1
  1088  0065                     ___fladd@grs:
  1089                           
  1090                           ; 1 bytes @ 0x45
  1091  0065                     	ds	1
  1092  0066                     ?___flsub:
  1093  0066                     ___flsub@a:	
  1094                           ; 4 bytes @ 0x46
  1095                           
  1096                           
  1097                           ; 4 bytes @ 0x46
  1098  0066                     	ds	4
  1099  006A                     ___flsub@b:
  1100                           
  1101                           ; 4 bytes @ 0x4A
  1102  006A                     	ds	4
  1103  006E                     ??_main:
  1104                           
  1105                           ; 1 bytes @ 0x4E
  1106  006E                     	ds	1
  1107                           
  1108                           	psect	maintext
  1109  11F6                     __pmaintext:	
  1110 ;;
  1111 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1112 ;;
  1113 ;; *************** function _main *****************
  1114 ;; Defined at:
  1115 ;;		line 13 in file "../../main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  string         25   37[BANK1 ] unsigned char [25]
  1120 ;;  Volt            4   62[BANK1 ] float 
  1121 ;;  ADC_Value       2   70[BANK1 ] unsigned int 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : B00/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         0       0      35       0       0
  1133 ;;      Temps:          0       1       0       0       0
  1134 ;;      Totals:         0       1      35       0       0
  1135 ;;Total ram usage:       36 bytes
  1136 ;; Hardware stack levels required when called: 4
  1137 ;; This function calls:
  1138 ;;		_InitLCD
  1139 ;;		_Init_ADC
  1140 ;;		_Read_adc
  1141 ;;		_WriteLCDLine1
  1142 ;;		___flmul
  1143 ;;		___xxtofl
  1144 ;;		_sprintf
  1145 ;; This function is called by:
  1146 ;;		Startup code after reset
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150  11F6                     _main:	
  1151                           ;psect for function _main
  1152                           
  1153  11F6                     l3402:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1156                           
  1157                           
  1158                           ;../../main.c: 15:     Init_ADC();
  1159  11F6  160A  118A  2000  160A  118A  	fcall	_Init_ADC
  1160                           
  1161                           ;../../main.c: 16:     InitLCD();
  1162  11FB  160A  158A  279C  160A  118A  	fcall	_InitLCD
  1163  1200                     l90:	
  1164                           ;../../main.c: 18:     while(1)
  1165                           
  1166                           
  1167                           ;../../main.c: 19:     {;../../main.c: 20:         unsigned int ADC_Value=Read_adc(0);
  1168  1200  3000               	movlw	0
  1169  1201  160A  158A  2657  160A  118A  	fcall	_Read_adc
  1170  1206  1283               	bcf	3,5	;RP0=0, select bank0
  1171  1207  1303               	bcf	3,6	;RP1=0, select bank0
  1172  1208  0821               	movf	?_Read_adc+1,w
  1173  1209  1683               	bsf	3,5	;RP0=1, select bank1
  1174  120A  1303               	bcf	3,6	;RP1=0, select bank1
  1175  120B  00E7               	movwf	(main@ADC_Value+1)^(0+128)
  1176  120C  1283               	bcf	3,5	;RP0=0, select bank0
  1177  120D  1303               	bcf	3,6	;RP1=0, select bank0
  1178  120E  0820               	movf	?_Read_adc,w
  1179  120F  1683               	bsf	3,5	;RP0=1, select bank1
  1180  1210  1303               	bcf	3,6	;RP1=0, select bank1
  1181  1211  00E6               	movwf	main@ADC_Value^(0+128)
  1182  1212                     l3404:
  1183                           
  1184                           ;../../main.c: 21:         float Volt= ADC_Value*0.00494*(670/200);
  1185  1212  303B               	movlw	59
  1186  1213  1283               	bcf	3,5	;RP0=0, select bank0
  1187  1214  1303               	bcf	3,6	;RP1=0, select bank0
  1188  1215  00A7               	movwf	___flmul@b+3
  1189  1216  30A1               	movlw	161
  1190  1217  00A6               	movwf	___flmul@b+2
  1191  1218  30DF               	movlw	223
  1192  1219  00A5               	movwf	___flmul@b+1
  1193  121A  30B9               	movlw	185
  1194  121B  00A4               	movwf	___flmul@b
  1195  121C  1683               	bsf	3,5	;RP0=1, select bank1
  1196  121D  1303               	bcf	3,6	;RP1=0, select bank1
  1197  121E  0866               	movf	main@ADC_Value^(0+128),w
  1198  121F  00F0               	movwf	___xxtofl@val
  1199  1220  0867               	movf	(main@ADC_Value+1)^(0+128),w
  1200  1221  00F1               	movwf	___xxtofl@val+1
  1201  1222  01F2               	clrf	___xxtofl@val+2
  1202  1223  01F3               	clrf	___xxtofl@val+3
  1203  1224  3000               	movlw	0
  1204  1225  160A  118A  213C  160A  118A  	fcall	___xxtofl
  1205  122A  0873               	movf	?___xxtofl+3,w
  1206  122B  1283               	bcf	3,5	;RP0=0, select bank0
  1207  122C  1303               	bcf	3,6	;RP1=0, select bank0
  1208  122D  00AB               	movwf	___flmul@a+3
  1209  122E  0872               	movf	?___xxtofl+2,w
  1210  122F  00AA               	movwf	___flmul@a+2
  1211  1230  0871               	movf	?___xxtofl+1,w
  1212  1231  00A9               	movwf	___flmul@a+1
  1213  1232  0870               	movf	?___xxtofl,w
  1214  1233  00A8               	movwf	___flmul@a
  1215  1234  120A  158A  249F  160A  118A  	fcall	___flmul
  1216  1239  1283               	bcf	3,5	;RP0=0, select bank0
  1217  123A  1303               	bcf	3,6	;RP1=0, select bank0
  1218  123B  0827               	movf	?___flmul+3,w
  1219  123C  1683               	bsf	3,5	;RP0=1, select bank1
  1220  123D  1303               	bcf	3,6	;RP1=0, select bank1
  1221  123E  00E5               	movwf	(_main$825+3)^(0+128)
  1222  123F  1283               	bcf	3,5	;RP0=0, select bank0
  1223  1240  1303               	bcf	3,6	;RP1=0, select bank0
  1224  1241  0826               	movf	?___flmul+2,w
  1225  1242  1683               	bsf	3,5	;RP0=1, select bank1
  1226  1243  1303               	bcf	3,6	;RP1=0, select bank1
  1227  1244  00E4               	movwf	(_main$825+2)^(0+128)
  1228  1245  1283               	bcf	3,5	;RP0=0, select bank0
  1229  1246  1303               	bcf	3,6	;RP1=0, select bank0
  1230  1247  0825               	movf	?___flmul+1,w
  1231  1248  1683               	bsf	3,5	;RP0=1, select bank1
  1232  1249  1303               	bcf	3,6	;RP1=0, select bank1
  1233  124A  00E3               	movwf	(_main$825+1)^(0+128)
  1234  124B  1283               	bcf	3,5	;RP0=0, select bank0
  1235  124C  1303               	bcf	3,6	;RP1=0, select bank0
  1236  124D  0824               	movf	?___flmul,w
  1237  124E  1683               	bsf	3,5	;RP0=1, select bank1
  1238  124F  1303               	bcf	3,6	;RP1=0, select bank1
  1239  1250  00E2               	movwf	_main$825^(0+128)
  1240  1251                     l3406:
  1241                           
  1242                           ;../../main.c: 21:         float Volt= ADC_Value*0.00494*(670/200);
  1243  1251  3040               	movlw	64
  1244  1252  1283               	bcf	3,5	;RP0=0, select bank0
  1245  1253  1303               	bcf	3,6	;RP1=0, select bank0
  1246  1254  00A7               	movwf	___flmul@b+3
  1247  1255  3040               	movlw	64
  1248  1256  00A6               	movwf	___flmul@b+2
  1249  1257  3000               	movlw	0
  1250  1258  00A5               	movwf	___flmul@b+1
  1251  1259  3000               	movlw	0
  1252  125A  00A4               	movwf	___flmul@b
  1253  125B  1683               	bsf	3,5	;RP0=1, select bank1
  1254  125C  1303               	bcf	3,6	;RP1=0, select bank1
  1255  125D  0865               	movf	(_main$825+3)^(0+128),w
  1256  125E  1283               	bcf	3,5	;RP0=0, select bank0
  1257  125F  1303               	bcf	3,6	;RP1=0, select bank0
  1258  1260  00AB               	movwf	___flmul@a+3
  1259  1261  1683               	bsf	3,5	;RP0=1, select bank1
  1260  1262  1303               	bcf	3,6	;RP1=0, select bank1
  1261  1263  0864               	movf	(_main$825+2)^(0+128),w
  1262  1264  1283               	bcf	3,5	;RP0=0, select bank0
  1263  1265  1303               	bcf	3,6	;RP1=0, select bank0
  1264  1266  00AA               	movwf	___flmul@a+2
  1265  1267  1683               	bsf	3,5	;RP0=1, select bank1
  1266  1268  1303               	bcf	3,6	;RP1=0, select bank1
  1267  1269  0863               	movf	(_main$825+1)^(0+128),w
  1268  126A  1283               	bcf	3,5	;RP0=0, select bank0
  1269  126B  1303               	bcf	3,6	;RP1=0, select bank0
  1270  126C  00A9               	movwf	___flmul@a+1
  1271  126D  1683               	bsf	3,5	;RP0=1, select bank1
  1272  126E  1303               	bcf	3,6	;RP1=0, select bank1
  1273  126F  0862               	movf	_main$825^(0+128),w
  1274  1270  1283               	bcf	3,5	;RP0=0, select bank0
  1275  1271  1303               	bcf	3,6	;RP1=0, select bank0
  1276  1272  00A8               	movwf	___flmul@a
  1277  1273  120A  158A  249F  160A  118A  	fcall	___flmul
  1278  1278  1283               	bcf	3,5	;RP0=0, select bank0
  1279  1279  1303               	bcf	3,6	;RP1=0, select bank0
  1280  127A  0827               	movf	?___flmul+3,w
  1281  127B  1683               	bsf	3,5	;RP0=1, select bank1
  1282  127C  1303               	bcf	3,6	;RP1=0, select bank1
  1283  127D  00E1               	movwf	(main@Volt+3)^(0+128)
  1284  127E  1283               	bcf	3,5	;RP0=0, select bank0
  1285  127F  1303               	bcf	3,6	;RP1=0, select bank0
  1286  1280  0826               	movf	?___flmul+2,w
  1287  1281  1683               	bsf	3,5	;RP0=1, select bank1
  1288  1282  1303               	bcf	3,6	;RP1=0, select bank1
  1289  1283  00E0               	movwf	(main@Volt+2)^(0+128)
  1290  1284  1283               	bcf	3,5	;RP0=0, select bank0
  1291  1285  1303               	bcf	3,6	;RP1=0, select bank0
  1292  1286  0825               	movf	?___flmul+1,w
  1293  1287  1683               	bsf	3,5	;RP0=1, select bank1
  1294  1288  1303               	bcf	3,6	;RP1=0, select bank1
  1295  1289  00DF               	movwf	(main@Volt+1)^(0+128)
  1296  128A  1283               	bcf	3,5	;RP0=0, select bank0
  1297  128B  1303               	bcf	3,6	;RP1=0, select bank0
  1298  128C  0824               	movf	?___flmul,w
  1299  128D  1683               	bsf	3,5	;RP0=1, select bank1
  1300  128E  1303               	bcf	3,6	;RP1=0, select bank1
  1301  128F  00DE               	movwf	main@Volt^(0+128)
  1302  1290                     l3408:
  1303                           
  1304                           ;../../main.c: 22:         unsigned char string[25];;../../main.c: 23:         sprintf(s
      +                          tring,"%2.2fVolts",Volt);
  1305  1290  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1306  1291  1283               	bcf	3,5	;RP0=0, select bank0
  1307  1292  1303               	bcf	3,6	;RP1=0, select bank0
  1308  1293  00EE               	movwf	??_main
  1309  1294  086E               	movf	??_main,w
  1310  1295  1683               	bsf	3,5	;RP0=1, select bank1
  1311  1296  1303               	bcf	3,6	;RP1=0, select bank1
  1312  1297  00A0               	movwf	sprintf@f^(0+128)
  1313  1298  0861               	movf	(main@Volt+3)^(0+128),w
  1314  1299  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1315  129A  0860               	movf	(main@Volt+2)^(0+128),w
  1316  129B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1317  129C  085F               	movf	(main@Volt+1)^(0+128),w
  1318  129D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1319  129E  085E               	movf	main@Volt^(0+128),w
  1320  129F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1321  12A0  30C5               	movlw	(low (main@string| 0))& (0+255)
  1322  12A1  120A  118A  2073  160A  118A  	fcall	_sprintf
  1323  12A6                     l3410:
  1324                           
  1325                           ;../../main.c: 24:         WriteLCDLine1(string);
  1326  12A6  30C5               	movlw	(low (main@string| 0))& (0+255)
  1327  12A7  160A  158A  24AE  160A  118A  	fcall	_WriteLCDLine1
  1328  12AC  2A00               	goto	l90
  1329  12AD  120A  118A  2800   	ljmp	start
  1330  12B0                     __end_of_main:
  1331                           
  1332                           	psect	text1
  1333  0073                     __ptext1:	
  1334 ;; *************** function _sprintf *****************
  1335 ;; Defined at:
  1336 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  sp              1    wreg     PTR unsigned char 
  1339 ;;		 -> main@string(25), 
  1340 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1341 ;;		 -> STR_1(11), 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1344 ;;		 -> main@string(25), 
  1345 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1346 ;;  tmpval          4   23[BANK1 ] struct .
  1347 ;;  val             4   15[BANK1 ] unsigned long 
  1348 ;;  prec            2   34[BANK1 ] int 
  1349 ;;  eexp            2   27[BANK1 ] int 
  1350 ;;  width           2   21[BANK1 ] int 
  1351 ;;  flag            2   19[BANK1 ] unsigned short 
  1352 ;;  cp              2    0        PTR const unsigned char 
  1353 ;;  len             2    0        unsigned int 
  1354 ;;  c               1   36[BANK1 ] unsigned char 
  1355 ;;  ap              1   14[BANK1 ] PTR void [1]
  1356 ;;		 -> ?_sprintf(2), 
  1357 ;;  d               1    0        unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  2    0[BANK1 ] int 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       5       0       0
  1368 ;;      Locals:         0       0      27       0       0
  1369 ;;      Temps:          0       0       5       0       0
  1370 ;;      Totals:         0       0      37       0       0
  1371 ;;Total ram usage:       37 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 3
  1374 ;; This function calls:
  1375 ;;		___awdiv
  1376 ;;		___fladd
  1377 ;;		___fleq
  1378 ;;		___flge
  1379 ;;		___flmul
  1380 ;;		___flneg
  1381 ;;		___flsub
  1382 ;;		___fltol
  1383 ;;		___lldiv
  1384 ;;		___llmod
  1385 ;;		___wmul
  1386 ;;		___xxtofl
  1387 ;;		__div_to_l_
  1388 ;;		__tdiv_to_l_
  1389 ;;		_fround
  1390 ;;		_isdigit
  1391 ;;		_scale
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397  0073                     _sprintf:	
  1398                           ;psect for function _sprintf
  1399                           
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1403                           ;sprintf@sp stored from wreg
  1404  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0075  00C1               	movwf	sprintf@sp^(0+128)
  1407  0076                     l3114:
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1410  0076  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1411  0077  00A5               	movwf	??_sprintf^(0+128)
  1412  0078  0825               	movf	??_sprintf^(0+128),w
  1413  0079  00AE               	movwf	sprintf@ap^(0+128)
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1416  007A  2FD7               	goto	l3364
  1417  007B                     l3116:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1420  007B  3025               	movlw	37
  1421  007C  0644               	xorwf	sprintf@c^(0+128),w
  1422  007D  1903               	btfsc	3,2
  1423  007E  2880               	goto	u5091
  1424  007F  2881               	goto	u5090
  1425  0080                     u5091:
  1426  0080  288D               	goto	l3122
  1427  0081                     u5090:
  1428  0081                     l3118:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1431  0081  0844               	movf	sprintf@c^(0+128),w
  1432  0082  00A5               	movwf	??_sprintf^(0+128)
  1433  0083  0841               	movf	sprintf@sp^(0+128),w
  1434  0084  0084               	movwf	4
  1435  0085  0825               	movf	??_sprintf^(0+128),w
  1436  0086  1383               	bcf	3,7	;select IRP bank0
  1437  0087  0080               	movwf	0
  1438  0088                     l3120:
  1439  0088  3001               	movlw	1
  1440  0089  00A5               	movwf	??_sprintf^(0+128)
  1441  008A  0825               	movf	??_sprintf^(0+128),w
  1442  008B  07C1               	addwf	sprintf@sp^(0+128),f
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1445  008C  2FD7               	goto	l3364
  1446  008D                     l3122:
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1449  008D  01B5               	clrf	sprintf@width^(0+128)
  1450  008E  01B6               	clrf	(sprintf@width+1)^(0+128)
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1453  008F  01B3               	clrf	sprintf@flag^(0+128)
  1454  0090  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1455  0091                     l3124:
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1458  0091  0820               	movf	sprintf@f^(0+128),w
  1459  0092  0084               	movwf	4
  1460  0093  160A  158A  2000  120A  118A  	fcall	stringdir
  1461  0098  160A  158A  24BC  120A  118A  	fcall	_isdigit
  1462  009D  1C03               	btfss	3,0
  1463  009E  28A0               	goto	u5101
  1464  009F  28A1               	goto	u5100
  1465  00A0                     u5101:
  1466  00A0  28E1               	goto	l3136
  1467  00A1                     u5100:
  1468  00A1                     l3126:
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1471  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1472  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1473  00A3  01B5               	clrf	sprintf@width^(0+128)
  1474  00A4  01B6               	clrf	(sprintf@width+1)^(0+128)
  1475  00A5                     l3128:
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1478  00A5  300A               	movlw	10
  1479  00A6  00F0               	movwf	___wmul@multiplier
  1480  00A7  3000               	movlw	0
  1481  00A8  00F1               	movwf	___wmul@multiplier+1
  1482  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1483  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1484  00AB  0836               	movf	(sprintf@width+1)^(0+128),w
  1485  00AC  00F3               	movwf	___wmul@multiplicand+1
  1486  00AD  0835               	movf	sprintf@width^(0+128),w
  1487  00AE  00F2               	movwf	___wmul@multiplicand
  1488  00AF  160A  158A  2509  120A  118A  	fcall	___wmul
  1489  00B4  0871               	movf	?___wmul+1,w
  1490  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1491  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1492  00B7  00B6               	movwf	(sprintf@width+1)^(0+128)
  1493  00B8  0870               	movf	?___wmul,w
  1494  00B9  00B5               	movwf	sprintf@width^(0+128)
  1495  00BA                     l3130:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1498  00BA  0820               	movf	sprintf@f^(0+128),w
  1499  00BB  0084               	movwf	4
  1500  00BC  160A  158A  2000  120A  118A  	fcall	stringdir
  1501  00C1  3ED0               	addlw	208
  1502  00C2  00A5               	movwf	??_sprintf^(0+128)
  1503  00C3  30FF               	movlw	255
  1504  00C4  1803               	skipnc
  1505  00C5  3000               	movlw	0
  1506  00C6  00A6               	movwf	(??_sprintf^(0+128)+1)
  1507  00C7  0825               	movf	??_sprintf^(0+128),w
  1508  00C8  07B5               	addwf	sprintf@width^(0+128),f
  1509  00C9  1803               	skipnc
  1510  00CA  0AB6               	incf	(sprintf@width+1)^(0+128),f
  1511  00CB  0826               	movf	(??_sprintf+1)^(0+128),w
  1512  00CC  07B6               	addwf	(sprintf@width+1)^(0+128),f
  1513  00CD                     l3132:
  1514  00CD  3001               	movlw	1
  1515  00CE  00A5               	movwf	??_sprintf^(0+128)
  1516  00CF  0825               	movf	??_sprintf^(0+128),w
  1517  00D0  07A0               	addwf	sprintf@f^(0+128),f
  1518  00D1                     l3134:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1521  00D1  0820               	movf	sprintf@f^(0+128),w
  1522  00D2  0084               	movwf	4
  1523  00D3  160A  158A  2000  120A  118A  	fcall	stringdir
  1524  00D8  160A  158A  24BC  120A  118A  	fcall	_isdigit
  1525  00DD  1803               	btfsc	3,0
  1526  00DE  28E0               	goto	u5111
  1527  00DF  28E1               	goto	u5110
  1528  00E0                     u5111:
  1529  00E0  28A5               	goto	l3128
  1530  00E1                     u5110:
  1531  00E1                     l3136:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1534  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1535  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1536  00E3  0820               	movf	sprintf@f^(0+128),w
  1537  00E4  0084               	movwf	4
  1538  00E5  160A  158A  2000  120A  118A  	fcall	stringdir
  1539  00EA  3A2E               	xorlw	46
  1540  00EB  1D03               	skipz
  1541  00EC  28EE               	goto	u5121
  1542  00ED  28EF               	goto	u5120
  1543  00EE                     u5121:
  1544  00EE  2934               	goto	l3152
  1545  00EF                     u5120:
  1546  00EF                     l3138:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1549  00EF  1734               	bsf	(sprintf@flag^(0+128)+1),6
  1550  00F0                     l3140:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 630:    f++;
  1553  00F0  3001               	movlw	1
  1554  00F1  00A5               	movwf	??_sprintf^(0+128)
  1555  00F2  0825               	movf	??_sprintf^(0+128),w
  1556  00F3  07A0               	addwf	sprintf@f^(0+128),f
  1557  00F4                     l3142:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1560  00F4  01C2               	clrf	sprintf@prec^(0+128)
  1561  00F5  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1564  00F6  2923               	goto	l3150
  1565  00F7                     l3144:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1568  00F7  300A               	movlw	10
  1569  00F8  00F0               	movwf	___wmul@multiplier
  1570  00F9  3000               	movlw	0
  1571  00FA  00F1               	movwf	___wmul@multiplier+1
  1572  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1573  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1574  00FD  0843               	movf	(sprintf@prec+1)^(0+128),w
  1575  00FE  00F3               	movwf	___wmul@multiplicand+1
  1576  00FF  0842               	movf	sprintf@prec^(0+128),w
  1577  0100  00F2               	movwf	___wmul@multiplicand
  1578  0101  160A  158A  2509  120A  118A  	fcall	___wmul
  1579  0106  0871               	movf	?___wmul+1,w
  1580  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0109  00C3               	movwf	(sprintf@prec+1)^(0+128)
  1583  010A  0870               	movf	?___wmul,w
  1584  010B  00C2               	movwf	sprintf@prec^(0+128)
  1585  010C                     l3146:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1588  010C  0820               	movf	sprintf@f^(0+128),w
  1589  010D  0084               	movwf	4
  1590  010E  160A  158A  2000  120A  118A  	fcall	stringdir
  1591  0113  3ED0               	addlw	208
  1592  0114  00A5               	movwf	??_sprintf^(0+128)
  1593  0115  30FF               	movlw	255
  1594  0116  1803               	skipnc
  1595  0117  3000               	movlw	0
  1596  0118  00A6               	movwf	(??_sprintf^(0+128)+1)
  1597  0119  0825               	movf	??_sprintf^(0+128),w
  1598  011A  07C2               	addwf	sprintf@prec^(0+128),f
  1599  011B  1803               	skipnc
  1600  011C  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  1601  011D  0826               	movf	(??_sprintf+1)^(0+128),w
  1602  011E  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  1603  011F                     l3148:
  1604  011F  3001               	movlw	1
  1605  0120  00A5               	movwf	??_sprintf^(0+128)
  1606  0121  0825               	movf	??_sprintf^(0+128),w
  1607  0122  07A0               	addwf	sprintf@f^(0+128),f
  1608  0123                     l3150:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1611  0123  0820               	movf	sprintf@f^(0+128),w
  1612  0124  0084               	movwf	4
  1613  0125  160A  158A  2000  120A  118A  	fcall	stringdir
  1614  012A  160A  158A  24BC  120A  118A  	fcall	_isdigit
  1615  012F  1803               	btfsc	3,0
  1616  0130  2932               	goto	u5131
  1617  0131  2933               	goto	u5130
  1618  0132                     u5131:
  1619  0132  28F7               	goto	l3144
  1620  0133                     u5130:
  1621  0133  293A               	goto	l3158
  1622  0134                     l3152:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1625  0134  01C2               	clrf	sprintf@prec^(0+128)
  1626  0135  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1627  0136                     l3154:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1630  0136  1634               	bsf	(sprintf@flag^(0+128)+1),4
  1631  0137  293A               	goto	l3158
  1632  0138                     l224:	
  1633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1634                           
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1637  0138  1534               	bsf	(sprintf@flag^(0+128)+1),2
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 690:    break;
  1640  0139  2956               	goto	l3160
  1641  013A                     l3158:
  1642  013A  3001               	movlw	1
  1643  013B  1683               	bsf	3,5	;RP0=1, select bank1
  1644  013C  1303               	bcf	3,6	;RP1=0, select bank1
  1645  013D  07A0               	addwf	sprintf@f^(0+128),f
  1646  013E  30FF               	movlw	-1
  1647  013F  0720               	addwf	sprintf@f^(0+128),w
  1648  0140  0084               	movwf	4
  1649  0141  160A  158A  2000  120A  118A  	fcall	stringdir
  1650  0146  00C4               	movwf	sprintf@c^(0+128)
  1651  0147  00A5               	movwf	??_sprintf^(0+128)
  1652  0148  01A6               	clrf	(??_sprintf^(0+128)+1)
  1653                           
  1654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1655                           ; Switch size 1, requested type "simple"
  1656                           ; Number of cases is 1, Range of values is 0 to 0
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte            4     3 (average)
  1660                           ; direct_byte           11     8 (fixed)
  1661                           ; jumptable            260     6 (fixed)
  1662                           ;	Chosen strategy is simple_byte
  1663  0149  0826               	movf	(??_sprintf+1)^(0+128),w
  1664  014A  3A00               	xorlw	0	; case 0
  1665  014B  1903               	skipnz
  1666  014C  294E               	goto	l3442
  1667  014D  2FD7               	goto	l3364
  1668  014E                     l3442:
  1669                           
  1670                           ; Switch size 1, requested type "simple"
  1671                           ; Number of cases is 2, Range of values is 0 to 102
  1672                           ; switch strategies available:
  1673                           ; Name         Instructions Cycles
  1674                           ; simple_byte            7     4 (average)
  1675                           ; jumptable            260     6 (fixed)
  1676                           ;	Chosen strategy is simple_byte
  1677  014E  0825               	movf	??_sprintf^(0+128),w
  1678  014F  3A00               	xorlw	0	; case 0
  1679  0150  1903               	skipnz
  1680  0151  2FE9               	goto	l3366
  1681  0152  3A66               	xorlw	102	; case 102
  1682  0153  1903               	skipnz
  1683  0154  2938               	goto	l224
  1684  0155  2FD7               	goto	l3364
  1685  0156                     l3160:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1688  0156  3000               	movlw	0
  1689  0157  0533               	andwf	sprintf@flag^(0+128),w
  1690  0158  00A5               	movwf	??_sprintf^(0+128)
  1691  0159  3007               	movlw	7
  1692  015A  0534               	andwf	(sprintf@flag+1)^(0+128),w
  1693  015B  00A6               	movwf	(??_sprintf+1)^(0+128)
  1694  015C  0825               	movf	??_sprintf^(0+128),w
  1695  015D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1696  015E  1903               	btfsc	3,2
  1697  015F  2961               	goto	u5141
  1698  0160  2962               	goto	u5140
  1699  0161                     u5141:
  1700  0161  2F14               	goto	l3318
  1701  0162                     u5140:
  1702  0162                     l3162:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1705  0162  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  1706  0163  2965               	goto	u5151
  1707  0164  2966               	goto	u5150
  1708  0165                     u5151:
  1709  0165  296A               	goto	l3166
  1710  0166                     u5150:
  1711  0166                     l3164:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1714  0166  3006               	movlw	6
  1715  0167  00C2               	movwf	sprintf@prec^(0+128)
  1716  0168  3000               	movlw	0
  1717  0169  00C3               	movwf	(sprintf@prec^(0+128)+1)
  1718  016A                     l3166:
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1721  016A  082E               	movf	sprintf@ap^(0+128),w
  1722  016B  0084               	movwf	4
  1723  016C  1383               	bcf	3,7	;select IRP bank0
  1724  016D  0800               	movf	0,w
  1725  016E  00BD               	movwf	sprintf@fval^(0+128)
  1726  016F  0A84               	incf	4,f
  1727  0170  0800               	movf	0,w
  1728  0171  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1729  0172  0A84               	incf	4,f
  1730  0173  0800               	movf	0,w
  1731  0174  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1732  0175  0A84               	incf	4,f
  1733  0176  0800               	movf	0,w
  1734  0177  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1735  0178                     l3168:
  1736  0178  3004               	movlw	4
  1737  0179  00A5               	movwf	??_sprintf^(0+128)
  1738  017A  0825               	movf	??_sprintf^(0+128),w
  1739  017B  07AE               	addwf	sprintf@ap^(0+128),f
  1740  017C                     l3170:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1743  017C  0840               	movf	(sprintf@fval+3)^(0+128),w
  1744  017D  00F3               	movwf	___flge@ff1+3
  1745  017E  083F               	movf	(sprintf@fval+2)^(0+128),w
  1746  017F  00F2               	movwf	___flge@ff1+2
  1747  0180  083E               	movf	(sprintf@fval+1)^(0+128),w
  1748  0181  00F1               	movwf	___flge@ff1+1
  1749  0182  083D               	movf	sprintf@fval^(0+128),w
  1750  0183  00F0               	movwf	___flge@ff1
  1751  0184  3000               	movlw	0
  1752  0185  00F7               	movwf	___flge@ff2+3
  1753  0186  3000               	movlw	0
  1754  0187  00F6               	movwf	___flge@ff2+2
  1755  0188  3000               	movlw	0
  1756  0189  00F5               	movwf	___flge@ff2+1
  1757  018A  3000               	movlw	0
  1758  018B  00F4               	movwf	___flge@ff2
  1759  018C  160A  118A  209A  120A  118A  	fcall	___flge
  1760  0191  1803               	btfsc	3,0
  1761  0192  2994               	goto	u5161
  1762  0193  2995               	goto	u5160
  1763  0194                     u5161:
  1764  0194  29B2               	goto	l3176
  1765  0195                     u5160:
  1766  0195                     l3172:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1769  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1770  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1771  0197  0840               	movf	(sprintf@fval+3)^(0+128),w
  1772  0198  00F3               	movwf	___flneg@f1+3
  1773  0199  083F               	movf	(sprintf@fval+2)^(0+128),w
  1774  019A  00F2               	movwf	___flneg@f1+2
  1775  019B  083E               	movf	(sprintf@fval+1)^(0+128),w
  1776  019C  00F1               	movwf	___flneg@f1+1
  1777  019D  083D               	movf	sprintf@fval^(0+128),w
  1778  019E  00F0               	movwf	___flneg@f1
  1779  019F  160A  158A  24A3  120A  118A  	fcall	___flneg
  1780  01A4  0873               	movf	?___flneg+3,w
  1781  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1782  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  1783  01A7  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1784  01A8  0872               	movf	?___flneg+2,w
  1785  01A9  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1786  01AA  0871               	movf	?___flneg+1,w
  1787  01AB  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1788  01AC  0870               	movf	?___flneg,w
  1789  01AD  00BD               	movwf	sprintf@fval^(0+128)
  1790  01AE                     l3174:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1793  01AE  3003               	movlw	3
  1794  01AF  04B3               	iorwf	sprintf@flag^(0+128),f
  1795  01B0  3000               	movlw	0
  1796  01B1  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  1797  01B2                     l3176:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1800  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1801  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1802  01B4  01BB               	clrf	sprintf@eexp^(0+128)
  1803  01B5  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  1804  01B6                     l3178:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1807  01B6  0840               	movf	(sprintf@fval+3)^(0+128),w
  1808  01B7  00F3               	movwf	___fleq@ff1+3
  1809  01B8  083F               	movf	(sprintf@fval+2)^(0+128),w
  1810  01B9  00F2               	movwf	___fleq@ff1+2
  1811  01BA  083E               	movf	(sprintf@fval+1)^(0+128),w
  1812  01BB  00F1               	movwf	___fleq@ff1+1
  1813  01BC  083D               	movf	sprintf@fval^(0+128),w
  1814  01BD  00F0               	movwf	___fleq@ff1
  1815  01BE  3000               	movlw	0
  1816  01BF  00F7               	movwf	___fleq@ff2+3
  1817  01C0  3000               	movlw	0
  1818  01C1  00F6               	movwf	___fleq@ff2+2
  1819  01C2  3000               	movlw	0
  1820  01C3  00F5               	movwf	___fleq@ff2+1
  1821  01C4  3000               	movlw	0
  1822  01C5  00F4               	movwf	___fleq@ff2
  1823  01C6  160A  158A  26A1  120A  118A  	fcall	___fleq
  1824  01CB  1803               	btfsc	3,0
  1825  01CC  29CE               	goto	u5171
  1826  01CD  29CF               	goto	u5170
  1827  01CE                     u5171:
  1828  01CE  2ABF               	goto	l3204
  1829  01CF                     u5170:
  1830  01CF                     l3180:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1833  01CF  1003               	clrc
  1834  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1835  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1836  01D2  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  1837  01D3  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  1838  01D4  3E82               	addlw	130
  1839  01D5  00BB               	movwf	sprintf@eexp^(0+128)
  1840  01D6  30FF               	movlw	255
  1841  01D7  1803               	skipnc
  1842  01D8  3000               	movlw	0
  1843  01D9  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  1844  01DA                     l3182:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1847  01DA  30FF               	movlw	255
  1848  01DB  07BB               	addwf	sprintf@eexp^(0+128),f
  1849  01DC  1803               	skipnc
  1850  01DD  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1851  01DE  30FF               	movlw	255
  1852  01DF  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1853  01E0                     l3184:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1856  01E0  3003               	movlw	3
  1857  01E1  00F0               	movwf	___wmul@multiplier
  1858  01E2  3000               	movlw	0
  1859  01E3  00F1               	movwf	___wmul@multiplier+1
  1860  01E4  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1861  01E5  00F3               	movwf	___wmul@multiplicand+1
  1862  01E6  083B               	movf	sprintf@eexp^(0+128),w
  1863  01E7  00F2               	movwf	___wmul@multiplicand
  1864  01E8  160A  158A  2509  120A  118A  	fcall	___wmul
  1865  01ED  0871               	movf	?___wmul+1,w
  1866  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1867  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1868  01F0  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1869  01F1  0870               	movf	?___wmul,w
  1870  01F2  00BB               	movwf	sprintf@eexp^(0+128)
  1871  01F3                     l3186:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1874  01F3  300A               	movlw	10
  1875  01F4  00F7               	movwf	___awdiv@divisor
  1876  01F5  3000               	movlw	0
  1877  01F6  00F8               	movwf	___awdiv@divisor+1
  1878  01F7  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1879  01F8  00FA               	movwf	___awdiv@dividend+1
  1880  01F9  083B               	movf	sprintf@eexp^(0+128),w
  1881  01FA  00F9               	movwf	___awdiv@dividend
  1882  01FB  120A  118A  200A  120A  118A  	fcall	___awdiv
  1883  0200  0878               	movf	?___awdiv+1,w
  1884  0201  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0202  1303               	bcf	3,6	;RP1=0, select bank1
  1886  0203  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1887  0204  0877               	movf	?___awdiv,w
  1888  0205  00BB               	movwf	sprintf@eexp^(0+128)
  1889  0206                     l3188:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1892  0206  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  1893  0207  2A09               	goto	u5181
  1894  0208  2A0A               	goto	u5180
  1895  0209                     u5181:
  1896  0209  2A10               	goto	l3192
  1897  020A                     u5180:
  1898  020A                     l3190:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1901  020A  30FF               	movlw	255
  1902  020B  07BB               	addwf	sprintf@eexp^(0+128),f
  1903  020C  1803               	skipnc
  1904  020D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1905  020E  30FF               	movlw	255
  1906  020F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1907  0210                     l3192:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1910  0210  033B               	decf	sprintf@eexp^(0+128),w
  1911  0211  3AFF               	xorlw	255
  1912  0212  120A  158A  2140  120A  118A  	fcall	_scale
  1913  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0219  0841               	movf	?_scale+3,w
  1916  021A  1683               	bsf	3,5	;RP0=1, select bank1
  1917  021B  1303               	bcf	3,6	;RP1=0, select bank1
  1918  021C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1919  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1920  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1921  021F  0840               	movf	?_scale+2,w
  1922  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1924  0222  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1925  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0225  083F               	movf	?_scale+1,w
  1928  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1929  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1930  0228  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1931  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1932  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1933  022B  083E               	movf	?_scale,w
  1934  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1935  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1936  022E  00B7               	movwf	sprintf@tmpval^(0+128)
  1937  022F                     l3194:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1940  022F  0840               	movf	(sprintf@fval+3)^(0+128),w
  1941  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0232  00A7               	movwf	___flmul@b+3
  1944  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1946  0235  083F               	movf	(sprintf@fval+2)^(0+128),w
  1947  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0238  00A6               	movwf	___flmul@b+2
  1950  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1951  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1952  023B  083E               	movf	(sprintf@fval+1)^(0+128),w
  1953  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1954  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1955  023E  00A5               	movwf	___flmul@b+1
  1956  023F  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0240  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0241  083D               	movf	sprintf@fval^(0+128),w
  1959  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0244  00A4               	movwf	___flmul@b
  1962  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0247  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1965  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1967  024A  00AB               	movwf	___flmul@a+3
  1968  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1969  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1970  024D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1971  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1972  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0250  00AA               	movwf	___flmul@a+2
  1974  0251  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0252  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0253  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1977  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0256  00A9               	movwf	___flmul@a+1
  1980  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1981  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1982  0259  0837               	movf	sprintf@tmpval^(0+128),w
  1983  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1984  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1985  025C  00A8               	movwf	___flmul@a
  1986  025D  120A  158A  249F  120A  118A  	fcall	___flmul
  1987  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0264  0827               	movf	?___flmul+3,w
  1990  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1991  0266  1303               	bcf	3,6	;RP1=0, select bank1
  1992  0267  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1993  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1995  026A  0826               	movf	?___flmul+2,w
  1996  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1997  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1998  026D  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1999  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2000  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0270  0825               	movf	?___flmul+1,w
  2002  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0273  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2005  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0276  0824               	movf	?___flmul,w
  2008  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0278  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0279  00B7               	movwf	sprintf@tmpval^(0+128)
  2011  027A                     l3196:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2014  027A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2015  027B  00F3               	movwf	___flge@ff1+3
  2016  027C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2017  027D  00F2               	movwf	___flge@ff1+2
  2018  027E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2019  027F  00F1               	movwf	___flge@ff1+1
  2020  0280  0837               	movf	sprintf@tmpval^(0+128),w
  2021  0281  00F0               	movwf	___flge@ff1
  2022  0282  303F               	movlw	63
  2023  0283  00F7               	movwf	___flge@ff2+3
  2024  0284  3080               	movlw	128
  2025  0285  00F6               	movwf	___flge@ff2+2
  2026  0286  3000               	movlw	0
  2027  0287  00F5               	movwf	___flge@ff2+1
  2028  0288  3000               	movlw	0
  2029  0289  00F4               	movwf	___flge@ff2
  2030  028A  160A  118A  209A  120A  118A  	fcall	___flge
  2031  028F  1803               	btfsc	3,0
  2032  0290  2A92               	goto	u5191
  2033  0291  2A93               	goto	u5190
  2034  0292                     u5191:
  2035  0292  2A9C               	goto	l3200
  2036  0293                     u5190:
  2037  0293                     l3198:
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2040  0293  30FF               	movlw	255
  2041  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0296  07BB               	addwf	sprintf@eexp^(0+128),f
  2044  0297  1803               	skipnc
  2045  0298  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2046  0299  30FF               	movlw	255
  2047  029A  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2048  029B  2ABF               	goto	l3204
  2049  029C                     l3200:
  2050  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2051  029D  1303               	bcf	3,6	;RP1=0, select bank1
  2052  029E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2053  029F  00F3               	movwf	___flge@ff1+3
  2054  02A0  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2055  02A1  00F2               	movwf	___flge@ff1+2
  2056  02A2  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2057  02A3  00F1               	movwf	___flge@ff1+1
  2058  02A4  0837               	movf	sprintf@tmpval^(0+128),w
  2059  02A5  00F0               	movwf	___flge@ff1
  2060  02A6  3041               	movlw	65
  2061  02A7  00F7               	movwf	___flge@ff2+3
  2062  02A8  3020               	movlw	32
  2063  02A9  00F6               	movwf	___flge@ff2+2
  2064  02AA  3000               	movlw	0
  2065  02AB  00F5               	movwf	___flge@ff2+1
  2066  02AC  3000               	movlw	0
  2067  02AD  00F4               	movwf	___flge@ff2
  2068  02AE  160A  118A  209A  120A  118A  	fcall	___flge
  2069  02B3  1C03               	btfss	3,0
  2070  02B4  2AB6               	goto	u5201
  2071  02B5  2AB7               	goto	u5200
  2072  02B6                     u5201:
  2073  02B6  2ABF               	goto	l3204
  2074  02B7                     u5200:
  2075  02B7                     l3202:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2078  02B7  3001               	movlw	1
  2079  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2080  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2081  02BA  07BB               	addwf	sprintf@eexp^(0+128),f
  2082  02BB  1803               	skipnc
  2083  02BC  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2084  02BD  3000               	movlw	0
  2085  02BE  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2086  02BF                     l3204:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2089  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2090  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2091  02C1  0843               	movf	(sprintf@prec+1)^(0+128),w
  2092  02C2  3A80               	xorlw	128
  2093  02C3  00FF               	movwf	btemp+1
  2094  02C4  3080               	movlw	128
  2095  02C5  027F               	subwf	btemp+1,w
  2096  02C6  1D03               	skipz
  2097  02C7  2ACA               	goto	u5215
  2098  02C8  300D               	movlw	13
  2099  02C9  0242               	subwf	sprintf@prec^(0+128),w
  2100  02CA                     u5215:
  2101  02CA  1803               	skipnc
  2102  02CB  2ACD               	goto	u5211
  2103  02CC  2ACE               	goto	u5210
  2104  02CD                     u5211:
  2105  02CD  2B15               	goto	l3208
  2106  02CE                     u5210:
  2107  02CE                     l3206:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2110  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2111  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2112  02D0  0842               	movf	sprintf@prec^(0+128),w
  2113  02D1  160A  118A  236D  120A  118A  	fcall	_fround
  2114  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2115  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2116  02D8  0841               	movf	?_fround+3,w
  2117  02D9  00D5               	movwf	___fladd@b+3
  2118  02DA  0840               	movf	?_fround+2,w
  2119  02DB  00D4               	movwf	___fladd@b+2
  2120  02DC  083F               	movf	?_fround+1,w
  2121  02DD  00D3               	movwf	___fladd@b+1
  2122  02DE  083E               	movf	?_fround,w
  2123  02DF  00D2               	movwf	___fladd@b
  2124  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  2125  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  2126  02E2  0840               	movf	(sprintf@fval+3)^(0+128),w
  2127  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2128  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2129  02E5  00D9               	movwf	___fladd@a+3
  2130  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2131  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2132  02E8  083F               	movf	(sprintf@fval+2)^(0+128),w
  2133  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2134  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2135  02EB  00D8               	movwf	___fladd@a+2
  2136  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2137  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2138  02EE  083E               	movf	(sprintf@fval+1)^(0+128),w
  2139  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2140  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2141  02F1  00D7               	movwf	___fladd@a+1
  2142  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2143  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2144  02F4  083D               	movf	sprintf@fval^(0+128),w
  2145  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2146  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2147  02F7  00D6               	movwf	___fladd@a
  2148  02F8  160A  118A  2578  120A  118A  	fcall	___fladd
  2149  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2150  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2151  02FF  0855               	movf	?___fladd+3,w
  2152  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2153  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2154  0302  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2155  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0305  0854               	movf	?___fladd+2,w
  2158  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2159  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2160  0308  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2161  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2162  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2163  030B  0853               	movf	?___fladd+1,w
  2164  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2165  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2166  030E  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2167  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0311  0852               	movf	?___fladd,w
  2170  0312  1683               	bsf	3,5	;RP0=1, select bank1
  2171  0313  1303               	bcf	3,6	;RP1=0, select bank1
  2172  0314  00BD               	movwf	sprintf@fval^(0+128)
  2173  0315                     l3208:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2176  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2178  0317  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2179  0318  3A80               	xorlw	128
  2180  0319  00FF               	movwf	btemp+1
  2181  031A  3080               	movlw	128
  2182  031B  027F               	subwf	btemp+1,w
  2183  031C  1D03               	skipz
  2184  031D  2B20               	goto	u5225
  2185  031E  300A               	movlw	10
  2186  031F  023B               	subwf	sprintf@eexp^(0+128),w
  2187  0320                     u5225:
  2188  0320  1803               	skipnc
  2189  0321  2B23               	goto	u5221
  2190  0322  2B24               	goto	u5220
  2191  0323                     u5221:
  2192  0323  2B75               	goto	l3216
  2193  0324                     u5220:
  2194  0324                     l3210:
  2195  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0326  0840               	movf	(sprintf@fval+3)^(0+128),w
  2198  0327  00F3               	movwf	___fleq@ff1+3
  2199  0328  083F               	movf	(sprintf@fval+2)^(0+128),w
  2200  0329  00F2               	movwf	___fleq@ff1+2
  2201  032A  083E               	movf	(sprintf@fval+1)^(0+128),w
  2202  032B  00F1               	movwf	___fleq@ff1+1
  2203  032C  083D               	movf	sprintf@fval^(0+128),w
  2204  032D  00F0               	movwf	___fleq@ff1
  2205  032E  3000               	movlw	0
  2206  032F  00F7               	movwf	___fleq@ff2+3
  2207  0330  3000               	movlw	0
  2208  0331  00F6               	movwf	___fleq@ff2+2
  2209  0332  3000               	movlw	0
  2210  0333  00F5               	movwf	___fleq@ff2+1
  2211  0334  3000               	movlw	0
  2212  0335  00F4               	movwf	___fleq@ff2
  2213  0336  160A  158A  26A1  120A  118A  	fcall	___fleq
  2214  033B  1803               	btfsc	3,0
  2215  033C  2B3E               	goto	u5231
  2216  033D  2B3F               	goto	u5230
  2217  033E                     u5231:
  2218  033E  2BE7               	goto	l3230
  2219  033F                     u5230:
  2220  033F                     l3212:
  2221  033F  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0340  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0341  0840               	movf	(sprintf@fval+3)^(0+128),w
  2224  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0344  00D4               	movwf	___fltol@f1+3
  2227  0345  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0346  1303               	bcf	3,6	;RP1=0, select bank1
  2229  0347  083F               	movf	(sprintf@fval+2)^(0+128),w
  2230  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2232  034A  00D3               	movwf	___fltol@f1+2
  2233  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2234  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2235  034D  083E               	movf	(sprintf@fval+1)^(0+128),w
  2236  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2237  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0350  00D2               	movwf	___fltol@f1+1
  2239  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2240  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2241  0353  083D               	movf	sprintf@fval^(0+128),w
  2242  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0356  00D1               	movwf	___fltol@f1
  2245  0357  120A  158A  2006  120A  118A  	fcall	___fltol
  2246  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2247  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2248  035E  0854               	movf	?___fltol+3,w
  2249  035F  0453               	iorwf	?___fltol+2,w
  2250  0360  0452               	iorwf	?___fltol+1,w
  2251  0361  0451               	iorwf	?___fltol,w
  2252  0362  1D03               	skipz
  2253  0363  2B65               	goto	u5241
  2254  0364  2B66               	goto	u5240
  2255  0365                     u5241:
  2256  0365  2BE7               	goto	l3230
  2257  0366                     u5240:
  2258  0366                     l3214:
  2259  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0368  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2262  0369  3A80               	xorlw	128
  2263  036A  00FF               	movwf	btemp+1
  2264  036B  3080               	movlw	128
  2265  036C  027F               	subwf	btemp+1,w
  2266  036D  1D03               	skipz
  2267  036E  2B71               	goto	u5255
  2268  036F  3002               	movlw	2
  2269  0370  023B               	subwf	sprintf@eexp^(0+128),w
  2270  0371                     u5255:
  2271  0371  1C03               	skipc
  2272  0372  2B74               	goto	u5251
  2273  0373  2B75               	goto	u5250
  2274  0374                     u5251:
  2275  0374  2BE7               	goto	l3230
  2276  0375                     u5250:
  2277  0375                     l3216:
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2280  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2282  0377  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2283  0378  00F3               	movwf	___flge@ff1+3
  2284  0379  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2285  037A  00F2               	movwf	___flge@ff1+2
  2286  037B  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2287  037C  00F1               	movwf	___flge@ff1+1
  2288  037D  0837               	movf	sprintf@tmpval^(0+128),w
  2289  037E  00F0               	movwf	___flge@ff1
  2290  037F  3040               	movlw	64
  2291  0380  00F7               	movwf	___flge@ff2+3
  2292  0381  3089               	movlw	137
  2293  0382  00F6               	movwf	___flge@ff2+2
  2294  0383  3070               	movlw	112
  2295  0384  00F5               	movwf	___flge@ff2+1
  2296  0385  305F               	movlw	95
  2297  0386  00F4               	movwf	___flge@ff2
  2298  0387  160A  118A  209A  120A  118A  	fcall	___flge
  2299  038C  1803               	btfsc	3,0
  2300  038D  2B8F               	goto	u5261
  2301  038E  2B90               	goto	u5260
  2302  038F                     u5261:
  2303  038F  2B99               	goto	l3220
  2304  0390                     u5260:
  2305  0390                     l3218:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2308  0390  30F7               	movlw	247
  2309  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2311  0393  07BB               	addwf	sprintf@eexp^(0+128),f
  2312  0394  1803               	skipnc
  2313  0395  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2314  0396  30FF               	movlw	255
  2315  0397  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2318  0398  2BA1               	goto	l3222
  2319  0399                     l3220:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2322  0399  30F8               	movlw	248
  2323  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2324  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2325  039C  07BB               	addwf	sprintf@eexp^(0+128),f
  2326  039D  1803               	skipnc
  2327  039E  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2328  039F  30FF               	movlw	255
  2329  03A0  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2330  03A1                     l3222:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2333  03A1  083B               	movf	sprintf@eexp^(0+128),w
  2334  03A2  120A  158A  2140  120A  118A  	fcall	_scale
  2335  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2336  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2337  03A9  0841               	movf	?_scale+3,w
  2338  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2339  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2340  03AC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2341  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2342  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2343  03AF  0840               	movf	?_scale+2,w
  2344  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2345  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2346  03B2  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2347  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2348  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2349  03B5  083F               	movf	?_scale+1,w
  2350  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2351  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2352  03B8  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2353  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2354  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2355  03BB  083E               	movf	?_scale,w
  2356  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2357  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2358  03BE  00B7               	movwf	sprintf@tmpval^(0+128)
  2359  03BF                     l3224:
  2360  03BF  0840               	movf	(sprintf@fval+3)^(0+128),w
  2361  03C0  00F3               	movwf	__div_to_l_@f1+3
  2362  03C1  083F               	movf	(sprintf@fval+2)^(0+128),w
  2363  03C2  00F2               	movwf	__div_to_l_@f1+2
  2364  03C3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2365  03C4  00F1               	movwf	__div_to_l_@f1+1
  2366  03C5  083D               	movf	sprintf@fval^(0+128),w
  2367  03C6  00F0               	movwf	__div_to_l_@f1
  2368  03C7  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2369  03C8  00F7               	movwf	__div_to_l_@f2+3
  2370  03C9  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2371  03CA  00F6               	movwf	__div_to_l_@f2+2
  2372  03CB  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2373  03CC  00F5               	movwf	__div_to_l_@f2+1
  2374  03CD  0837               	movf	sprintf@tmpval^(0+128),w
  2375  03CE  00F4               	movwf	__div_to_l_@f2
  2376  03CF  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2377  03D4  0873               	movf	?__div_to_l_+3,w
  2378  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  2379  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  2380  03D7  00B2               	movwf	(sprintf@val+3)^(0+128)
  2381  03D8  0872               	movf	?__div_to_l_+2,w
  2382  03D9  00B1               	movwf	(sprintf@val+2)^(0+128)
  2383  03DA  0871               	movf	?__div_to_l_+1,w
  2384  03DB  00B0               	movwf	(sprintf@val+1)^(0+128)
  2385  03DC  0870               	movf	?__div_to_l_,w
  2386  03DD  00AF               	movwf	sprintf@val^(0+128)
  2387  03DE                     l3228:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2390  03DE  3000               	movlw	0
  2391  03DF  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2392  03E0  3000               	movlw	0
  2393  03E1  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2394  03E2  3000               	movlw	0
  2395  03E3  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2396  03E4  3000               	movlw	0
  2397  03E5  00BD               	movwf	sprintf@fval^(0+128)
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2400  03E6  2C6B               	goto	l3236
  2401  03E7                     l3230:
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2404  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2405  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2406  03E9  0840               	movf	(sprintf@fval+3)^(0+128),w
  2407  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2408  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2409  03EC  00D4               	movwf	___fltol@f1+3
  2410  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2411  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2412  03EF  083F               	movf	(sprintf@fval+2)^(0+128),w
  2413  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2414  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2415  03F2  00D3               	movwf	___fltol@f1+2
  2416  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2417  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2418  03F5  083E               	movf	(sprintf@fval+1)^(0+128),w
  2419  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2420  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2421  03F8  00D2               	movwf	___fltol@f1+1
  2422  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2423  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2424  03FB  083D               	movf	sprintf@fval^(0+128),w
  2425  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2426  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2427  03FE  00D1               	movwf	___fltol@f1
  2428  03FF  120A  158A  2006  120A  118A  	fcall	___fltol
  2429  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0406  0854               	movf	?___fltol+3,w
  2432  0407  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0408  1303               	bcf	3,6	;RP1=0, select bank1
  2434  0409  00B2               	movwf	(sprintf@val+3)^(0+128)
  2435  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2436  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2437  040C  0853               	movf	?___fltol+2,w
  2438  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2439  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2440  040F  00B1               	movwf	(sprintf@val+2)^(0+128)
  2441  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0412  0852               	movf	?___fltol+1,w
  2444  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2446  0415  00B0               	movwf	(sprintf@val+1)^(0+128)
  2447  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0418  0851               	movf	?___fltol,w
  2450  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2451  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2452  041B  00AF               	movwf	sprintf@val^(0+128)
  2453  041C                     l3232:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2456  041C  0832               	movf	(sprintf@val+3)^(0+128),w
  2457  041D  00F3               	movwf	___xxtofl@val+3
  2458  041E  0831               	movf	(sprintf@val+2)^(0+128),w
  2459  041F  00F2               	movwf	___xxtofl@val+2
  2460  0420  0830               	movf	(sprintf@val+1)^(0+128),w
  2461  0421  00F1               	movwf	___xxtofl@val+1
  2462  0422  082F               	movf	sprintf@val^(0+128),w
  2463  0423  00F0               	movwf	___xxtofl@val
  2464  0424  3000               	movlw	0
  2465  0425  160A  118A  213C  120A  118A  	fcall	___xxtofl
  2466  042A  0873               	movf	?___xxtofl+3,w
  2467  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2468  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2469  042D  00E9               	movwf	___flsub@a+3
  2470  042E  0872               	movf	?___xxtofl+2,w
  2471  042F  00E8               	movwf	___flsub@a+2
  2472  0430  0871               	movf	?___xxtofl+1,w
  2473  0431  00E7               	movwf	___flsub@a+1
  2474  0432  0870               	movf	?___xxtofl,w
  2475  0433  00E6               	movwf	___flsub@a
  2476  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0436  0840               	movf	(sprintf@fval+3)^(0+128),w
  2479  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0439  00ED               	movwf	___flsub@b+3
  2482  043A  1683               	bsf	3,5	;RP0=1, select bank1
  2483  043B  1303               	bcf	3,6	;RP1=0, select bank1
  2484  043C  083F               	movf	(sprintf@fval+2)^(0+128),w
  2485  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2486  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2487  043F  00EC               	movwf	___flsub@b+2
  2488  0440  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0441  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0442  083E               	movf	(sprintf@fval+1)^(0+128),w
  2491  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0445  00EB               	movwf	___flsub@b+1
  2494  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0448  083D               	movf	sprintf@fval^(0+128),w
  2497  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2498  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2499  044B  00EA               	movwf	___flsub@b
  2500  044C  160A  158A  24E5  120A  118A  	fcall	___flsub
  2501  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0453  0869               	movf	?___flsub+3,w
  2504  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2506  0456  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2507  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0459  0868               	movf	?___flsub+2,w
  2510  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2511  045B  1303               	bcf	3,6	;RP1=0, select bank1
  2512  045C  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2513  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2514  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2515  045F  0867               	movf	?___flsub+1,w
  2516  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0462  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2519  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0465  0866               	movf	?___flsub,w
  2522  0466  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0467  1303               	bcf	3,6	;RP1=0, select bank1
  2524  0468  00BD               	movwf	sprintf@fval^(0+128)
  2525  0469                     l3234:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2528  0469  01BB               	clrf	sprintf@eexp^(0+128)
  2529  046A  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2530  046B                     l3236:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2533  046B  01C4               	clrf	sprintf@c^(0+128)
  2534  046C  0AC4               	incf	sprintf@c^(0+128),f
  2535  046D                     l3242:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2538  046D  0844               	movf	sprintf@c^(0+128),w
  2539  046E  00A5               	movwf	??_sprintf^(0+128)
  2540  046F  3001               	movlw	1
  2541  0470                     u5275:
  2542  0470  1003               	clrc
  2543  0471  0DA5               	rlf	??_sprintf^(0+128),f
  2544  0472  3EFF               	addlw	-1
  2545  0473  1D03               	skipz
  2546  0474  2C70               	goto	u5275
  2547  0475  1003               	clrc
  2548  0476  0D25               	rlf	??_sprintf^(0+128),w
  2549  0477  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2550  0478  0084               	movwf	4
  2551  0479  160A  158A  2000  120A  118A  	fcall	stringdir
  2552  047E  00A6               	movwf	(??_sprintf+1)^(0+128)
  2553  047F  160A  158A  2000  120A  118A  	fcall	stringdir
  2554  0484  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2555  0485  160A  158A  2000  120A  118A  	fcall	stringdir
  2556  048A  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2557  048B  160A  158A  2000  120A  118A  	fcall	stringdir
  2558  0490  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2559  0491  0829               	movf	(??_sprintf+4)^(0+128),w
  2560  0492  0232               	subwf	(sprintf@val+3)^(0+128),w
  2561  0493  1D03               	skipz
  2562  0494  2C9F               	goto	u5285
  2563  0495  0828               	movf	(??_sprintf+3)^(0+128),w
  2564  0496  0231               	subwf	(sprintf@val+2)^(0+128),w
  2565  0497  1D03               	skipz
  2566  0498  2C9F               	goto	u5285
  2567  0499  0827               	movf	(??_sprintf+2)^(0+128),w
  2568  049A  0230               	subwf	(sprintf@val+1)^(0+128),w
  2569  049B  1D03               	skipz
  2570  049C  2C9F               	goto	u5285
  2571  049D  0826               	movf	(??_sprintf+1)^(0+128),w
  2572  049E  022F               	subwf	sprintf@val^(0+128),w
  2573  049F                     u5285:
  2574  049F  1803               	skipnc
  2575  04A0  2CA2               	goto	u5281
  2576  04A1  2CA3               	goto	u5280
  2577  04A2                     u5281:
  2578  04A2  2CA4               	goto	l3246
  2579  04A3                     u5280:
  2580  04A3  2CAE               	goto	l3248
  2581  04A4                     l3246:
  2582  04A4  3001               	movlw	1
  2583  04A5  00A5               	movwf	??_sprintf^(0+128)
  2584  04A6  0825               	movf	??_sprintf^(0+128),w
  2585  04A7  07C4               	addwf	sprintf@c^(0+128),f
  2586  04A8  300A               	movlw	10
  2587  04A9  0644               	xorwf	sprintf@c^(0+128),w
  2588  04AA  1D03               	btfss	3,2
  2589  04AB  2CAD               	goto	u5291
  2590  04AC  2CAE               	goto	u5290
  2591  04AD                     u5291:
  2592  04AD  2C6D               	goto	l3242
  2593  04AE                     u5290:
  2594  04AE                     l3248:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2597  04AE  0844               	movf	sprintf@c^(0+128),w
  2598  04AF  0742               	addwf	sprintf@prec^(0+128),w
  2599  04B0  00A5               	movwf	??_sprintf^(0+128)
  2600  04B1  0843               	movf	(sprintf@prec+1)^(0+128),w
  2601  04B2  1803               	skipnc
  2602  04B3  0A43               	incf	(sprintf@prec+1)^(0+128),w
  2603  04B4  00A6               	movwf	(??_sprintf^(0+128)+1)
  2604  04B5  083B               	movf	sprintf@eexp^(0+128),w
  2605  04B6  0725               	addwf	??_sprintf^(0+128),w
  2606  04B7  00A7               	movwf	(??_sprintf+2)^(0+128)
  2607  04B8  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2608  04B9  1803               	skipnc
  2609  04BA  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  2610  04BB  0726               	addwf	(??_sprintf+1)^(0+128),w
  2611  04BC  00A8               	movwf	(??_sprintf+3)^(0+128)
  2612  04BD  0827               	movf	(??_sprintf+2)^(0+128),w
  2613  04BE  02B5               	subwf	sprintf@width^(0+128),f
  2614  04BF  0828               	movf	(??_sprintf+3)^(0+128),w
  2615  04C0  1C03               	skipc
  2616  04C1  03B6               	decf	(sprintf@width+1)^(0+128),f
  2617  04C2  02B6               	subwf	(sprintf@width+1)^(0+128),f
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1169:     if(
  2620  04C3  0842               	movf	sprintf@prec^(0+128),w
  2621  04C4  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  2622  04C5  1903               	btfsc	3,2
  2623  04C6  2CC8               	goto	u5301
  2624  04C7  2CC9               	goto	u5300
  2625  04C8                     u5301:
  2626  04C8  2CCF               	goto	l3252
  2627  04C9                     u5300:
  2628  04C9                     l3250:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2631  04C9  30FF               	movlw	255
  2632  04CA  07B5               	addwf	sprintf@width^(0+128),f
  2633  04CB  1803               	skipnc
  2634  04CC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2635  04CD  30FF               	movlw	255
  2636  04CE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2637  04CF                     l3252:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2640  04CF  3003               	movlw	3
  2641  04D0  0533               	andwf	sprintf@flag^(0+128),w
  2642  04D1  00A5               	movwf	??_sprintf^(0+128)
  2643  04D2  3000               	movlw	0
  2644  04D3  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2645  04D4  00A6               	movwf	(??_sprintf+1)^(0+128)
  2646  04D5  0825               	movf	??_sprintf^(0+128),w
  2647  04D6  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2648  04D7  1903               	btfsc	3,2
  2649  04D8  2CDA               	goto	u5311
  2650  04D9  2CDB               	goto	u5310
  2651  04DA                     u5311:
  2652  04DA  2CF0               	goto	l3262
  2653  04DB                     u5310:
  2654  04DB                     l3254:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2657  04DB  30FF               	movlw	255
  2658  04DC  07B5               	addwf	sprintf@width^(0+128),f
  2659  04DD  1803               	skipnc
  2660  04DE  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2661  04DF  30FF               	movlw	255
  2662  04E0  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2663  04E1  2CF0               	goto	l3262
  2664  04E2                     l3256:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2667  04E2  3020               	movlw	32
  2668  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2669  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2670  04E5  00A5               	movwf	??_sprintf^(0+128)
  2671  04E6  0841               	movf	sprintf@sp^(0+128),w
  2672  04E7  0084               	movwf	4
  2673  04E8  0825               	movf	??_sprintf^(0+128),w
  2674  04E9  1383               	bcf	3,7	;select IRP bank0
  2675  04EA  0080               	movwf	0
  2676  04EB                     l3258:
  2677  04EB  3001               	movlw	1
  2678  04EC  00A5               	movwf	??_sprintf^(0+128)
  2679  04ED  0825               	movf	??_sprintf^(0+128),w
  2680  04EE  07C1               	addwf	sprintf@sp^(0+128),f
  2681  04EF  2CDB               	goto	l3254
  2682  04F0                     l3262:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2685  04F0  0836               	movf	(sprintf@width+1)^(0+128),w
  2686  04F1  3A80               	xorlw	128
  2687  04F2  00FF               	movwf	btemp+1
  2688  04F3  3080               	movlw	128
  2689  04F4  027F               	subwf	btemp+1,w
  2690  04F5  1D03               	skipz
  2691  04F6  2CF9               	goto	u5325
  2692  04F7  3001               	movlw	1
  2693  04F8  0235               	subwf	sprintf@width^(0+128),w
  2694  04F9                     u5325:
  2695  04F9  1803               	skipnc
  2696  04FA  2CFC               	goto	u5321
  2697  04FB  2CFD               	goto	u5320
  2698  04FC                     u5321:
  2699  04FC  2CE2               	goto	l3256
  2700  04FD                     u5320:
  2701  04FD                     l3264:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  2704  04FD  3003               	movlw	3
  2705  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2706  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0500  0533               	andwf	sprintf@flag^(0+128),w
  2708  0501  00A5               	movwf	??_sprintf^(0+128)
  2709  0502  3000               	movlw	0
  2710  0503  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2711  0504  00A6               	movwf	(??_sprintf+1)^(0+128)
  2712  0505  0825               	movf	??_sprintf^(0+128),w
  2713  0506  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2714  0507  1903               	btfsc	3,2
  2715  0508  2D0A               	goto	u5331
  2716  0509  2D0B               	goto	u5330
  2717  050A                     u5331:
  2718  050A  2D7D               	goto	l255
  2719  050B                     u5330:
  2720  050B                     l3266:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2723  050B  302D               	movlw	45
  2724  050C  00A5               	movwf	??_sprintf^(0+128)
  2725  050D  0841               	movf	sprintf@sp^(0+128),w
  2726  050E  0084               	movwf	4
  2727  050F  0825               	movf	??_sprintf^(0+128),w
  2728  0510  1383               	bcf	3,7	;select IRP bank0
  2729  0511  0080               	movwf	0
  2730  0512                     l3268:
  2731  0512  3001               	movlw	1
  2732  0513  00A5               	movwf	??_sprintf^(0+128)
  2733  0514  0825               	movf	??_sprintf^(0+128),w
  2734  0515  07C1               	addwf	sprintf@sp^(0+128),f
  2735  0516  2D7D               	goto	l255
  2736  0517                     l3270:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2739  0517  0844               	movf	sprintf@c^(0+128),w
  2740  0518  00A5               	movwf	??_sprintf^(0+128)
  2741  0519  3001               	movlw	1
  2742  051A                     u5345:
  2743  051A  1003               	clrc
  2744  051B  0DA5               	rlf	??_sprintf^(0+128),f
  2745  051C  3EFF               	addlw	-1
  2746  051D  1D03               	skipz
  2747  051E  2D1A               	goto	u5345
  2748  051F  1003               	clrc
  2749  0520  0D25               	rlf	??_sprintf^(0+128),w
  2750  0521  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2751  0522  0084               	movwf	4
  2752  0523  160A  158A  2000  120A  118A  	fcall	stringdir
  2753  0528  00F0               	movwf	___lldiv@divisor
  2754  0529  160A  158A  2000  120A  118A  	fcall	stringdir
  2755  052E  00F1               	movwf	___lldiv@divisor+1
  2756  052F  160A  158A  2000  120A  118A  	fcall	stringdir
  2757  0534  00F2               	movwf	___lldiv@divisor+2
  2758  0535  160A  158A  2000  120A  118A  	fcall	stringdir
  2759  053A  00F3               	movwf	___lldiv@divisor+3
  2760  053B  0832               	movf	(sprintf@val+3)^(0+128),w
  2761  053C  00F7               	movwf	___lldiv@dividend+3
  2762  053D  0831               	movf	(sprintf@val+2)^(0+128),w
  2763  053E  00F6               	movwf	___lldiv@dividend+2
  2764  053F  0830               	movf	(sprintf@val+1)^(0+128),w
  2765  0540  00F5               	movwf	___lldiv@dividend+1
  2766  0541  082F               	movf	sprintf@val^(0+128),w
  2767  0542  00F4               	movwf	___lldiv@dividend
  2768  0543  160A  118A  2034  120A  118A  	fcall	___lldiv
  2769  0548  0873               	movf	?___lldiv+3,w
  2770  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2771  054A  1303               	bcf	3,6	;RP1=0, select bank1
  2772  054B  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2773  054C  0872               	movf	?___lldiv+2,w
  2774  054D  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2775  054E  0871               	movf	?___lldiv+1,w
  2776  054F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2777  0550  0870               	movf	?___lldiv,w
  2778  0551  00B7               	movwf	sprintf@tmpval^(0+128)
  2779  0552                     l3272:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2782  0552  3000               	movlw	0
  2783  0553  00F3               	movwf	___llmod@divisor+3
  2784  0554  3000               	movlw	0
  2785  0555  00F2               	movwf	___llmod@divisor+2
  2786  0556  3000               	movlw	0
  2787  0557  00F1               	movwf	___llmod@divisor+1
  2788  0558  300A               	movlw	10
  2789  0559  00F0               	movwf	___llmod@divisor
  2790  055A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2791  055B  00F7               	movwf	___llmod@dividend+3
  2792  055C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2793  055D  00F6               	movwf	___llmod@dividend+2
  2794  055E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2795  055F  00F5               	movwf	___llmod@dividend+1
  2796  0560  0837               	movf	sprintf@tmpval^(0+128),w
  2797  0561  00F4               	movwf	___llmod@dividend
  2798  0562  160A  158A  26EF  120A  118A  	fcall	___llmod
  2799  0567  0873               	movf	?___llmod+3,w
  2800  0568  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0569  1303               	bcf	3,6	;RP1=0, select bank1
  2802  056A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2803  056B  0872               	movf	?___llmod+2,w
  2804  056C  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2805  056D  0871               	movf	?___llmod+1,w
  2806  056E  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2807  056F  0870               	movf	?___llmod,w
  2808  0570  00B7               	movwf	sprintf@tmpval^(0+128)
  2809  0571                     l3274:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2812  0571  0837               	movf	sprintf@tmpval^(0+128),w
  2813  0572  3E30               	addlw	48
  2814  0573  00A5               	movwf	??_sprintf^(0+128)
  2815  0574  0841               	movf	sprintf@sp^(0+128),w
  2816  0575  0084               	movwf	4
  2817  0576  0825               	movf	??_sprintf^(0+128),w
  2818  0577  1383               	bcf	3,7	;select IRP bank0
  2819  0578  0080               	movwf	0
  2820  0579  3001               	movlw	1
  2821  057A  00A5               	movwf	??_sprintf^(0+128)
  2822  057B  0825               	movf	??_sprintf^(0+128),w
  2823  057C  07C1               	addwf	sprintf@sp^(0+128),f
  2824  057D                     l255:	
  2825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1232:    }
  2826                           
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2829  057D  3001               	movlw	1
  2830  057E  02C4               	subwf	sprintf@c^(0+128),f
  2831  057F  0A44               	incf	sprintf@c^(0+128),w
  2832  0580  1D03               	btfss	3,2
  2833  0581  2D83               	goto	u5351
  2834  0582  2D84               	goto	u5350
  2835  0583                     u5351:
  2836  0583  2D17               	goto	l3270
  2837  0584                     u5350:
  2838  0584  2D98               	goto	l3282
  2839  0585                     l3276:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2842  0585  3030               	movlw	48
  2843  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2844  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2845  0588  00A5               	movwf	??_sprintf^(0+128)
  2846  0589  0841               	movf	sprintf@sp^(0+128),w
  2847  058A  0084               	movwf	4
  2848  058B  0825               	movf	??_sprintf^(0+128),w
  2849  058C  1383               	bcf	3,7	;select IRP bank0
  2850  058D  0080               	movwf	0
  2851  058E                     l3278:
  2852  058E  3001               	movlw	1
  2853  058F  00A5               	movwf	??_sprintf^(0+128)
  2854  0590  0825               	movf	??_sprintf^(0+128),w
  2855  0591  07C1               	addwf	sprintf@sp^(0+128),f
  2856  0592                     l3280:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2859  0592  30FF               	movlw	255
  2860  0593  07BB               	addwf	sprintf@eexp^(0+128),f
  2861  0594  1803               	skipnc
  2862  0595  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2863  0596  30FF               	movlw	255
  2864  0597  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2865  0598                     l3282:
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2868  0598  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2869  0599  3A80               	xorlw	128
  2870  059A  00FF               	movwf	btemp+1
  2871  059B  3080               	movlw	128
  2872  059C  027F               	subwf	btemp+1,w
  2873  059D  1D03               	skipz
  2874  059E  2DA1               	goto	u5365
  2875  059F  3001               	movlw	1
  2876  05A0  023B               	subwf	sprintf@eexp^(0+128),w
  2877  05A1                     u5365:
  2878  05A1  1803               	skipnc
  2879  05A2  2DA4               	goto	u5361
  2880  05A3  2DA5               	goto	u5360
  2881  05A4                     u5361:
  2882  05A4  2D85               	goto	l3276
  2883  05A5                     u5360:
  2884  05A5                     l3284:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2887  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  2888  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  2889  05A7  0843               	movf	(sprintf@prec+1)^(0+128),w
  2890  05A8  3A80               	xorlw	128
  2891  05A9  00FF               	movwf	btemp+1
  2892  05AA  3080               	movlw	128
  2893  05AB  027F               	subwf	btemp+1,w
  2894  05AC  1D03               	skipz
  2895  05AD  2DB0               	goto	u5375
  2896  05AE  3009               	movlw	9
  2897  05AF  0242               	subwf	sprintf@prec^(0+128),w
  2898  05B0                     u5375:
  2899  05B0  1C03               	skipc
  2900  05B1  2DB3               	goto	u5371
  2901  05B2  2DB4               	goto	u5370
  2902  05B3                     u5371:
  2903  05B3  2DBB               	goto	l3288
  2904  05B4                     u5370:
  2905  05B4                     l3286:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2908  05B4  3008               	movlw	8
  2909  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  2910  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  2911  05B7  00A5               	movwf	??_sprintf^(0+128)
  2912  05B8  0825               	movf	??_sprintf^(0+128),w
  2913  05B9  00C4               	movwf	sprintf@c^(0+128)
  2914  05BA  2DC1               	goto	l262
  2915  05BB                     l3288:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2918  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2919  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2920  05BD  0842               	movf	sprintf@prec^(0+128),w
  2921  05BE  00A5               	movwf	??_sprintf^(0+128)
  2922  05BF  0825               	movf	??_sprintf^(0+128),w
  2923  05C0  00C4               	movwf	sprintf@c^(0+128)
  2924  05C1                     l262:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2927  05C1  0844               	movf	sprintf@c^(0+128),w
  2928  05C2  00A5               	movwf	??_sprintf^(0+128)
  2929  05C3  01A6               	clrf	(??_sprintf^(0+128)+1)
  2930  05C4  0825               	movf	??_sprintf^(0+128),w
  2931  05C5  02C2               	subwf	sprintf@prec^(0+128),f
  2932  05C6  0826               	movf	(??_sprintf+1)^(0+128),w
  2933  05C7  1C03               	skipc
  2934  05C8  03C3               	decf	(sprintf@prec+1)^(0+128),f
  2935  05C9  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  2936  05CA                     l3290:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2939  05CA  0844               	movf	sprintf@c^(0+128),w
  2940  05CB  1903               	btfsc	3,2
  2941  05CC  2DCE               	goto	u5381
  2942  05CD  2DCF               	goto	u5380
  2943  05CE                     u5381:
  2944  05CE  2DDA               	goto	l3296
  2945  05CF                     u5380:
  2946  05CF                     l3292:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2949  05CF  302E               	movlw	46
  2950  05D0  00A5               	movwf	??_sprintf^(0+128)
  2951  05D1  0841               	movf	sprintf@sp^(0+128),w
  2952  05D2  0084               	movwf	4
  2953  05D3  0825               	movf	??_sprintf^(0+128),w
  2954  05D4  1383               	bcf	3,7	;select IRP bank0
  2955  05D5  0080               	movwf	0
  2956  05D6                     l3294:
  2957  05D6  3001               	movlw	1
  2958  05D7  00A5               	movwf	??_sprintf^(0+128)
  2959  05D8  0825               	movf	??_sprintf^(0+128),w
  2960  05D9  07C1               	addwf	sprintf@sp^(0+128),f
  2961  05DA                     l3296:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2964  05DA  0844               	movf	sprintf@c^(0+128),w
  2965  05DB  120A  158A  2140  120A  118A  	fcall	_scale
  2966  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2967  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2968  05E2  0841               	movf	?_scale+3,w
  2969  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  2970  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  2971  05E5  00AD               	movwf	(_sprintf$829+3)^(0+128)
  2972  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2973  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2974  05E8  0840               	movf	?_scale+2,w
  2975  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  2976  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  2977  05EB  00AC               	movwf	(_sprintf$829+2)^(0+128)
  2978  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2979  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2980  05EE  083F               	movf	?_scale+1,w
  2981  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  2982  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  2983  05F1  00AB               	movwf	(_sprintf$829+1)^(0+128)
  2984  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2985  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2986  05F4  083E               	movf	?_scale,w
  2987  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2988  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2989  05F7  00AA               	movwf	_sprintf$829^(0+128)
  2990  05F8                     l3298:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2993  05F8  082D               	movf	(_sprintf$829+3)^(0+128),w
  2994  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  2995  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  2996  05FB  00AB               	movwf	___flmul@a+3
  2997  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  2998  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  2999  05FE  082C               	movf	(_sprintf$829+2)^(0+128),w
  3000  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0600  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0601  00AA               	movwf	___flmul@a+2
  3003  0602  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0603  1303               	bcf	3,6	;RP1=0, select bank1
  3005  0604  082B               	movf	(_sprintf$829+1)^(0+128),w
  3006  0605  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0606  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0607  00A9               	movwf	___flmul@a+1
  3009  0608  1683               	bsf	3,5	;RP0=1, select bank1
  3010  0609  1303               	bcf	3,6	;RP1=0, select bank1
  3011  060A  082A               	movf	_sprintf$829^(0+128),w
  3012  060B  1283               	bcf	3,5	;RP0=0, select bank0
  3013  060C  1303               	bcf	3,6	;RP1=0, select bank0
  3014  060D  00A8               	movwf	___flmul@a
  3015  060E  1683               	bsf	3,5	;RP0=1, select bank1
  3016  060F  1303               	bcf	3,6	;RP1=0, select bank1
  3017  0610  0840               	movf	(sprintf@fval+3)^(0+128),w
  3018  0611  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0612  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0613  00A7               	movwf	___flmul@b+3
  3021  0614  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0615  1303               	bcf	3,6	;RP1=0, select bank1
  3023  0616  083F               	movf	(sprintf@fval+2)^(0+128),w
  3024  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0618  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0619  00A6               	movwf	___flmul@b+2
  3027  061A  1683               	bsf	3,5	;RP0=1, select bank1
  3028  061B  1303               	bcf	3,6	;RP1=0, select bank1
  3029  061C  083E               	movf	(sprintf@fval+1)^(0+128),w
  3030  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3031  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3032  061F  00A5               	movwf	___flmul@b+1
  3033  0620  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0621  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0622  083D               	movf	sprintf@fval^(0+128),w
  3036  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0625  00A4               	movwf	___flmul@b
  3039  0626  120A  158A  249F  120A  118A  	fcall	___flmul
  3040  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3041  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3042  062D  0827               	movf	?___flmul+3,w
  3043  062E  00D4               	movwf	___fltol@f1+3
  3044  062F  0826               	movf	?___flmul+2,w
  3045  0630  00D3               	movwf	___fltol@f1+2
  3046  0631  0825               	movf	?___flmul+1,w
  3047  0632  00D2               	movwf	___fltol@f1+1
  3048  0633  0824               	movf	?___flmul,w
  3049  0634  00D1               	movwf	___fltol@f1
  3050  0635  120A  158A  2006  120A  118A  	fcall	___fltol
  3051  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3052  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3053  063C  0854               	movf	?___fltol+3,w
  3054  063D  1683               	bsf	3,5	;RP0=1, select bank1
  3055  063E  1303               	bcf	3,6	;RP1=0, select bank1
  3056  063F  00B2               	movwf	(sprintf@val+3)^(0+128)
  3057  0640  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0641  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0642  0853               	movf	?___fltol+2,w
  3060  0643  1683               	bsf	3,5	;RP0=1, select bank1
  3061  0644  1303               	bcf	3,6	;RP1=0, select bank1
  3062  0645  00B1               	movwf	(sprintf@val+2)^(0+128)
  3063  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0648  0852               	movf	?___fltol+1,w
  3066  0649  1683               	bsf	3,5	;RP0=1, select bank1
  3067  064A  1303               	bcf	3,6	;RP1=0, select bank1
  3068  064B  00B0               	movwf	(sprintf@val+1)^(0+128)
  3069  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3070  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3071  064E  0851               	movf	?___fltol,w
  3072  064F  1683               	bsf	3,5	;RP0=1, select bank1
  3073  0650  1303               	bcf	3,6	;RP1=0, select bank1
  3074  0651  00AF               	movwf	sprintf@val^(0+128)
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3077  0652  2EF4               	goto	l3308
  3078  0653                     l3300:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3081  0653  0844               	movf	sprintf@c^(0+128),w
  3082  0654  00A5               	movwf	??_sprintf^(0+128)
  3083  0655  3001               	movlw	1
  3084  0656                     u5395:
  3085  0656  1003               	clrc
  3086  0657  0DA5               	rlf	??_sprintf^(0+128),f
  3087  0658  3EFF               	addlw	-1
  3088  0659  1D03               	skipz
  3089  065A  2E56               	goto	u5395
  3090  065B  1003               	clrc
  3091  065C  0D25               	rlf	??_sprintf^(0+128),w
  3092  065D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3093  065E  0084               	movwf	4
  3094  065F  160A  158A  2000  120A  118A  	fcall	stringdir
  3095  0664  00F0               	movwf	___lldiv@divisor
  3096  0665  160A  158A  2000  120A  118A  	fcall	stringdir
  3097  066A  00F1               	movwf	___lldiv@divisor+1
  3098  066B  160A  158A  2000  120A  118A  	fcall	stringdir
  3099  0670  00F2               	movwf	___lldiv@divisor+2
  3100  0671  160A  158A  2000  120A  118A  	fcall	stringdir
  3101  0676  00F3               	movwf	___lldiv@divisor+3
  3102  0677  0832               	movf	(sprintf@val+3)^(0+128),w
  3103  0678  00F7               	movwf	___lldiv@dividend+3
  3104  0679  0831               	movf	(sprintf@val+2)^(0+128),w
  3105  067A  00F6               	movwf	___lldiv@dividend+2
  3106  067B  0830               	movf	(sprintf@val+1)^(0+128),w
  3107  067C  00F5               	movwf	___lldiv@dividend+1
  3108  067D  082F               	movf	sprintf@val^(0+128),w
  3109  067E  00F4               	movwf	___lldiv@dividend
  3110  067F  160A  118A  2034  120A  118A  	fcall	___lldiv
  3111  0684  0873               	movf	?___lldiv+3,w
  3112  0685  1683               	bsf	3,5	;RP0=1, select bank1
  3113  0686  1303               	bcf	3,6	;RP1=0, select bank1
  3114  0687  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3115  0688  0872               	movf	?___lldiv+2,w
  3116  0689  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3117  068A  0871               	movf	?___lldiv+1,w
  3118  068B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3119  068C  0870               	movf	?___lldiv,w
  3120  068D  00B7               	movwf	sprintf@tmpval^(0+128)
  3121  068E                     l3302:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3124  068E  3000               	movlw	0
  3125  068F  00F3               	movwf	___llmod@divisor+3
  3126  0690  3000               	movlw	0
  3127  0691  00F2               	movwf	___llmod@divisor+2
  3128  0692  3000               	movlw	0
  3129  0693  00F1               	movwf	___llmod@divisor+1
  3130  0694  300A               	movlw	10
  3131  0695  00F0               	movwf	___llmod@divisor
  3132  0696  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3133  0697  00F7               	movwf	___llmod@dividend+3
  3134  0698  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3135  0699  00F6               	movwf	___llmod@dividend+2
  3136  069A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3137  069B  00F5               	movwf	___llmod@dividend+1
  3138  069C  0837               	movf	sprintf@tmpval^(0+128),w
  3139  069D  00F4               	movwf	___llmod@dividend
  3140  069E  160A  158A  26EF  120A  118A  	fcall	___llmod
  3141  06A3  0873               	movf	?___llmod+3,w
  3142  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3143  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3144  06A6  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3145  06A7  0872               	movf	?___llmod+2,w
  3146  06A8  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3147  06A9  0871               	movf	?___llmod+1,w
  3148  06AA  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3149  06AB  0870               	movf	?___llmod,w
  3150  06AC  00B7               	movwf	sprintf@tmpval^(0+128)
  3151  06AD                     l3304:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3154  06AD  0837               	movf	sprintf@tmpval^(0+128),w
  3155  06AE  3E30               	addlw	48
  3156  06AF  00A5               	movwf	??_sprintf^(0+128)
  3157  06B0  0841               	movf	sprintf@sp^(0+128),w
  3158  06B1  0084               	movwf	4
  3159  06B2  0825               	movf	??_sprintf^(0+128),w
  3160  06B3  1383               	bcf	3,7	;select IRP bank0
  3161  06B4  0080               	movwf	0
  3162  06B5  3001               	movlw	1
  3163  06B6  00A5               	movwf	??_sprintf^(0+128)
  3164  06B7  0825               	movf	??_sprintf^(0+128),w
  3165  06B8  07C1               	addwf	sprintf@sp^(0+128),f
  3166  06B9                     l3306:
  3167                           
  3168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3169  06B9  0844               	movf	sprintf@c^(0+128),w
  3170  06BA  00A5               	movwf	??_sprintf^(0+128)
  3171  06BB  3001               	movlw	1
  3172  06BC                     u5405:
  3173  06BC  1003               	clrc
  3174  06BD  0DA5               	rlf	??_sprintf^(0+128),f
  3175  06BE  3EFF               	addlw	-1
  3176  06BF  1D03               	skipz
  3177  06C0  2EBC               	goto	u5405
  3178  06C1  1003               	clrc
  3179  06C2  0D25               	rlf	??_sprintf^(0+128),w
  3180  06C3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3181  06C4  0084               	movwf	4
  3182  06C5  160A  158A  2000  120A  118A  	fcall	stringdir
  3183  06CA  00F0               	movwf	___llmod@divisor
  3184  06CB  160A  158A  2000  120A  118A  	fcall	stringdir
  3185  06D0  00F1               	movwf	___llmod@divisor+1
  3186  06D1  160A  158A  2000  120A  118A  	fcall	stringdir
  3187  06D6  00F2               	movwf	___llmod@divisor+2
  3188  06D7  160A  158A  2000  120A  118A  	fcall	stringdir
  3189  06DC  00F3               	movwf	___llmod@divisor+3
  3190  06DD  0832               	movf	(sprintf@val+3)^(0+128),w
  3191  06DE  00F7               	movwf	___llmod@dividend+3
  3192  06DF  0831               	movf	(sprintf@val+2)^(0+128),w
  3193  06E0  00F6               	movwf	___llmod@dividend+2
  3194  06E1  0830               	movf	(sprintf@val+1)^(0+128),w
  3195  06E2  00F5               	movwf	___llmod@dividend+1
  3196  06E3  082F               	movf	sprintf@val^(0+128),w
  3197  06E4  00F4               	movwf	___llmod@dividend
  3198  06E5  160A  158A  26EF  120A  118A  	fcall	___llmod
  3199  06EA  0873               	movf	?___llmod+3,w
  3200  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  3201  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  3202  06ED  00B2               	movwf	(sprintf@val+3)^(0+128)
  3203  06EE  0872               	movf	?___llmod+2,w
  3204  06EF  00B1               	movwf	(sprintf@val+2)^(0+128)
  3205  06F0  0871               	movf	?___llmod+1,w
  3206  06F1  00B0               	movwf	(sprintf@val+1)^(0+128)
  3207  06F2  0870               	movf	?___llmod,w
  3208  06F3  00AF               	movwf	sprintf@val^(0+128)
  3209  06F4                     l3308:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3212  06F4  3001               	movlw	1
  3213  06F5  02C4               	subwf	sprintf@c^(0+128),f
  3214  06F6  0A44               	incf	sprintf@c^(0+128),w
  3215  06F7  1D03               	btfss	3,2
  3216  06F8  2EFA               	goto	u5411
  3217  06F9  2EFB               	goto	u5410
  3218  06FA                     u5411:
  3219  06FA  2E53               	goto	l3300
  3220  06FB                     u5410:
  3221  06FB  2F0D               	goto	l3316
  3222  06FC                     l3310:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3225  06FC  3030               	movlw	48
  3226  06FD  00A5               	movwf	??_sprintf^(0+128)
  3227  06FE  0841               	movf	sprintf@sp^(0+128),w
  3228  06FF  0084               	movwf	4
  3229  0700  0825               	movf	??_sprintf^(0+128),w
  3230  0701  1383               	bcf	3,7	;select IRP bank0
  3231  0702  0080               	movwf	0
  3232  0703                     l3312:
  3233  0703  3001               	movlw	1
  3234  0704  00A5               	movwf	??_sprintf^(0+128)
  3235  0705  0825               	movf	??_sprintf^(0+128),w
  3236  0706  07C1               	addwf	sprintf@sp^(0+128),f
  3237  0707                     l3314:
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3240  0707  30FF               	movlw	255
  3241  0708  07C2               	addwf	sprintf@prec^(0+128),f
  3242  0709  1803               	skipnc
  3243  070A  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3244  070B  30FF               	movlw	255
  3245  070C  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3246  070D                     l3316:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3249  070D  0842               	movf	sprintf@prec^(0+128),w
  3250  070E  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3251  070F  1D03               	btfss	3,2
  3252  0710  2F12               	goto	u5421
  3253  0711  2F13               	goto	u5420
  3254  0712                     u5421:
  3255  0712  2EFC               	goto	l3310
  3256  0713                     u5420:
  3257  0713  2FD7               	goto	l3364
  3258  0714                     l3318:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3261  0714  0842               	movf	sprintf@prec^(0+128),w
  3262  0715  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3263  0716  1D03               	btfss	3,2
  3264  0717  2F19               	goto	u5431
  3265  0718  2F1A               	goto	u5430
  3266  0719                     u5431:
  3267  0719  2F28               	goto	l270
  3268  071A                     u5430:
  3269  071A                     l3320:
  3270  071A  0832               	movf	(sprintf@val+3)^(0+128),w
  3271  071B  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3272  071C  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3273  071D  042F               	iorwf	sprintf@val^(0+128),w
  3274  071E  1D03               	skipz
  3275  071F  2F21               	goto	u5441
  3276  0720  2F22               	goto	u5440
  3277  0721                     u5441:
  3278  0721  2F28               	goto	l270
  3279  0722                     u5440:
  3280  0722                     l3322:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3283  0722  3001               	movlw	1
  3284  0723  07C2               	addwf	sprintf@prec^(0+128),f
  3285  0724  1803               	skipnc
  3286  0725  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3287  0726  3000               	movlw	0
  3288  0727  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3289  0728                     l270:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3292  0728  0843               	movf	(sprintf@prec+1)^(0+128),w
  3293  0729  3A80               	xorlw	128
  3294  072A  3C80               	sublw	128
  3295  072B  1D03               	skipz
  3296  072C  2F2F               	goto	u5455
  3297  072D  0842               	movf	sprintf@prec^(0+128),w
  3298  072E  0244               	subwf	sprintf@c^(0+128),w
  3299  072F                     u5455:
  3300  072F  1803               	skipnc
  3301  0730  2F32               	goto	u5451
  3302  0731  2F33               	goto	u5450
  3303  0732                     u5451:
  3304  0732  2F3A               	goto	l3326
  3305  0733                     u5450:
  3306  0733                     l3324:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3309  0733  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0734  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0735  0842               	movf	sprintf@prec^(0+128),w
  3312  0736  00A5               	movwf	??_sprintf^(0+128)
  3313  0737  0825               	movf	??_sprintf^(0+128),w
  3314  0738  00C4               	movwf	sprintf@c^(0+128)
  3315  0739  2F52               	goto	l3330
  3316  073A                     l3326:
  3317  073A  1683               	bsf	3,5	;RP0=1, select bank1
  3318  073B  1303               	bcf	3,6	;RP1=0, select bank1
  3319  073C  0843               	movf	(sprintf@prec+1)^(0+128),w
  3320  073D  3A80               	xorlw	128
  3321  073E  00A5               	movwf	??_sprintf^(0+128)
  3322  073F  3080               	movlw	128
  3323  0740  0225               	subwf	??_sprintf^(0+128),w
  3324  0741  1D03               	skipz
  3325  0742  2F45               	goto	u5465
  3326  0743  0844               	movf	sprintf@c^(0+128),w
  3327  0744  0242               	subwf	sprintf@prec^(0+128),w
  3328  0745                     u5465:
  3329  0745  1803               	skipnc
  3330  0746  2F48               	goto	u5461
  3331  0747  2F49               	goto	u5460
  3332  0748                     u5461:
  3333  0748  2F52               	goto	l3330
  3334  0749                     u5460:
  3335  0749                     l3328:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3338  0749  1683               	bsf	3,5	;RP0=1, select bank1
  3339  074A  1303               	bcf	3,6	;RP1=0, select bank1
  3340  074B  0844               	movf	sprintf@c^(0+128),w
  3341  074C  00A5               	movwf	??_sprintf^(0+128)
  3342  074D  01A6               	clrf	(??_sprintf^(0+128)+1)
  3343  074E  0825               	movf	??_sprintf^(0+128),w
  3344  074F  00C2               	movwf	sprintf@prec^(0+128)
  3345  0750  0826               	movf	(??_sprintf+1)^(0+128),w
  3346  0751  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3347  0752                     l3330:
  3348                           
  3349                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3350  0752  1683               	bsf	3,5	;RP0=1, select bank1
  3351  0753  1303               	bcf	3,6	;RP1=0, select bank1
  3352  0754  0835               	movf	sprintf@width^(0+128),w
  3353  0755  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3354  0756  1903               	btfsc	3,2
  3355  0757  2F59               	goto	u5471
  3356  0758  2F5A               	goto	u5470
  3357  0759                     u5471:
  3358  0759  2F6C               	goto	l3336
  3359  075A                     u5470:
  3360  075A                     l3332:
  3361  075A  3003               	movlw	3
  3362  075B  0533               	andwf	sprintf@flag^(0+128),w
  3363  075C  00A5               	movwf	??_sprintf^(0+128)
  3364  075D  3000               	movlw	0
  3365  075E  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3366  075F  00A6               	movwf	(??_sprintf+1)^(0+128)
  3367  0760  0825               	movf	??_sprintf^(0+128),w
  3368  0761  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3369  0762  1903               	btfsc	3,2
  3370  0763  2F65               	goto	u5481
  3371  0764  2F66               	goto	u5480
  3372  0765                     u5481:
  3373  0765  2F6C               	goto	l3336
  3374  0766                     u5480:
  3375  0766                     l3334:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3378  0766  30FF               	movlw	255
  3379  0767  07B5               	addwf	sprintf@width^(0+128),f
  3380  0768  1803               	skipnc
  3381  0769  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3382  076A  30FF               	movlw	255
  3383  076B  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3384  076C                     l3336:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3387  076C  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3388  076D  2F6F               	goto	u5491
  3389  076E  2F70               	goto	u5490
  3390  076F                     u5491:
  3391  076F  2F8B               	goto	l3344
  3392  0770                     u5490:
  3393  0770                     l3338:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3396  0770  0843               	movf	(sprintf@prec+1)^(0+128),w
  3397  0771  3A80               	xorlw	128
  3398  0772  00A5               	movwf	??_sprintf^(0+128)
  3399  0773  0836               	movf	(sprintf@width+1)^(0+128),w
  3400  0774  3A80               	xorlw	128
  3401  0775  0225               	subwf	??_sprintf^(0+128),w
  3402  0776  1D03               	skipz
  3403  0777  2F7A               	goto	u5505
  3404  0778  0835               	movf	sprintf@width^(0+128),w
  3405  0779  0242               	subwf	sprintf@prec^(0+128),w
  3406  077A                     u5505:
  3407  077A  1803               	skipnc
  3408  077B  2F7D               	goto	u5501
  3409  077C  2F7E               	goto	u5500
  3410  077D                     u5501:
  3411  077D  2F87               	goto	l3342
  3412  077E                     u5500:
  3413  077E                     l3340:
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3416  077E  1683               	bsf	3,5	;RP0=1, select bank1
  3417  077F  1303               	bcf	3,6	;RP1=0, select bank1
  3418  0780  0842               	movf	sprintf@prec^(0+128),w
  3419  0781  02B5               	subwf	sprintf@width^(0+128),f
  3420  0782  0843               	movf	(sprintf@prec+1)^(0+128),w
  3421  0783  1C03               	skipc
  3422  0784  03B6               	decf	(sprintf@width+1)^(0+128),f
  3423  0785  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3424  0786  2F8B               	goto	l3344
  3425  0787                     l3342:
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3428  0787  1683               	bsf	3,5	;RP0=1, select bank1
  3429  0788  1303               	bcf	3,6	;RP1=0, select bank1
  3430  0789  01B5               	clrf	sprintf@width^(0+128)
  3431  078A  01B6               	clrf	(sprintf@width+1)^(0+128)
  3432  078B                     l3344:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3435  078B  0836               	movf	(sprintf@width+1)^(0+128),w
  3436  078C  3A80               	xorlw	128
  3437  078D  3C80               	sublw	128
  3438  078E  1D03               	skipz
  3439  078F  2F92               	goto	u5515
  3440  0790  0835               	movf	sprintf@width^(0+128),w
  3441  0791  0244               	subwf	sprintf@c^(0+128),w
  3442  0792                     u5515:
  3443  0792  1803               	skipnc
  3444  0793  2F95               	goto	u5511
  3445  0794  2F96               	goto	u5510
  3446  0795                     u5511:
  3447  0795  2FA2               	goto	l3348
  3448  0796                     u5510:
  3449  0796                     l3346:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3452  0796  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0797  1303               	bcf	3,6	;RP1=0, select bank1
  3454  0798  0844               	movf	sprintf@c^(0+128),w
  3455  0799  00A5               	movwf	??_sprintf^(0+128)
  3456  079A  01A6               	clrf	(??_sprintf^(0+128)+1)
  3457  079B  0825               	movf	??_sprintf^(0+128),w
  3458  079C  02B5               	subwf	sprintf@width^(0+128),f
  3459  079D  0826               	movf	(??_sprintf+1)^(0+128),w
  3460  079E  1C03               	skipc
  3461  079F  03B6               	decf	(sprintf@width+1)^(0+128),f
  3462  07A0  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3463  07A1  2FA6               	goto	l3350
  3464  07A2                     l3348:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3467  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  3468  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  3469  07A4  01B5               	clrf	sprintf@width^(0+128)
  3470  07A5  01B6               	clrf	(sprintf@width+1)^(0+128)
  3471  07A6                     l3350:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3474  07A6  0835               	movf	sprintf@width^(0+128),w
  3475  07A7  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3476  07A8  1903               	btfsc	3,2
  3477  07A9  2FAB               	goto	u5521
  3478  07AA  2FAC               	goto	u5520
  3479  07AB                     u5521:
  3480  07AB  2FC3               	goto	l3358
  3481  07AC                     u5520:
  3482  07AC                     l3352:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3485  07AC  3020               	movlw	32
  3486  07AD  00A5               	movwf	??_sprintf^(0+128)
  3487  07AE  0841               	movf	sprintf@sp^(0+128),w
  3488  07AF  0084               	movwf	4
  3489  07B0  0825               	movf	??_sprintf^(0+128),w
  3490  07B1  1383               	bcf	3,7	;select IRP bank0
  3491  07B2  0080               	movwf	0
  3492  07B3                     l3354:
  3493  07B3  3001               	movlw	1
  3494  07B4  00A5               	movwf	??_sprintf^(0+128)
  3495  07B5  0825               	movf	??_sprintf^(0+128),w
  3496  07B6  07C1               	addwf	sprintf@sp^(0+128),f
  3497  07B7                     l3356:
  3498  07B7  30FF               	movlw	255
  3499  07B8  07B5               	addwf	sprintf@width^(0+128),f
  3500  07B9  1803               	skipnc
  3501  07BA  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3502  07BB  30FF               	movlw	255
  3503  07BC  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3504  07BD  0835               	movf	sprintf@width^(0+128),w
  3505  07BE  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3506  07BF  1D03               	btfss	3,2
  3507  07C0  2FC2               	goto	u5531
  3508  07C1  2FC3               	goto	u5530
  3509  07C2                     u5531:
  3510  07C2  2FAC               	goto	l3352
  3511  07C3                     u5530:
  3512  07C3                     l3358:
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3515  07C3  3003               	movlw	3
  3516  07C4  0533               	andwf	sprintf@flag^(0+128),w
  3517  07C5  00A5               	movwf	??_sprintf^(0+128)
  3518  07C6  3000               	movlw	0
  3519  07C7  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3520  07C8  00A6               	movwf	(??_sprintf+1)^(0+128)
  3521  07C9  0825               	movf	??_sprintf^(0+128),w
  3522  07CA  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3523  07CB  1903               	btfsc	3,2
  3524  07CC  2FCE               	goto	u5541
  3525  07CD  2FCF               	goto	u5540
  3526  07CE                     u5541:
  3527  07CE  2FD7               	goto	l3364
  3528  07CF                     u5540:
  3529  07CF                     l3360:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3532  07CF  302D               	movlw	45
  3533  07D0  00A5               	movwf	??_sprintf^(0+128)
  3534  07D1  0841               	movf	sprintf@sp^(0+128),w
  3535  07D2  0084               	movwf	4
  3536  07D3  0825               	movf	??_sprintf^(0+128),w
  3537  07D4  1383               	bcf	3,7	;select IRP bank0
  3538  07D5  0080               	movwf	0
  3539  07D6  2888               	goto	l3120
  3540  07D7                     l3364:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3543  07D7  3001               	movlw	1
  3544  07D8  07A0               	addwf	sprintf@f^(0+128),f
  3545  07D9  30FF               	movlw	-1
  3546  07DA  0720               	addwf	sprintf@f^(0+128),w
  3547  07DB  0084               	movwf	4
  3548  07DC  160A  158A  2000  120A  118A  	fcall	stringdir
  3549  07E1  00A5               	movwf	??_sprintf^(0+128)
  3550  07E2  0825               	movf	??_sprintf^(0+128),w
  3551  07E3  00C4               	movwf	sprintf@c^(0+128)
  3552  07E4  0844               	movf	sprintf@c^(0+128),w
  3553  07E5  1D03               	btfss	3,2
  3554  07E6  2FE8               	goto	u5551
  3555  07E7  2FE9               	goto	u5550
  3556  07E8                     u5551:
  3557  07E8  287B               	goto	l3116
  3558  07E9                     u5550:
  3559  07E9                     l3366:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3562  07E9  0841               	movf	sprintf@sp^(0+128),w
  3563  07EA  0084               	movwf	4
  3564  07EB  1383               	bcf	3,7	;select IRP bank0
  3565  07EC  0180               	clrf	0
  3566  07ED                     l285:
  3567  07ED  0008               	return
  3568  07EE                     __end_of_sprintf:
  3569                           
  3570                           	psect	text2
  3571  0940                     __ptext2:	
  3572 ;; *************** function _scale *****************
  3573 ;; Defined at:
  3574 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  scl             1    wreg     char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  scl             1   48[BANK0 ] char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  4   30[BANK0 ] char 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       4       0       0       0
  3589 ;;      Locals:         0       5       0       0       0
  3590 ;;      Temps:          0      10       0       0       0
  3591 ;;      Totals:         0      19       0       0       0
  3592 ;;Total ram usage:       19 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 2
  3595 ;; This function calls:
  3596 ;;		___awdiv
  3597 ;;		___awmod
  3598 ;;		___flmul
  3599 ;; This function is called by:
  3600 ;;		_sprintf
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604  0940                     _scale:	
  3605                           ;psect for function _scale
  3606                           
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3610                           ;scale@scl stored from wreg
  3611  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0942  00D0               	movwf	scale@scl
  3614  0943                     l2728:
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3617  0943  1FD0               	btfss	scale@scl,7
  3618  0944  2946               	goto	u4111
  3619  0945  2947               	goto	u4110
  3620  0946                     u4111:
  3621  0946  2AF4               	goto	l2750
  3622  0947                     u4110:
  3623  0947                     l2730:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3626  0947  09D0               	comf	scale@scl,f
  3627  0948  0AD0               	incf	scale@scl,f
  3628  0949                     l2732:
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3631  0949  0850               	movf	scale@scl,w
  3632  094A  3A80               	xorlw	128
  3633  094B  3E12               	addlw	-238
  3634  094C  1C03               	skipc
  3635  094D  294F               	goto	u4121
  3636  094E  2950               	goto	u4120
  3637  094F                     u4121:
  3638  094F  2A38               	goto	l2740
  3639  0950                     u4120:
  3640  0950                     l2734:
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3643  0950  300A               	movlw	10
  3644  0951  00F7               	movwf	___awdiv@divisor
  3645  0952  3000               	movlw	0
  3646  0953  00F8               	movwf	___awdiv@divisor+1
  3647  0954  0850               	movf	scale@scl,w
  3648  0955  00F2               	movwf	___awmod@dividend
  3649  0956  01F3               	clrf	___awmod@dividend+1
  3650  0957  1BF2               	btfsc	___awmod@dividend,7
  3651  0958  03F3               	decf	___awmod@dividend+1,f
  3652  0959  3064               	movlw	100
  3653  095A  00F0               	movwf	___awmod@divisor
  3654  095B  3000               	movlw	0
  3655  095C  00F1               	movwf	___awmod@divisor+1
  3656  095D  160A  158A  2743  120A  158A  	fcall	___awmod
  3657  0962  0871               	movf	?___awmod+1,w
  3658  0963  00FA               	movwf	___awdiv@dividend+1
  3659  0964  0870               	movf	?___awmod,w
  3660  0965  00F9               	movwf	___awdiv@dividend
  3661  0966  120A  118A  200A  120A  158A  	fcall	___awdiv
  3662  096B  0877               	movf	?___awdiv,w
  3663  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3664  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3665  096E  00C2               	movwf	??_scale
  3666  096F  3001               	movlw	1
  3667  0970                     u4135:
  3668  0970  1003               	clrc
  3669  0971  0DC2               	rlf	??_scale,f
  3670  0972  3EFF               	addlw	-1
  3671  0973  1D03               	skipz
  3672  0974  2970               	goto	u4135
  3673  0975  1003               	clrc
  3674  0976  0D42               	rlf	??_scale,w
  3675  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3676  0978  0084               	movwf	4
  3677  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  3678  097E  00C3               	movwf	??_scale+1
  3679  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  3680  0984  00C4               	movwf	??_scale+2
  3681  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  3682  098A  00C5               	movwf	??_scale+3
  3683  098B  160A  158A  2000  120A  158A  	fcall	stringdir
  3684  0990  00C6               	movwf	??_scale+4
  3685  0991  0846               	movf	??_scale+4,w
  3686  0992  00A7               	movwf	___flmul@b+3
  3687  0993  0845               	movf	??_scale+3,w
  3688  0994  00A6               	movwf	___flmul@b+2
  3689  0995  0844               	movf	??_scale+2,w
  3690  0996  00A5               	movwf	___flmul@b+1
  3691  0997  0843               	movf	??_scale+1,w
  3692  0998  00A4               	movwf	___flmul@b
  3693  0999  3064               	movlw	100
  3694  099A  00F7               	movwf	___awdiv@divisor
  3695  099B  3000               	movlw	0
  3696  099C  00F8               	movwf	___awdiv@divisor+1
  3697  099D  0850               	movf	scale@scl,w
  3698  099E  00F9               	movwf	___awdiv@dividend
  3699  099F  01FA               	clrf	___awdiv@dividend+1
  3700  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3701  09A1  03FA               	decf	___awdiv@dividend+1,f
  3702  09A2  120A  118A  200A  120A  158A  	fcall	___awdiv
  3703  09A7  0877               	movf	?___awdiv,w
  3704  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3705  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3706  09AA  00C7               	movwf	??_scale+5
  3707  09AB  3001               	movlw	1
  3708  09AC                     u4145:
  3709  09AC  1003               	clrc
  3710  09AD  0DC7               	rlf	??_scale+5,f
  3711  09AE  3EFF               	addlw	-1
  3712  09AF  1D03               	skipz
  3713  09B0  29AC               	goto	u4145
  3714  09B1  1003               	clrc
  3715  09B2  0D47               	rlf	??_scale+5,w
  3716  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3717  09B4  0084               	movwf	4
  3718  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  3719  09BA  00C8               	movwf	??_scale+6
  3720  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  3721  09C0  00C9               	movwf	??_scale+7
  3722  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  3723  09C6  00CA               	movwf	??_scale+8
  3724  09C7  160A  158A  2000  120A  158A  	fcall	stringdir
  3725  09CC  00CB               	movwf	??_scale+9
  3726  09CD  084B               	movf	??_scale+9,w
  3727  09CE  00AB               	movwf	___flmul@a+3
  3728  09CF  084A               	movf	??_scale+8,w
  3729  09D0  00AA               	movwf	___flmul@a+2
  3730  09D1  0849               	movf	??_scale+7,w
  3731  09D2  00A9               	movwf	___flmul@a+1
  3732  09D3  0848               	movf	??_scale+6,w
  3733  09D4  00A8               	movwf	___flmul@a
  3734  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3735  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3736  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3737  09DC  0827               	movf	?___flmul+3,w
  3738  09DD  00CF               	movwf	_scale$828+3
  3739  09DE  0826               	movf	?___flmul+2,w
  3740  09DF  00CE               	movwf	_scale$828+2
  3741  09E0  0825               	movf	?___flmul+1,w
  3742  09E1  00CD               	movwf	_scale$828+1
  3743  09E2  0824               	movf	?___flmul,w
  3744  09E3  00CC               	movwf	_scale$828
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3747  09E4  300A               	movlw	10
  3748  09E5  00F0               	movwf	___awmod@divisor
  3749  09E6  3000               	movlw	0
  3750  09E7  00F1               	movwf	___awmod@divisor+1
  3751  09E8  0850               	movf	scale@scl,w
  3752  09E9  00F2               	movwf	___awmod@dividend
  3753  09EA  01F3               	clrf	___awmod@dividend+1
  3754  09EB  1BF2               	btfsc	___awmod@dividend,7
  3755  09EC  03F3               	decf	___awmod@dividend+1,f
  3756  09ED  160A  158A  2743  120A  158A  	fcall	___awmod
  3757  09F2  0870               	movf	?___awmod,w
  3758  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3759  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3760  09F5  00C2               	movwf	??_scale
  3761  09F6  3001               	movlw	1
  3762  09F7                     u4155:
  3763  09F7  1003               	clrc
  3764  09F8  0DC2               	rlf	??_scale,f
  3765  09F9  3EFF               	addlw	-1
  3766  09FA  1D03               	skipz
  3767  09FB  29F7               	goto	u4155
  3768  09FC  1003               	clrc
  3769  09FD  0D42               	rlf	??_scale,w
  3770  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3771  09FF  0084               	movwf	4
  3772  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  3773  0A05  00C3               	movwf	??_scale+1
  3774  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  3775  0A0B  00C4               	movwf	??_scale+2
  3776  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  3777  0A11  00C5               	movwf	??_scale+3
  3778  0A12  160A  158A  2000  120A  158A  	fcall	stringdir
  3779  0A17  00C6               	movwf	??_scale+4
  3780  0A18  0846               	movf	??_scale+4,w
  3781  0A19  00A7               	movwf	___flmul@b+3
  3782  0A1A  0845               	movf	??_scale+3,w
  3783  0A1B  00A6               	movwf	___flmul@b+2
  3784  0A1C  0844               	movf	??_scale+2,w
  3785  0A1D  00A5               	movwf	___flmul@b+1
  3786  0A1E  0843               	movf	??_scale+1,w
  3787  0A1F  00A4               	movwf	___flmul@b
  3788  0A20  084F               	movf	_scale$828+3,w
  3789  0A21  00AB               	movwf	___flmul@a+3
  3790  0A22  084E               	movf	_scale$828+2,w
  3791  0A23  00AA               	movwf	___flmul@a+2
  3792  0A24  084D               	movf	_scale$828+1,w
  3793  0A25  00A9               	movwf	___flmul@a+1
  3794  0A26  084C               	movf	_scale$828,w
  3795  0A27  00A8               	movwf	___flmul@a
  3796  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3797  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3798  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3799  0A2F  0827               	movf	?___flmul+3,w
  3800  0A30  00C1               	movwf	?_scale+3
  3801  0A31  0826               	movf	?___flmul+2,w
  3802  0A32  00C0               	movwf	?_scale+2
  3803  0A33  0825               	movf	?___flmul+1,w
  3804  0A34  00BF               	movwf	?_scale+1
  3805  0A35  0824               	movf	?___flmul,w
  3806  0A36  00BE               	movwf	?_scale
  3807  0A37  2C9E               	goto	l202
  3808  0A38                     l2740:
  3809  0A38  0850               	movf	scale@scl,w
  3810  0A39  3A80               	xorlw	128
  3811  0A3A  3E75               	addlw	-139
  3812  0A3B  1C03               	skipc
  3813  0A3C  2A3E               	goto	u4161
  3814  0A3D  2A3F               	goto	u4160
  3815  0A3E                     u4161:
  3816  0A3E  2AC7               	goto	l2746
  3817  0A3F                     u4160:
  3818  0A3F                     l2742:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3821  0A3F  300A               	movlw	10
  3822  0A40  00F0               	movwf	___awmod@divisor
  3823  0A41  3000               	movlw	0
  3824  0A42  00F1               	movwf	___awmod@divisor+1
  3825  0A43  0850               	movf	scale@scl,w
  3826  0A44  00F2               	movwf	___awmod@dividend
  3827  0A45  01F3               	clrf	___awmod@dividend+1
  3828  0A46  1BF2               	btfsc	___awmod@dividend,7
  3829  0A47  03F3               	decf	___awmod@dividend+1,f
  3830  0A48  160A  158A  2743  120A  158A  	fcall	___awmod
  3831  0A4D  0870               	movf	?___awmod,w
  3832  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0A50  00C2               	movwf	??_scale
  3835  0A51  3001               	movlw	1
  3836  0A52                     u4175:
  3837  0A52  1003               	clrc
  3838  0A53  0DC2               	rlf	??_scale,f
  3839  0A54  3EFF               	addlw	-1
  3840  0A55  1D03               	skipz
  3841  0A56  2A52               	goto	u4175
  3842  0A57  1003               	clrc
  3843  0A58  0D42               	rlf	??_scale,w
  3844  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3845  0A5A  0084               	movwf	4
  3846  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  3847  0A60  00C3               	movwf	??_scale+1
  3848  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  3849  0A66  00C4               	movwf	??_scale+2
  3850  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  3851  0A6C  00C5               	movwf	??_scale+3
  3852  0A6D  160A  158A  2000  120A  158A  	fcall	stringdir
  3853  0A72  00C6               	movwf	??_scale+4
  3854  0A73  0846               	movf	??_scale+4,w
  3855  0A74  00A7               	movwf	___flmul@b+3
  3856  0A75  0845               	movf	??_scale+3,w
  3857  0A76  00A6               	movwf	___flmul@b+2
  3858  0A77  0844               	movf	??_scale+2,w
  3859  0A78  00A5               	movwf	___flmul@b+1
  3860  0A79  0843               	movf	??_scale+1,w
  3861  0A7A  00A4               	movwf	___flmul@b
  3862  0A7B  300A               	movlw	10
  3863  0A7C  00F7               	movwf	___awdiv@divisor
  3864  0A7D  3000               	movlw	0
  3865  0A7E  00F8               	movwf	___awdiv@divisor+1
  3866  0A7F  0850               	movf	scale@scl,w
  3867  0A80  00F9               	movwf	___awdiv@dividend
  3868  0A81  01FA               	clrf	___awdiv@dividend+1
  3869  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3870  0A83  03FA               	decf	___awdiv@dividend+1,f
  3871  0A84  120A  118A  200A  120A  158A  	fcall	___awdiv
  3872  0A89  0877               	movf	?___awdiv,w
  3873  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0A8C  00C7               	movwf	??_scale+5
  3876  0A8D  3001               	movlw	1
  3877  0A8E                     u4185:
  3878  0A8E  1003               	clrc
  3879  0A8F  0DC7               	rlf	??_scale+5,f
  3880  0A90  3EFF               	addlw	-1
  3881  0A91  1D03               	skipz
  3882  0A92  2A8E               	goto	u4185
  3883  0A93  1003               	clrc
  3884  0A94  0D47               	rlf	??_scale+5,w
  3885  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3886  0A96  0084               	movwf	4
  3887  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  3888  0A9C  00C8               	movwf	??_scale+6
  3889  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  3890  0AA2  00C9               	movwf	??_scale+7
  3891  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3892  0AA8  00CA               	movwf	??_scale+8
  3893  0AA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3894  0AAE  00CB               	movwf	??_scale+9
  3895  0AAF  084B               	movf	??_scale+9,w
  3896  0AB0  00AB               	movwf	___flmul@a+3
  3897  0AB1  084A               	movf	??_scale+8,w
  3898  0AB2  00AA               	movwf	___flmul@a+2
  3899  0AB3  0849               	movf	??_scale+7,w
  3900  0AB4  00A9               	movwf	___flmul@a+1
  3901  0AB5  0848               	movf	??_scale+6,w
  3902  0AB6  00A8               	movwf	___flmul@a
  3903  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3904  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0ABE  0827               	movf	?___flmul+3,w
  3907  0ABF  00C1               	movwf	?_scale+3
  3908  0AC0  0826               	movf	?___flmul+2,w
  3909  0AC1  00C0               	movwf	?_scale+2
  3910  0AC2  0825               	movf	?___flmul+1,w
  3911  0AC3  00BF               	movwf	?_scale+1
  3912  0AC4  0824               	movf	?___flmul,w
  3913  0AC5  00BE               	movwf	?_scale
  3914  0AC6  2C9E               	goto	l202
  3915  0AC7                     l2746:
  3916                           
  3917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3918  0AC7  0850               	movf	scale@scl,w
  3919  0AC8  00C2               	movwf	??_scale
  3920  0AC9  3001               	movlw	1
  3921  0ACA                     u4195:
  3922  0ACA  1003               	clrc
  3923  0ACB  0DC2               	rlf	??_scale,f
  3924  0ACC  3EFF               	addlw	-1
  3925  0ACD  1D03               	skipz
  3926  0ACE  2ACA               	goto	u4195
  3927  0ACF  1003               	clrc
  3928  0AD0  0D42               	rlf	??_scale,w
  3929  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3930  0AD2  0084               	movwf	4
  3931  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  3932  0AD8  00C3               	movwf	??_scale+1
  3933  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  3934  0ADE  00C4               	movwf	??_scale+2
  3935  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  3936  0AE4  00C5               	movwf	??_scale+3
  3937  0AE5  160A  158A  2000  120A  158A  	fcall	stringdir
  3938  0AEA  00C6               	movwf	??_scale+4
  3939  0AEB  0846               	movf	??_scale+4,w
  3940  0AEC  00C1               	movwf	?_scale+3
  3941  0AED  0845               	movf	??_scale+3,w
  3942  0AEE  00C0               	movwf	?_scale+2
  3943  0AEF  0844               	movf	??_scale+2,w
  3944  0AF0  00BF               	movwf	?_scale+1
  3945  0AF1  0843               	movf	??_scale+1,w
  3946  0AF2  00BE               	movwf	?_scale
  3947  0AF3  2C9E               	goto	l202
  3948  0AF4                     l2750:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3951  0AF4  0850               	movf	scale@scl,w
  3952  0AF5  3A80               	xorlw	128
  3953  0AF6  3E12               	addlw	-238
  3954  0AF7  1C03               	skipc
  3955  0AF8  2AFA               	goto	u4201
  3956  0AF9  2AFB               	goto	u4200
  3957  0AFA                     u4201:
  3958  0AFA  2BE3               	goto	l2758
  3959  0AFB                     u4200:
  3960  0AFB                     l2752:
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3963  0AFB  300A               	movlw	10
  3964  0AFC  00F7               	movwf	___awdiv@divisor
  3965  0AFD  3000               	movlw	0
  3966  0AFE  00F8               	movwf	___awdiv@divisor+1
  3967  0AFF  0850               	movf	scale@scl,w
  3968  0B00  00F2               	movwf	___awmod@dividend
  3969  0B01  01F3               	clrf	___awmod@dividend+1
  3970  0B02  1BF2               	btfsc	___awmod@dividend,7
  3971  0B03  03F3               	decf	___awmod@dividend+1,f
  3972  0B04  3064               	movlw	100
  3973  0B05  00F0               	movwf	___awmod@divisor
  3974  0B06  3000               	movlw	0
  3975  0B07  00F1               	movwf	___awmod@divisor+1
  3976  0B08  160A  158A  2743  120A  158A  	fcall	___awmod
  3977  0B0D  0871               	movf	?___awmod+1,w
  3978  0B0E  00FA               	movwf	___awdiv@dividend+1
  3979  0B0F  0870               	movf	?___awmod,w
  3980  0B10  00F9               	movwf	___awdiv@dividend
  3981  0B11  120A  118A  200A  120A  158A  	fcall	___awdiv
  3982  0B16  0877               	movf	?___awdiv,w
  3983  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0B19  00C2               	movwf	??_scale
  3986  0B1A  3001               	movlw	1
  3987  0B1B                     u4215:
  3988  0B1B  1003               	clrc
  3989  0B1C  0DC2               	rlf	??_scale,f
  3990  0B1D  3EFF               	addlw	-1
  3991  0B1E  1D03               	skipz
  3992  0B1F  2B1B               	goto	u4215
  3993  0B20  1003               	clrc
  3994  0B21  0D42               	rlf	??_scale,w
  3995  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3996  0B23  0084               	movwf	4
  3997  0B24  160A  158A  2000  120A  158A  	fcall	stringdir
  3998  0B29  00C3               	movwf	??_scale+1
  3999  0B2A  160A  158A  2000  120A  158A  	fcall	stringdir
  4000  0B2F  00C4               	movwf	??_scale+2
  4001  0B30  160A  158A  2000  120A  158A  	fcall	stringdir
  4002  0B35  00C5               	movwf	??_scale+3
  4003  0B36  160A  158A  2000  120A  158A  	fcall	stringdir
  4004  0B3B  00C6               	movwf	??_scale+4
  4005  0B3C  0846               	movf	??_scale+4,w
  4006  0B3D  00A7               	movwf	___flmul@b+3
  4007  0B3E  0845               	movf	??_scale+3,w
  4008  0B3F  00A6               	movwf	___flmul@b+2
  4009  0B40  0844               	movf	??_scale+2,w
  4010  0B41  00A5               	movwf	___flmul@b+1
  4011  0B42  0843               	movf	??_scale+1,w
  4012  0B43  00A4               	movwf	___flmul@b
  4013  0B44  3064               	movlw	100
  4014  0B45  00F7               	movwf	___awdiv@divisor
  4015  0B46  3000               	movlw	0
  4016  0B47  00F8               	movwf	___awdiv@divisor+1
  4017  0B48  0850               	movf	scale@scl,w
  4018  0B49  00F9               	movwf	___awdiv@dividend
  4019  0B4A  01FA               	clrf	___awdiv@dividend+1
  4020  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4021  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4022  0B4D  120A  118A  200A  120A  158A  	fcall	___awdiv
  4023  0B52  0877               	movf	?___awdiv,w
  4024  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4026  0B55  00C7               	movwf	??_scale+5
  4027  0B56  3001               	movlw	1
  4028  0B57                     u4225:
  4029  0B57  1003               	clrc
  4030  0B58  0DC7               	rlf	??_scale+5,f
  4031  0B59  3EFF               	addlw	-1
  4032  0B5A  1D03               	skipz
  4033  0B5B  2B57               	goto	u4225
  4034  0B5C  1003               	clrc
  4035  0B5D  0D47               	rlf	??_scale+5,w
  4036  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4037  0B5F  0084               	movwf	4
  4038  0B60  160A  158A  2000  120A  158A  	fcall	stringdir
  4039  0B65  00C8               	movwf	??_scale+6
  4040  0B66  160A  158A  2000  120A  158A  	fcall	stringdir
  4041  0B6B  00C9               	movwf	??_scale+7
  4042  0B6C  160A  158A  2000  120A  158A  	fcall	stringdir
  4043  0B71  00CA               	movwf	??_scale+8
  4044  0B72  160A  158A  2000  120A  158A  	fcall	stringdir
  4045  0B77  00CB               	movwf	??_scale+9
  4046  0B78  084B               	movf	??_scale+9,w
  4047  0B79  00AB               	movwf	___flmul@a+3
  4048  0B7A  084A               	movf	??_scale+8,w
  4049  0B7B  00AA               	movwf	___flmul@a+2
  4050  0B7C  0849               	movf	??_scale+7,w
  4051  0B7D  00A9               	movwf	___flmul@a+1
  4052  0B7E  0848               	movf	??_scale+6,w
  4053  0B7F  00A8               	movwf	___flmul@a
  4054  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4055  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0B87  0827               	movf	?___flmul+3,w
  4058  0B88  00CF               	movwf	_scale$828+3
  4059  0B89  0826               	movf	?___flmul+2,w
  4060  0B8A  00CE               	movwf	_scale$828+2
  4061  0B8B  0825               	movf	?___flmul+1,w
  4062  0B8C  00CD               	movwf	_scale$828+1
  4063  0B8D  0824               	movf	?___flmul,w
  4064  0B8E  00CC               	movwf	_scale$828
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4067  0B8F  300A               	movlw	10
  4068  0B90  00F0               	movwf	___awmod@divisor
  4069  0B91  3000               	movlw	0
  4070  0B92  00F1               	movwf	___awmod@divisor+1
  4071  0B93  0850               	movf	scale@scl,w
  4072  0B94  00F2               	movwf	___awmod@dividend
  4073  0B95  01F3               	clrf	___awmod@dividend+1
  4074  0B96  1BF2               	btfsc	___awmod@dividend,7
  4075  0B97  03F3               	decf	___awmod@dividend+1,f
  4076  0B98  160A  158A  2743  120A  158A  	fcall	___awmod
  4077  0B9D  0870               	movf	?___awmod,w
  4078  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0BA0  00C2               	movwf	??_scale
  4081  0BA1  3001               	movlw	1
  4082  0BA2                     u4235:
  4083  0BA2  1003               	clrc
  4084  0BA3  0DC2               	rlf	??_scale,f
  4085  0BA4  3EFF               	addlw	-1
  4086  0BA5  1D03               	skipz
  4087  0BA6  2BA2               	goto	u4235
  4088  0BA7  1003               	clrc
  4089  0BA8  0D42               	rlf	??_scale,w
  4090  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4091  0BAA  0084               	movwf	4
  4092  0BAB  160A  158A  2000  120A  158A  	fcall	stringdir
  4093  0BB0  00C3               	movwf	??_scale+1
  4094  0BB1  160A  158A  2000  120A  158A  	fcall	stringdir
  4095  0BB6  00C4               	movwf	??_scale+2
  4096  0BB7  160A  158A  2000  120A  158A  	fcall	stringdir
  4097  0BBC  00C5               	movwf	??_scale+3
  4098  0BBD  160A  158A  2000  120A  158A  	fcall	stringdir
  4099  0BC2  00C6               	movwf	??_scale+4
  4100  0BC3  0846               	movf	??_scale+4,w
  4101  0BC4  00A7               	movwf	___flmul@b+3
  4102  0BC5  0845               	movf	??_scale+3,w
  4103  0BC6  00A6               	movwf	___flmul@b+2
  4104  0BC7  0844               	movf	??_scale+2,w
  4105  0BC8  00A5               	movwf	___flmul@b+1
  4106  0BC9  0843               	movf	??_scale+1,w
  4107  0BCA  00A4               	movwf	___flmul@b
  4108  0BCB  084F               	movf	_scale$828+3,w
  4109  0BCC  00AB               	movwf	___flmul@a+3
  4110  0BCD  084E               	movf	_scale$828+2,w
  4111  0BCE  00AA               	movwf	___flmul@a+2
  4112  0BCF  084D               	movf	_scale$828+1,w
  4113  0BD0  00A9               	movwf	___flmul@a+1
  4114  0BD1  084C               	movf	_scale$828,w
  4115  0BD2  00A8               	movwf	___flmul@a
  4116  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4117  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0BDA  0827               	movf	?___flmul+3,w
  4120  0BDB  00C1               	movwf	?_scale+3
  4121  0BDC  0826               	movf	?___flmul+2,w
  4122  0BDD  00C0               	movwf	?_scale+2
  4123  0BDE  0825               	movf	?___flmul+1,w
  4124  0BDF  00BF               	movwf	?_scale+1
  4125  0BE0  0824               	movf	?___flmul,w
  4126  0BE1  00BE               	movwf	?_scale
  4127  0BE2  2C9E               	goto	l202
  4128  0BE3                     l2758:
  4129  0BE3  0850               	movf	scale@scl,w
  4130  0BE4  3A80               	xorlw	128
  4131  0BE5  3E75               	addlw	-139
  4132  0BE6  1C03               	skipc
  4133  0BE7  2BE9               	goto	u4241
  4134  0BE8  2BEA               	goto	u4240
  4135  0BE9                     u4241:
  4136  0BE9  2C72               	goto	l2764
  4137  0BEA                     u4240:
  4138  0BEA                     l2760:
  4139                           
  4140                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4141  0BEA  300A               	movlw	10
  4142  0BEB  00F0               	movwf	___awmod@divisor
  4143  0BEC  3000               	movlw	0
  4144  0BED  00F1               	movwf	___awmod@divisor+1
  4145  0BEE  0850               	movf	scale@scl,w
  4146  0BEF  00F2               	movwf	___awmod@dividend
  4147  0BF0  01F3               	clrf	___awmod@dividend+1
  4148  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4149  0BF2  03F3               	decf	___awmod@dividend+1,f
  4150  0BF3  160A  158A  2743  120A  158A  	fcall	___awmod
  4151  0BF8  0870               	movf	?___awmod,w
  4152  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0BFB  00C2               	movwf	??_scale
  4155  0BFC  3001               	movlw	1
  4156  0BFD                     u4255:
  4157  0BFD  1003               	clrc
  4158  0BFE  0DC2               	rlf	??_scale,f
  4159  0BFF  3EFF               	addlw	-1
  4160  0C00  1D03               	skipz
  4161  0C01  2BFD               	goto	u4255
  4162  0C02  1003               	clrc
  4163  0C03  0D42               	rlf	??_scale,w
  4164  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4165  0C05  0084               	movwf	4
  4166  0C06  160A  158A  2000  120A  158A  	fcall	stringdir
  4167  0C0B  00C3               	movwf	??_scale+1
  4168  0C0C  160A  158A  2000  120A  158A  	fcall	stringdir
  4169  0C11  00C4               	movwf	??_scale+2
  4170  0C12  160A  158A  2000  120A  158A  	fcall	stringdir
  4171  0C17  00C5               	movwf	??_scale+3
  4172  0C18  160A  158A  2000  120A  158A  	fcall	stringdir
  4173  0C1D  00C6               	movwf	??_scale+4
  4174  0C1E  0846               	movf	??_scale+4,w
  4175  0C1F  00A7               	movwf	___flmul@b+3
  4176  0C20  0845               	movf	??_scale+3,w
  4177  0C21  00A6               	movwf	___flmul@b+2
  4178  0C22  0844               	movf	??_scale+2,w
  4179  0C23  00A5               	movwf	___flmul@b+1
  4180  0C24  0843               	movf	??_scale+1,w
  4181  0C25  00A4               	movwf	___flmul@b
  4182  0C26  300A               	movlw	10
  4183  0C27  00F7               	movwf	___awdiv@divisor
  4184  0C28  3000               	movlw	0
  4185  0C29  00F8               	movwf	___awdiv@divisor+1
  4186  0C2A  0850               	movf	scale@scl,w
  4187  0C2B  00F9               	movwf	___awdiv@dividend
  4188  0C2C  01FA               	clrf	___awdiv@dividend+1
  4189  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4190  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4191  0C2F  120A  118A  200A  120A  158A  	fcall	___awdiv
  4192  0C34  0877               	movf	?___awdiv,w
  4193  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0C37  00C7               	movwf	??_scale+5
  4196  0C38  3001               	movlw	1
  4197  0C39                     u4265:
  4198  0C39  1003               	clrc
  4199  0C3A  0DC7               	rlf	??_scale+5,f
  4200  0C3B  3EFF               	addlw	-1
  4201  0C3C  1D03               	skipz
  4202  0C3D  2C39               	goto	u4265
  4203  0C3E  1003               	clrc
  4204  0C3F  0D47               	rlf	??_scale+5,w
  4205  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4206  0C41  0084               	movwf	4
  4207  0C42  160A  158A  2000  120A  158A  	fcall	stringdir
  4208  0C47  00C8               	movwf	??_scale+6
  4209  0C48  160A  158A  2000  120A  158A  	fcall	stringdir
  4210  0C4D  00C9               	movwf	??_scale+7
  4211  0C4E  160A  158A  2000  120A  158A  	fcall	stringdir
  4212  0C53  00CA               	movwf	??_scale+8
  4213  0C54  160A  158A  2000  120A  158A  	fcall	stringdir
  4214  0C59  00CB               	movwf	??_scale+9
  4215  0C5A  084B               	movf	??_scale+9,w
  4216  0C5B  00AB               	movwf	___flmul@a+3
  4217  0C5C  084A               	movf	??_scale+8,w
  4218  0C5D  00AA               	movwf	___flmul@a+2
  4219  0C5E  0849               	movf	??_scale+7,w
  4220  0C5F  00A9               	movwf	___flmul@a+1
  4221  0C60  0848               	movf	??_scale+6,w
  4222  0C61  00A8               	movwf	___flmul@a
  4223  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4224  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4225  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0C69  0827               	movf	?___flmul+3,w
  4227  0C6A  00C1               	movwf	?_scale+3
  4228  0C6B  0826               	movf	?___flmul+2,w
  4229  0C6C  00C0               	movwf	?_scale+2
  4230  0C6D  0825               	movf	?___flmul+1,w
  4231  0C6E  00BF               	movwf	?_scale+1
  4232  0C6F  0824               	movf	?___flmul,w
  4233  0C70  00BE               	movwf	?_scale
  4234  0C71  2C9E               	goto	l202
  4235  0C72                     l2764:
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4238  0C72  0850               	movf	scale@scl,w
  4239  0C73  00C2               	movwf	??_scale
  4240  0C74  3001               	movlw	1
  4241  0C75                     u4275:
  4242  0C75  1003               	clrc
  4243  0C76  0DC2               	rlf	??_scale,f
  4244  0C77  3EFF               	addlw	-1
  4245  0C78  1D03               	skipz
  4246  0C79  2C75               	goto	u4275
  4247  0C7A  1003               	clrc
  4248  0C7B  0D42               	rlf	??_scale,w
  4249  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4250  0C7D  0084               	movwf	4
  4251  0C7E  160A  158A  2000  120A  158A  	fcall	stringdir
  4252  0C83  00C3               	movwf	??_scale+1
  4253  0C84  160A  158A  2000  120A  158A  	fcall	stringdir
  4254  0C89  00C4               	movwf	??_scale+2
  4255  0C8A  160A  158A  2000  120A  158A  	fcall	stringdir
  4256  0C8F  00C5               	movwf	??_scale+3
  4257  0C90  160A  158A  2000  120A  158A  	fcall	stringdir
  4258  0C95  00C6               	movwf	??_scale+4
  4259  0C96  0846               	movf	??_scale+4,w
  4260  0C97  00C1               	movwf	?_scale+3
  4261  0C98  0845               	movf	??_scale+3,w
  4262  0C99  00C0               	movwf	?_scale+2
  4263  0C9A  0844               	movf	??_scale+2,w
  4264  0C9B  00BF               	movwf	?_scale+1
  4265  0C9C  0843               	movf	??_scale+1,w
  4266  0C9D  00BE               	movwf	?_scale
  4267  0C9E                     l202:
  4268  0C9E  0008               	return
  4269  0C9F                     __end_of_scale:
  4270                           
  4271                           	psect	text3
  4272  1F43                     __ptext3:	
  4273 ;; *************** function ___awmod *****************
  4274 ;; Defined at:
  4275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  divisor         2    0[COMMON] int 
  4278 ;;  dividend        2    2[COMMON] int 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  sign            1    6[COMMON] unsigned char 
  4281 ;;  counter         1    5[COMMON] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    0[COMMON] int 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4291 ;;      Params:         4       0       0       0       0
  4292 ;;      Locals:         2       0       0       0       0
  4293 ;;      Temps:          1       0       0       0       0
  4294 ;;      Totals:         7       0       0       0       0
  4295 ;;Total ram usage:        7 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_scale
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304  1F43                     ___awmod:	
  4305                           ;psect for function ___awmod
  4306                           
  4307  1F43                     l2242:	
  4308                           ;incstack = 0
  4309                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4310                           
  4311  1F43  01F6               	clrf	___awmod@sign
  4312  1F44                     l2244:
  4313  1F44  1FF3               	btfss	___awmod@dividend+1,7
  4314  1F45  2F47               	goto	u2941
  4315  1F46  2F48               	goto	u2940
  4316  1F47                     u2941:
  4317  1F47  2F4F               	goto	l2250
  4318  1F48                     u2940:
  4319  1F48                     l2246:
  4320  1F48  09F2               	comf	___awmod@dividend,f
  4321  1F49  09F3               	comf	___awmod@dividend+1,f
  4322  1F4A  0AF2               	incf	___awmod@dividend,f
  4323  1F4B  1903               	skipnz
  4324  1F4C  0AF3               	incf	___awmod@dividend+1,f
  4325  1F4D                     l2248:
  4326  1F4D  01F6               	clrf	___awmod@sign
  4327  1F4E  0AF6               	incf	___awmod@sign,f
  4328  1F4F                     l2250:
  4329  1F4F  1FF1               	btfss	___awmod@divisor+1,7
  4330  1F50  2F52               	goto	u2951
  4331  1F51  2F53               	goto	u2950
  4332  1F52                     u2951:
  4333  1F52  2F58               	goto	l2254
  4334  1F53                     u2950:
  4335  1F53                     l2252:
  4336  1F53  09F0               	comf	___awmod@divisor,f
  4337  1F54  09F1               	comf	___awmod@divisor+1,f
  4338  1F55  0AF0               	incf	___awmod@divisor,f
  4339  1F56  1903               	skipnz
  4340  1F57  0AF1               	incf	___awmod@divisor+1,f
  4341  1F58                     l2254:
  4342  1F58  0870               	movf	___awmod@divisor,w
  4343  1F59  0471               	iorwf	___awmod@divisor+1,w
  4344  1F5A  1903               	btfsc	3,2
  4345  1F5B  2F5D               	goto	u2961
  4346  1F5C  2F5E               	goto	u2960
  4347  1F5D                     u2961:
  4348  1F5D  2F8D               	goto	l2272
  4349  1F5E                     u2960:
  4350  1F5E                     l2256:
  4351  1F5E  01F5               	clrf	___awmod@counter
  4352  1F5F  0AF5               	incf	___awmod@counter,f
  4353  1F60  2F6C               	goto	l2262
  4354  1F61                     l2258:
  4355  1F61  3001               	movlw	1
  4356  1F62                     u2975:
  4357  1F62  1003               	clrc
  4358  1F63  0DF0               	rlf	___awmod@divisor,f
  4359  1F64  0DF1               	rlf	___awmod@divisor+1,f
  4360  1F65  3EFF               	addlw	-1
  4361  1F66  1D03               	skipz
  4362  1F67  2F62               	goto	u2975
  4363  1F68                     l2260:
  4364  1F68  3001               	movlw	1
  4365  1F69  00F4               	movwf	??___awmod
  4366  1F6A  0874               	movf	??___awmod,w
  4367  1F6B  07F5               	addwf	___awmod@counter,f
  4368  1F6C                     l2262:
  4369  1F6C  1FF1               	btfss	___awmod@divisor+1,7
  4370  1F6D  2F6F               	goto	u2981
  4371  1F6E  2F70               	goto	u2980
  4372  1F6F                     u2981:
  4373  1F6F  2F61               	goto	l2258
  4374  1F70                     u2980:
  4375  1F70                     l2264:
  4376  1F70  0871               	movf	___awmod@divisor+1,w
  4377  1F71  0273               	subwf	___awmod@dividend+1,w
  4378  1F72  1D03               	skipz
  4379  1F73  2F76               	goto	u2995
  4380  1F74  0870               	movf	___awmod@divisor,w
  4381  1F75  0272               	subwf	___awmod@dividend,w
  4382  1F76                     u2995:
  4383  1F76  1C03               	skipc
  4384  1F77  2F79               	goto	u2991
  4385  1F78  2F7A               	goto	u2990
  4386  1F79                     u2991:
  4387  1F79  2F80               	goto	l2268
  4388  1F7A                     u2990:
  4389  1F7A                     l2266:
  4390  1F7A  0870               	movf	___awmod@divisor,w
  4391  1F7B  02F2               	subwf	___awmod@dividend,f
  4392  1F7C  0871               	movf	___awmod@divisor+1,w
  4393  1F7D  1C03               	skipc
  4394  1F7E  03F3               	decf	___awmod@dividend+1,f
  4395  1F7F  02F3               	subwf	___awmod@dividend+1,f
  4396  1F80                     l2268:
  4397  1F80  3001               	movlw	1
  4398  1F81                     u3005:
  4399  1F81  1003               	clrc
  4400  1F82  0CF1               	rrf	___awmod@divisor+1,f
  4401  1F83  0CF0               	rrf	___awmod@divisor,f
  4402  1F84  3EFF               	addlw	-1
  4403  1F85  1D03               	skipz
  4404  1F86  2F81               	goto	u3005
  4405  1F87                     l2270:
  4406  1F87  3001               	movlw	1
  4407  1F88  02F5               	subwf	___awmod@counter,f
  4408  1F89  1D03               	btfss	3,2
  4409  1F8A  2F8C               	goto	u3011
  4410  1F8B  2F8D               	goto	u3010
  4411  1F8C                     u3011:
  4412  1F8C  2F70               	goto	l2264
  4413  1F8D                     u3010:
  4414  1F8D                     l2272:
  4415  1F8D  0876               	movf	___awmod@sign,w
  4416  1F8E  1903               	btfsc	3,2
  4417  1F8F  2F91               	goto	u3021
  4418  1F90  2F92               	goto	u3020
  4419  1F91                     u3021:
  4420  1F91  2F97               	goto	l2276
  4421  1F92                     u3020:
  4422  1F92                     l2274:
  4423  1F92  09F2               	comf	___awmod@dividend,f
  4424  1F93  09F3               	comf	___awmod@dividend+1,f
  4425  1F94  0AF2               	incf	___awmod@dividend,f
  4426  1F95  1903               	skipnz
  4427  1F96  0AF3               	incf	___awmod@dividend+1,f
  4428  1F97                     l2276:
  4429  1F97  0873               	movf	___awmod@dividend+1,w
  4430  1F98  00F1               	movwf	?___awmod+1
  4431  1F99  0872               	movf	___awmod@dividend,w
  4432  1F9A  00F0               	movwf	?___awmod
  4433  1F9B                     l455:
  4434  1F9B  0008               	return
  4435  1F9C                     __end_of___awmod:
  4436                           
  4437                           	psect	text4
  4438  000A                     __ptext4:	
  4439 ;; *************** function ___awdiv *****************
  4440 ;; Defined at:
  4441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  divisor         2    7[COMMON] int 
  4444 ;;  dividend        2    9[COMMON] int 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  quotient        2    2[BANK0 ] int 
  4447 ;;  sign            1    1[BANK0 ] unsigned char 
  4448 ;;  counter         1    0[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    7[COMMON] int 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         4       0       0       0       0
  4459 ;;      Locals:         0       4       0       0       0
  4460 ;;      Temps:          1       0       0       0       0
  4461 ;;      Totals:         5       4       0       0       0
  4462 ;;Total ram usage:        9 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_scale
  4468 ;;		_sprintf
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472  000A                     ___awdiv:	
  4473                           ;psect for function ___awdiv
  4474                           
  4475  000A                     l2198:	
  4476                           ;incstack = 0
  4477                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4478                           
  4479  000A  1283               	bcf	3,5	;RP0=0, select bank0
  4480  000B  1303               	bcf	3,6	;RP1=0, select bank0
  4481  000C  01A1               	clrf	___awdiv@sign
  4482  000D                     l2200:
  4483  000D  1FF8               	btfss	___awdiv@divisor+1,7
  4484  000E  2810               	goto	u2841
  4485  000F  2811               	goto	u2840
  4486  0010                     u2841:
  4487  0010  2818               	goto	l2206
  4488  0011                     u2840:
  4489  0011                     l2202:
  4490  0011  09F7               	comf	___awdiv@divisor,f
  4491  0012  09F8               	comf	___awdiv@divisor+1,f
  4492  0013  0AF7               	incf	___awdiv@divisor,f
  4493  0014  1903               	skipnz
  4494  0015  0AF8               	incf	___awdiv@divisor+1,f
  4495  0016                     l2204:
  4496  0016  01A1               	clrf	___awdiv@sign
  4497  0017  0AA1               	incf	___awdiv@sign,f
  4498  0018                     l2206:
  4499  0018  1FFA               	btfss	___awdiv@dividend+1,7
  4500  0019  281B               	goto	u2851
  4501  001A  281C               	goto	u2850
  4502  001B                     u2851:
  4503  001B  2825               	goto	l2212
  4504  001C                     u2850:
  4505  001C                     l2208:
  4506  001C  09F9               	comf	___awdiv@dividend,f
  4507  001D  09FA               	comf	___awdiv@dividend+1,f
  4508  001E  0AF9               	incf	___awdiv@dividend,f
  4509  001F  1903               	skipnz
  4510  0020  0AFA               	incf	___awdiv@dividend+1,f
  4511  0021                     l2210:
  4512  0021  3001               	movlw	1
  4513  0022  00FB               	movwf	??___awdiv
  4514  0023  087B               	movf	??___awdiv,w
  4515  0024  06A1               	xorwf	___awdiv@sign,f
  4516  0025                     l2212:
  4517  0025  01A2               	clrf	___awdiv@quotient
  4518  0026  01A3               	clrf	___awdiv@quotient+1
  4519  0027                     l2214:
  4520  0027  0877               	movf	___awdiv@divisor,w
  4521  0028  0478               	iorwf	___awdiv@divisor+1,w
  4522  0029  1903               	btfsc	3,2
  4523  002A  282C               	goto	u2861
  4524  002B  282D               	goto	u2860
  4525  002C                     u2861:
  4526  002C  2864               	goto	l2234
  4527  002D                     u2860:
  4528  002D                     l2216:
  4529  002D  01A0               	clrf	___awdiv@counter
  4530  002E  0AA0               	incf	___awdiv@counter,f
  4531  002F  283B               	goto	l2222
  4532  0030                     l2218:
  4533  0030  3001               	movlw	1
  4534  0031                     u2875:
  4535  0031  1003               	clrc
  4536  0032  0DF7               	rlf	___awdiv@divisor,f
  4537  0033  0DF8               	rlf	___awdiv@divisor+1,f
  4538  0034  3EFF               	addlw	-1
  4539  0035  1D03               	skipz
  4540  0036  2831               	goto	u2875
  4541  0037                     l2220:
  4542  0037  3001               	movlw	1
  4543  0038  00FB               	movwf	??___awdiv
  4544  0039  087B               	movf	??___awdiv,w
  4545  003A  07A0               	addwf	___awdiv@counter,f
  4546  003B                     l2222:
  4547  003B  1FF8               	btfss	___awdiv@divisor+1,7
  4548  003C  283E               	goto	u2881
  4549  003D  283F               	goto	u2880
  4550  003E                     u2881:
  4551  003E  2830               	goto	l2218
  4552  003F                     u2880:
  4553  003F                     l2224:
  4554  003F  3001               	movlw	1
  4555  0040                     u2895:
  4556  0040  1003               	clrc
  4557  0041  0DA2               	rlf	___awdiv@quotient,f
  4558  0042  0DA3               	rlf	___awdiv@quotient+1,f
  4559  0043  3EFF               	addlw	-1
  4560  0044  1D03               	skipz
  4561  0045  2840               	goto	u2895
  4562  0046  0878               	movf	___awdiv@divisor+1,w
  4563  0047  027A               	subwf	___awdiv@dividend+1,w
  4564  0048  1D03               	skipz
  4565  0049  284C               	goto	u2905
  4566  004A  0877               	movf	___awdiv@divisor,w
  4567  004B  0279               	subwf	___awdiv@dividend,w
  4568  004C                     u2905:
  4569  004C  1C03               	skipc
  4570  004D  284F               	goto	u2901
  4571  004E  2850               	goto	u2900
  4572  004F                     u2901:
  4573  004F  2857               	goto	l2230
  4574  0050                     u2900:
  4575  0050                     l2226:
  4576  0050  0877               	movf	___awdiv@divisor,w
  4577  0051  02F9               	subwf	___awdiv@dividend,f
  4578  0052  0878               	movf	___awdiv@divisor+1,w
  4579  0053  1C03               	skipc
  4580  0054  03FA               	decf	___awdiv@dividend+1,f
  4581  0055  02FA               	subwf	___awdiv@dividend+1,f
  4582  0056                     l2228:
  4583  0056  1422               	bsf	___awdiv@quotient,0
  4584  0057                     l2230:
  4585  0057  3001               	movlw	1
  4586  0058                     u2915:
  4587  0058  1003               	clrc
  4588  0059  0CF8               	rrf	___awdiv@divisor+1,f
  4589  005A  0CF7               	rrf	___awdiv@divisor,f
  4590  005B  3EFF               	addlw	-1
  4591  005C  1D03               	skipz
  4592  005D  2858               	goto	u2915
  4593  005E                     l2232:
  4594  005E  3001               	movlw	1
  4595  005F  02A0               	subwf	___awdiv@counter,f
  4596  0060  1D03               	btfss	3,2
  4597  0061  2863               	goto	u2921
  4598  0062  2864               	goto	u2920
  4599  0063                     u2921:
  4600  0063  283F               	goto	l2224
  4601  0064                     u2920:
  4602  0064                     l2234:
  4603  0064  0821               	movf	___awdiv@sign,w
  4604  0065  1903               	btfsc	3,2
  4605  0066  2868               	goto	u2931
  4606  0067  2869               	goto	u2930
  4607  0068                     u2931:
  4608  0068  286E               	goto	l2238
  4609  0069                     u2930:
  4610  0069                     l2236:
  4611  0069  09A2               	comf	___awdiv@quotient,f
  4612  006A  09A3               	comf	___awdiv@quotient+1,f
  4613  006B  0AA2               	incf	___awdiv@quotient,f
  4614  006C  1903               	skipnz
  4615  006D  0AA3               	incf	___awdiv@quotient+1,f
  4616  006E                     l2238:
  4617  006E  0823               	movf	___awdiv@quotient+1,w
  4618  006F  00F8               	movwf	?___awdiv+1
  4619  0070  0822               	movf	___awdiv@quotient,w
  4620  0071  00F7               	movwf	?___awdiv
  4621  0072                     l442:
  4622  0072  0008               	return
  4623  0073                     __end_of___awdiv:
  4624                           
  4625                           	psect	text5
  4626  1CBC                     __ptext5:	
  4627 ;; *************** function _isdigit *****************
  4628 ;; Defined at:
  4629 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  c               1    wreg     unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  c               1    1[COMMON] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;		None               void
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4643 ;;      Params:         0       0       0       0       0
  4644 ;;      Locals:         2       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0
  4646 ;;      Totals:         2       0       0       0       0
  4647 ;;Total ram usage:        2 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_sprintf
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656  1CBC                     _isdigit:	
  4657                           ;psect for function _isdigit
  4658                           
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4662                           ;isdigit@c stored from wreg
  4663  1CBC  00F1               	movwf	isdigit@c
  4664  1CBD                     l2768:
  4665  1CBD  01F0               	clrf	_isdigit$634
  4666  1CBE                     l2770:
  4667  1CBE  303A               	movlw	58
  4668  1CBF  0271               	subwf	isdigit@c,w
  4669  1CC0  1803               	skipnc
  4670  1CC1  2CC3               	goto	u4281
  4671  1CC2  2CC4               	goto	u4280
  4672  1CC3                     u4281:
  4673  1CC3  2CCC               	goto	l2776
  4674  1CC4                     u4280:
  4675  1CC4                     l2772:
  4676  1CC4  3030               	movlw	48
  4677  1CC5  0271               	subwf	isdigit@c,w
  4678  1CC6  1C03               	skipc
  4679  1CC7  2CC9               	goto	u4291
  4680  1CC8  2CCA               	goto	u4290
  4681  1CC9                     u4291:
  4682  1CC9  2CCC               	goto	l2776
  4683  1CCA                     u4290:
  4684  1CCA                     l2774:
  4685  1CCA  01F0               	clrf	_isdigit$634
  4686  1CCB  0AF0               	incf	_isdigit$634,f
  4687  1CCC                     l2776:
  4688  1CCC  0C70               	rrf	_isdigit$634,w
  4689  1CCD                     l776:
  4690  1CCD  0008               	return
  4691  1CCE                     __end_of_isdigit:
  4692                           
  4693                           	psect	text6
  4694  136D                     __ptext6:	
  4695 ;; *************** function _fround *****************
  4696 ;; Defined at:
  4697 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  prec            1    wreg     unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  prec            1   49[BANK0 ] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  4   30[BANK0 ] unsigned char 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4711 ;;      Params:         0       4       0       0       0
  4712 ;;      Locals:         0       9       0       0       0
  4713 ;;      Temps:          0       7       0       0       0
  4714 ;;      Totals:         0      20       0       0       0
  4715 ;;Total ram usage:       20 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 2
  4718 ;; This function calls:
  4719 ;;		___flmul
  4720 ;;		___lwdiv
  4721 ;;		___lwmod
  4722 ;; This function is called by:
  4723 ;;		_sprintf
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727  136D                     _fround:	
  4728                           ;psect for function _fround
  4729                           
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4733                           ;fround@prec stored from wreg
  4734  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4735  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4736  136F  00D1               	movwf	fround@prec
  4737  1370                     l2710:
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4740  1370  306E               	movlw	110
  4741  1371  0251               	subwf	fround@prec,w
  4742  1372  1C03               	skipc
  4743  1373  2B75               	goto	u4031
  4744  1374  2B76               	goto	u4030
  4745  1375                     u4031:
  4746  1375  2C83               	goto	l2718
  4747  1376                     u4030:
  4748  1376                     l2712:
  4749                           
  4750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4751  1376  303F               	movlw	63
  4752  1377  00A7               	movwf	___flmul@b+3
  4753  1378  3000               	movlw	0
  4754  1379  00A6               	movwf	___flmul@b+2
  4755  137A  3000               	movlw	0
  4756  137B  00A5               	movwf	___flmul@b+1
  4757  137C  3000               	movlw	0
  4758  137D  00A4               	movwf	___flmul@b
  4759  137E  3064               	movlw	100
  4760  137F  00F6               	movwf	___lwdiv@divisor
  4761  1380  3000               	movlw	0
  4762  1381  00F7               	movwf	___lwdiv@divisor+1
  4763  1382  0851               	movf	fround@prec,w
  4764  1383  00C2               	movwf	??_fround
  4765  1384  01C3               	clrf	??_fround+1
  4766  1385  0842               	movf	??_fround,w
  4767  1386  00F8               	movwf	___lwdiv@dividend
  4768  1387  0843               	movf	??_fround+1,w
  4769  1388  00F9               	movwf	___lwdiv@dividend+1
  4770  1389  160A  158A  2613  160A  118A  	fcall	___lwdiv
  4771  138E  0876               	movf	?___lwdiv,w
  4772  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4773  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4774  1391  00C4               	movwf	??_fround+2
  4775  1392  3001               	movlw	1
  4776  1393                     u4045:
  4777  1393  1003               	clrc
  4778  1394  0DC4               	rlf	??_fround+2,f
  4779  1395  3EFF               	addlw	-1
  4780  1396  1D03               	skipz
  4781  1397  2B93               	goto	u4045
  4782  1398  1003               	clrc
  4783  1399  0D44               	rlf	??_fround+2,w
  4784  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4785  139B  0084               	movwf	4
  4786  139C  160A  158A  2000  160A  118A  	fcall	stringdir
  4787  13A1  00C5               	movwf	??_fround+3
  4788  13A2  160A  158A  2000  160A  118A  	fcall	stringdir
  4789  13A7  00C6               	movwf	??_fround+4
  4790  13A8  160A  158A  2000  160A  118A  	fcall	stringdir
  4791  13AD  00C7               	movwf	??_fround+5
  4792  13AE  160A  158A  2000  160A  118A  	fcall	stringdir
  4793  13B3  00C8               	movwf	??_fround+6
  4794  13B4  0848               	movf	??_fround+6,w
  4795  13B5  00AB               	movwf	___flmul@a+3
  4796  13B6  0847               	movf	??_fround+5,w
  4797  13B7  00AA               	movwf	___flmul@a+2
  4798  13B8  0846               	movf	??_fround+4,w
  4799  13B9  00A9               	movwf	___flmul@a+1
  4800  13BA  0845               	movf	??_fround+3,w
  4801  13BB  00A8               	movwf	___flmul@a
  4802  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4803  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4804  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4805  13C3  0827               	movf	?___flmul+3,w
  4806  13C4  00D0               	movwf	_fround$826+3
  4807  13C5  0826               	movf	?___flmul+2,w
  4808  13C6  00CF               	movwf	_fround$826+2
  4809  13C7  0825               	movf	?___flmul+1,w
  4810  13C8  00CE               	movwf	_fround$826+1
  4811  13C9  0824               	movf	?___flmul,w
  4812  13CA  00CD               	movwf	_fround$826
  4813                           
  4814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4815  13CB  300A               	movlw	10
  4816  13CC  00F6               	movwf	___lwdiv@divisor
  4817  13CD  3000               	movlw	0
  4818  13CE  00F7               	movwf	___lwdiv@divisor+1
  4819  13CF  0851               	movf	fround@prec,w
  4820  13D0  00C2               	movwf	??_fround
  4821  13D1  01C3               	clrf	??_fround+1
  4822  13D2  0842               	movf	??_fround,w
  4823  13D3  00F2               	movwf	___lwmod@dividend
  4824  13D4  0843               	movf	??_fround+1,w
  4825  13D5  00F3               	movwf	___lwmod@dividend+1
  4826  13D6  3064               	movlw	100
  4827  13D7  00F0               	movwf	___lwmod@divisor
  4828  13D8  3000               	movlw	0
  4829  13D9  00F1               	movwf	___lwmod@divisor+1
  4830  13DA  160A  158A  25D9  160A  118A  	fcall	___lwmod
  4831  13DF  0871               	movf	?___lwmod+1,w
  4832  13E0  00F9               	movwf	___lwdiv@dividend+1
  4833  13E1  0870               	movf	?___lwmod,w
  4834  13E2  00F8               	movwf	___lwdiv@dividend
  4835  13E3  160A  158A  2613  160A  118A  	fcall	___lwdiv
  4836  13E8  0876               	movf	?___lwdiv,w
  4837  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4838  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4839  13EB  00C4               	movwf	??_fround+2
  4840  13EC  3001               	movlw	1
  4841  13ED                     u4055:
  4842  13ED  1003               	clrc
  4843  13EE  0DC4               	rlf	??_fround+2,f
  4844  13EF  3EFF               	addlw	-1
  4845  13F0  1D03               	skipz
  4846  13F1  2BED               	goto	u4055
  4847  13F2  1003               	clrc
  4848  13F3  0D44               	rlf	??_fround+2,w
  4849  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4850  13F5  0084               	movwf	4
  4851  13F6  160A  158A  2000  160A  118A  	fcall	stringdir
  4852  13FB  00C5               	movwf	??_fround+3
  4853  13FC  160A  158A  2000  160A  118A  	fcall	stringdir
  4854  1401  00C6               	movwf	??_fround+4
  4855  1402  160A  158A  2000  160A  118A  	fcall	stringdir
  4856  1407  00C7               	movwf	??_fround+5
  4857  1408  160A  158A  2000  160A  118A  	fcall	stringdir
  4858  140D  00C8               	movwf	??_fround+6
  4859  140E  0848               	movf	??_fround+6,w
  4860  140F  00A7               	movwf	___flmul@b+3
  4861  1410  0847               	movf	??_fround+5,w
  4862  1411  00A6               	movwf	___flmul@b+2
  4863  1412  0846               	movf	??_fround+4,w
  4864  1413  00A5               	movwf	___flmul@b+1
  4865  1414  0845               	movf	??_fround+3,w
  4866  1415  00A4               	movwf	___flmul@b
  4867  1416  0850               	movf	_fround$826+3,w
  4868  1417  00AB               	movwf	___flmul@a+3
  4869  1418  084F               	movf	_fround$826+2,w
  4870  1419  00AA               	movwf	___flmul@a+2
  4871  141A  084E               	movf	_fround$826+1,w
  4872  141B  00A9               	movwf	___flmul@a+1
  4873  141C  084D               	movf	_fround$826,w
  4874  141D  00A8               	movwf	___flmul@a
  4875  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  4876  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4877  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4878  1425  0827               	movf	?___flmul+3,w
  4879  1426  00CC               	movwf	_fround$827+3
  4880  1427  0826               	movf	?___flmul+2,w
  4881  1428  00CB               	movwf	_fround$827+2
  4882  1429  0825               	movf	?___flmul+1,w
  4883  142A  00CA               	movwf	_fround$827+1
  4884  142B  0824               	movf	?___flmul,w
  4885  142C  00C9               	movwf	_fround$827
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4888  142D  300A               	movlw	10
  4889  142E  00F0               	movwf	___lwmod@divisor
  4890  142F  3000               	movlw	0
  4891  1430  00F1               	movwf	___lwmod@divisor+1
  4892  1431  0851               	movf	fround@prec,w
  4893  1432  00C2               	movwf	??_fround
  4894  1433  01C3               	clrf	??_fround+1
  4895  1434  0842               	movf	??_fround,w
  4896  1435  00F2               	movwf	___lwmod@dividend
  4897  1436  0843               	movf	??_fround+1,w
  4898  1437  00F3               	movwf	___lwmod@dividend+1
  4899  1438  160A  158A  25D9  160A  118A  	fcall	___lwmod
  4900  143D  0870               	movf	?___lwmod,w
  4901  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4902  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4903  1440  00C4               	movwf	??_fround+2
  4904  1441  3001               	movlw	1
  4905  1442                     u4065:
  4906  1442  1003               	clrc
  4907  1443  0DC4               	rlf	??_fround+2,f
  4908  1444  3EFF               	addlw	-1
  4909  1445  1D03               	skipz
  4910  1446  2C42               	goto	u4065
  4911  1447  1003               	clrc
  4912  1448  0D44               	rlf	??_fround+2,w
  4913  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4914  144A  0084               	movwf	4
  4915  144B  160A  158A  2000  160A  118A  	fcall	stringdir
  4916  1450  00C5               	movwf	??_fround+3
  4917  1451  160A  158A  2000  160A  118A  	fcall	stringdir
  4918  1456  00C6               	movwf	??_fround+4
  4919  1457  160A  158A  2000  160A  118A  	fcall	stringdir
  4920  145C  00C7               	movwf	??_fround+5
  4921  145D  160A  158A  2000  160A  118A  	fcall	stringdir
  4922  1462  00C8               	movwf	??_fround+6
  4923  1463  0848               	movf	??_fround+6,w
  4924  1464  00A7               	movwf	___flmul@b+3
  4925  1465  0847               	movf	??_fround+5,w
  4926  1466  00A6               	movwf	___flmul@b+2
  4927  1467  0846               	movf	??_fround+4,w
  4928  1468  00A5               	movwf	___flmul@b+1
  4929  1469  0845               	movf	??_fround+3,w
  4930  146A  00A4               	movwf	___flmul@b
  4931  146B  084C               	movf	_fround$827+3,w
  4932  146C  00AB               	movwf	___flmul@a+3
  4933  146D  084B               	movf	_fround$827+2,w
  4934  146E  00AA               	movwf	___flmul@a+2
  4935  146F  084A               	movf	_fround$827+1,w
  4936  1470  00A9               	movwf	___flmul@a+1
  4937  1471  0849               	movf	_fround$827,w
  4938  1472  00A8               	movwf	___flmul@a
  4939  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  4940  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4941  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4942  147A  0827               	movf	?___flmul+3,w
  4943  147B  00C1               	movwf	?_fround+3
  4944  147C  0826               	movf	?___flmul+2,w
  4945  147D  00C0               	movwf	?_fround+2
  4946  147E  0825               	movf	?___flmul+1,w
  4947  147F  00BF               	movwf	?_fround+1
  4948  1480  0824               	movf	?___flmul,w
  4949  1481  00BE               	movwf	?_fround
  4950  1482  2D77               	goto	l195
  4951  1483                     l2718:
  4952  1483  300B               	movlw	11
  4953  1484  0251               	subwf	fround@prec,w
  4954  1485  1C03               	skipc
  4955  1486  2C88               	goto	u4071
  4956  1487  2C89               	goto	u4070
  4957  1488                     u4071:
  4958  1488  2D34               	goto	l2724
  4959  1489                     u4070:
  4960  1489                     l2720:
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4963  1489  303F               	movlw	63
  4964  148A  00A7               	movwf	___flmul@b+3
  4965  148B  3000               	movlw	0
  4966  148C  00A6               	movwf	___flmul@b+2
  4967  148D  3000               	movlw	0
  4968  148E  00A5               	movwf	___flmul@b+1
  4969  148F  3000               	movlw	0
  4970  1490  00A4               	movwf	___flmul@b
  4971  1491  300A               	movlw	10
  4972  1492  00F6               	movwf	___lwdiv@divisor
  4973  1493  3000               	movlw	0
  4974  1494  00F7               	movwf	___lwdiv@divisor+1
  4975  1495  0851               	movf	fround@prec,w
  4976  1496  00C2               	movwf	??_fround
  4977  1497  01C3               	clrf	??_fround+1
  4978  1498  0842               	movf	??_fround,w
  4979  1499  00F8               	movwf	___lwdiv@dividend
  4980  149A  0843               	movf	??_fround+1,w
  4981  149B  00F9               	movwf	___lwdiv@dividend+1
  4982  149C  160A  158A  2613  160A  118A  	fcall	___lwdiv
  4983  14A1  0876               	movf	?___lwdiv,w
  4984  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  4985  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  4986  14A4  00C4               	movwf	??_fround+2
  4987  14A5  3001               	movlw	1
  4988  14A6                     u4085:
  4989  14A6  1003               	clrc
  4990  14A7  0DC4               	rlf	??_fround+2,f
  4991  14A8  3EFF               	addlw	-1
  4992  14A9  1D03               	skipz
  4993  14AA  2CA6               	goto	u4085
  4994  14AB  1003               	clrc
  4995  14AC  0D44               	rlf	??_fround+2,w
  4996  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4997  14AE  0084               	movwf	4
  4998  14AF  160A  158A  2000  160A  118A  	fcall	stringdir
  4999  14B4  00C5               	movwf	??_fround+3
  5000  14B5  160A  158A  2000  160A  118A  	fcall	stringdir
  5001  14BA  00C6               	movwf	??_fround+4
  5002  14BB  160A  158A  2000  160A  118A  	fcall	stringdir
  5003  14C0  00C7               	movwf	??_fround+5
  5004  14C1  160A  158A  2000  160A  118A  	fcall	stringdir
  5005  14C6  00C8               	movwf	??_fround+6
  5006  14C7  0848               	movf	??_fround+6,w
  5007  14C8  00AB               	movwf	___flmul@a+3
  5008  14C9  0847               	movf	??_fround+5,w
  5009  14CA  00AA               	movwf	___flmul@a+2
  5010  14CB  0846               	movf	??_fround+4,w
  5011  14CC  00A9               	movwf	___flmul@a+1
  5012  14CD  0845               	movf	??_fround+3,w
  5013  14CE  00A8               	movwf	___flmul@a
  5014  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5015  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5016  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5017  14D6  0827               	movf	?___flmul+3,w
  5018  14D7  00D0               	movwf	_fround$826+3
  5019  14D8  0826               	movf	?___flmul+2,w
  5020  14D9  00CF               	movwf	_fround$826+2
  5021  14DA  0825               	movf	?___flmul+1,w
  5022  14DB  00CE               	movwf	_fround$826+1
  5023  14DC  0824               	movf	?___flmul,w
  5024  14DD  00CD               	movwf	_fround$826
  5025                           
  5026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5027  14DE  300A               	movlw	10
  5028  14DF  00F0               	movwf	___lwmod@divisor
  5029  14E0  3000               	movlw	0
  5030  14E1  00F1               	movwf	___lwmod@divisor+1
  5031  14E2  0851               	movf	fround@prec,w
  5032  14E3  00C2               	movwf	??_fround
  5033  14E4  01C3               	clrf	??_fround+1
  5034  14E5  0842               	movf	??_fround,w
  5035  14E6  00F2               	movwf	___lwmod@dividend
  5036  14E7  0843               	movf	??_fround+1,w
  5037  14E8  00F3               	movwf	___lwmod@dividend+1
  5038  14E9  160A  158A  25D9  160A  118A  	fcall	___lwmod
  5039  14EE  0870               	movf	?___lwmod,w
  5040  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5041  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5042  14F1  00C4               	movwf	??_fround+2
  5043  14F2  3001               	movlw	1
  5044  14F3                     u4095:
  5045  14F3  1003               	clrc
  5046  14F4  0DC4               	rlf	??_fround+2,f
  5047  14F5  3EFF               	addlw	-1
  5048  14F6  1D03               	skipz
  5049  14F7  2CF3               	goto	u4095
  5050  14F8  1003               	clrc
  5051  14F9  0D44               	rlf	??_fround+2,w
  5052  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5053  14FB  0084               	movwf	4
  5054  14FC  160A  158A  2000  160A  118A  	fcall	stringdir
  5055  1501  00C5               	movwf	??_fround+3
  5056  1502  160A  158A  2000  160A  118A  	fcall	stringdir
  5057  1507  00C6               	movwf	??_fround+4
  5058  1508  160A  158A  2000  160A  118A  	fcall	stringdir
  5059  150D  00C7               	movwf	??_fround+5
  5060  150E  160A  158A  2000  160A  118A  	fcall	stringdir
  5061  1513  00C8               	movwf	??_fround+6
  5062  1514  0848               	movf	??_fround+6,w
  5063  1515  00A7               	movwf	___flmul@b+3
  5064  1516  0847               	movf	??_fround+5,w
  5065  1517  00A6               	movwf	___flmul@b+2
  5066  1518  0846               	movf	??_fround+4,w
  5067  1519  00A5               	movwf	___flmul@b+1
  5068  151A  0845               	movf	??_fround+3,w
  5069  151B  00A4               	movwf	___flmul@b
  5070  151C  0850               	movf	_fround$826+3,w
  5071  151D  00AB               	movwf	___flmul@a+3
  5072  151E  084F               	movf	_fround$826+2,w
  5073  151F  00AA               	movwf	___flmul@a+2
  5074  1520  084E               	movf	_fround$826+1,w
  5075  1521  00A9               	movwf	___flmul@a+1
  5076  1522  084D               	movf	_fround$826,w
  5077  1523  00A8               	movwf	___flmul@a
  5078  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5079  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5080  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5081  152B  0827               	movf	?___flmul+3,w
  5082  152C  00C1               	movwf	?_fround+3
  5083  152D  0826               	movf	?___flmul+2,w
  5084  152E  00C0               	movwf	?_fround+2
  5085  152F  0825               	movf	?___flmul+1,w
  5086  1530  00BF               	movwf	?_fround+1
  5087  1531  0824               	movf	?___flmul,w
  5088  1532  00BE               	movwf	?_fround
  5089  1533  2D77               	goto	l195
  5090  1534                     l2724:
  5091                           
  5092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5093  1534  303F               	movlw	63
  5094  1535  00A7               	movwf	___flmul@b+3
  5095  1536  3000               	movlw	0
  5096  1537  00A6               	movwf	___flmul@b+2
  5097  1538  3000               	movlw	0
  5098  1539  00A5               	movwf	___flmul@b+1
  5099  153A  3000               	movlw	0
  5100  153B  00A4               	movwf	___flmul@b
  5101  153C  0851               	movf	fround@prec,w
  5102  153D  00C2               	movwf	??_fround
  5103  153E  3001               	movlw	1
  5104  153F                     u4105:
  5105  153F  1003               	clrc
  5106  1540  0DC2               	rlf	??_fround,f
  5107  1541  3EFF               	addlw	-1
  5108  1542  1D03               	skipz
  5109  1543  2D3F               	goto	u4105
  5110  1544  1003               	clrc
  5111  1545  0D42               	rlf	??_fround,w
  5112  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5113  1547  0084               	movwf	4
  5114  1548  160A  158A  2000  160A  118A  	fcall	stringdir
  5115  154D  00C3               	movwf	??_fround+1
  5116  154E  160A  158A  2000  160A  118A  	fcall	stringdir
  5117  1553  00C4               	movwf	??_fround+2
  5118  1554  160A  158A  2000  160A  118A  	fcall	stringdir
  5119  1559  00C5               	movwf	??_fround+3
  5120  155A  160A  158A  2000  160A  118A  	fcall	stringdir
  5121  155F  00C6               	movwf	??_fround+4
  5122  1560  0846               	movf	??_fround+4,w
  5123  1561  00AB               	movwf	___flmul@a+3
  5124  1562  0845               	movf	??_fround+3,w
  5125  1563  00AA               	movwf	___flmul@a+2
  5126  1564  0844               	movf	??_fround+2,w
  5127  1565  00A9               	movwf	___flmul@a+1
  5128  1566  0843               	movf	??_fround+1,w
  5129  1567  00A8               	movwf	___flmul@a
  5130  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5131  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5132  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5133  156F  0827               	movf	?___flmul+3,w
  5134  1570  00C1               	movwf	?_fround+3
  5135  1571  0826               	movf	?___flmul+2,w
  5136  1572  00C0               	movwf	?_fround+2
  5137  1573  0825               	movf	?___flmul+1,w
  5138  1574  00BF               	movwf	?_fround+1
  5139  1575  0824               	movf	?___flmul,w
  5140  1576  00BE               	movwf	?_fround
  5141  1577                     l195:
  5142  1577  0008               	return
  5143  1578                     __end_of_fround:
  5144                           
  5145                           	psect	text7
  5146  1DD9                     __ptext7:	
  5147 ;; *************** function ___lwmod *****************
  5148 ;; Defined at:
  5149 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  divisor         2    0[COMMON] unsigned int 
  5152 ;;  dividend        2    2[COMMON] unsigned int 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  counter         1    5[COMMON] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  2    0[COMMON] unsigned int 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5164 ;;      Params:         4       0       0       0       0
  5165 ;;      Locals:         1       0       0       0       0
  5166 ;;      Temps:          1       0       0       0       0
  5167 ;;      Totals:         6       0       0       0       0
  5168 ;;Total ram usage:        6 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_fround
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177  1DD9                     ___lwmod:	
  5178                           ;psect for function ___lwmod
  5179                           
  5180  1DD9                     l2306:	
  5181                           ;incstack = 0
  5182                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5183                           
  5184  1DD9  0870               	movf	___lwmod@divisor,w
  5185  1DDA  0471               	iorwf	___lwmod@divisor+1,w
  5186  1DDB  1903               	btfsc	3,2
  5187  1DDC  2DDE               	goto	u3101
  5188  1DDD  2DDF               	goto	u3100
  5189  1DDE                     u3101:
  5190  1DDE  2E0E               	goto	l2324
  5191  1DDF                     u3100:
  5192  1DDF                     l2308:
  5193  1DDF  01F5               	clrf	___lwmod@counter
  5194  1DE0  0AF5               	incf	___lwmod@counter,f
  5195  1DE1  2DED               	goto	l2314
  5196  1DE2                     l2310:
  5197  1DE2  3001               	movlw	1
  5198  1DE3                     u3115:
  5199  1DE3  1003               	clrc
  5200  1DE4  0DF0               	rlf	___lwmod@divisor,f
  5201  1DE5  0DF1               	rlf	___lwmod@divisor+1,f
  5202  1DE6  3EFF               	addlw	-1
  5203  1DE7  1D03               	skipz
  5204  1DE8  2DE3               	goto	u3115
  5205  1DE9                     l2312:
  5206  1DE9  3001               	movlw	1
  5207  1DEA  00F4               	movwf	??___lwmod
  5208  1DEB  0874               	movf	??___lwmod,w
  5209  1DEC  07F5               	addwf	___lwmod@counter,f
  5210  1DED                     l2314:
  5211  1DED  1FF1               	btfss	___lwmod@divisor+1,7
  5212  1DEE  2DF0               	goto	u3121
  5213  1DEF  2DF1               	goto	u3120
  5214  1DF0                     u3121:
  5215  1DF0  2DE2               	goto	l2310
  5216  1DF1                     u3120:
  5217  1DF1                     l2316:
  5218  1DF1  0871               	movf	___lwmod@divisor+1,w
  5219  1DF2  0273               	subwf	___lwmod@dividend+1,w
  5220  1DF3  1D03               	skipz
  5221  1DF4  2DF7               	goto	u3135
  5222  1DF5  0870               	movf	___lwmod@divisor,w
  5223  1DF6  0272               	subwf	___lwmod@dividend,w
  5224  1DF7                     u3135:
  5225  1DF7  1C03               	skipc
  5226  1DF8  2DFA               	goto	u3131
  5227  1DF9  2DFB               	goto	u3130
  5228  1DFA                     u3131:
  5229  1DFA  2E01               	goto	l2320
  5230  1DFB                     u3130:
  5231  1DFB                     l2318:
  5232  1DFB  0870               	movf	___lwmod@divisor,w
  5233  1DFC  02F2               	subwf	___lwmod@dividend,f
  5234  1DFD  0871               	movf	___lwmod@divisor+1,w
  5235  1DFE  1C03               	skipc
  5236  1DFF  03F3               	decf	___lwmod@dividend+1,f
  5237  1E00  02F3               	subwf	___lwmod@dividend+1,f
  5238  1E01                     l2320:
  5239  1E01  3001               	movlw	1
  5240  1E02                     u3145:
  5241  1E02  1003               	clrc
  5242  1E03  0CF1               	rrf	___lwmod@divisor+1,f
  5243  1E04  0CF0               	rrf	___lwmod@divisor,f
  5244  1E05  3EFF               	addlw	-1
  5245  1E06  1D03               	skipz
  5246  1E07  2E02               	goto	u3145
  5247  1E08                     l2322:
  5248  1E08  3001               	movlw	1
  5249  1E09  02F5               	subwf	___lwmod@counter,f
  5250  1E0A  1D03               	btfss	3,2
  5251  1E0B  2E0D               	goto	u3151
  5252  1E0C  2E0E               	goto	u3150
  5253  1E0D                     u3151:
  5254  1E0D  2DF1               	goto	l2316
  5255  1E0E                     u3150:
  5256  1E0E                     l2324:
  5257  1E0E  0873               	movf	___lwmod@dividend+1,w
  5258  1E0F  00F1               	movwf	?___lwmod+1
  5259  1E10  0872               	movf	___lwmod@dividend,w
  5260  1E11  00F0               	movwf	?___lwmod
  5261  1E12                     l605:
  5262  1E12  0008               	return
  5263  1E13                     __end_of___lwmod:
  5264                           
  5265                           	psect	text8
  5266  0C9F                     __ptext8:	
  5267 ;; *************** function ___flmul *****************
  5268 ;; Defined at:
  5269 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  b               4    4[BANK0 ] unsigned int 
  5272 ;;  a               4    8[BANK0 ] unsigned int 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  prod            4   24[BANK0 ] struct .
  5275 ;;  grs             4   18[BANK0 ] unsigned long 
  5276 ;;  temp            2   28[BANK0 ] struct .
  5277 ;;  bexp            1   23[BANK0 ] unsigned char 
  5278 ;;  aexp            1   22[BANK0 ] unsigned char 
  5279 ;;  sign            1   17[BANK0 ] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  4    4[BANK0 ] unsigned char 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5289 ;;      Params:         0       8       0       0       0
  5290 ;;      Locals:         0      13       0       0       0
  5291 ;;      Temps:          0       5       0       0       0
  5292 ;;      Totals:         0      26       0       0       0
  5293 ;;Total ram usage:       26 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 1
  5296 ;; This function calls:
  5297 ;;		__Umul8_16
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;;		_fround
  5301 ;;		_scale
  5302 ;;		_sprintf
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306  0C9F                     ___flmul:	
  5307                           ;psect for function ___flmul
  5308                           
  5309  0C9F                     l2522:	
  5310                           ;incstack = 0
  5311                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5312                           
  5313  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5314  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5315  0CA1  0827               	movf	___flmul@b+3,w
  5316  0CA2  3980               	andlw	128
  5317  0CA3  00AC               	movwf	??___flmul
  5318  0CA4  082C               	movf	??___flmul,w
  5319  0CA5  00B1               	movwf	___flmul@sign
  5320  0CA6                     l2524:
  5321  0CA6  0827               	movf	___flmul@b+3,w
  5322  0CA7  00AC               	movwf	??___flmul
  5323  0CA8  072C               	addwf	??___flmul,w
  5324  0CA9  00AD               	movwf	??___flmul+1
  5325  0CAA  082D               	movf	??___flmul+1,w
  5326  0CAB  00B7               	movwf	___flmul@bexp
  5327  0CAC                     l2526:
  5328  0CAC  1FA6               	btfss	___flmul@b+2,7
  5329  0CAD  2CAF               	goto	u3621
  5330  0CAE  2CB0               	goto	u3620
  5331  0CAF                     u3621:
  5332  0CAF  2CB1               	goto	l2530
  5333  0CB0                     u3620:
  5334  0CB0                     l2528:
  5335  0CB0  1437               	bsf	___flmul@bexp,0
  5336  0CB1                     l2530:
  5337  0CB1  0837               	movf	___flmul@bexp,w
  5338  0CB2  1903               	btfsc	3,2
  5339  0CB3  2CB5               	goto	u3631
  5340  0CB4  2CB6               	goto	u3630
  5341  0CB5                     u3631:
  5342  0CB5  2CC5               	goto	l2538
  5343  0CB6                     u3630:
  5344  0CB6                     l2532:
  5345  0CB6  0A37               	incf	___flmul@bexp,w
  5346  0CB7  1D03               	btfss	3,2
  5347  0CB8  2CBA               	goto	u3641
  5348  0CB9  2CBB               	goto	u3640
  5349  0CBA                     u3641:
  5350  0CBA  2CC3               	goto	l2536
  5351  0CBB                     u3640:
  5352  0CBB                     l2534:
  5353  0CBB  3000               	movlw	0
  5354  0CBC  00A7               	movwf	___flmul@b+3
  5355  0CBD  3000               	movlw	0
  5356  0CBE  00A6               	movwf	___flmul@b+2
  5357  0CBF  3000               	movlw	0
  5358  0CC0  00A5               	movwf	___flmul@b+1
  5359  0CC1  3000               	movlw	0
  5360  0CC2  00A4               	movwf	___flmul@b
  5361  0CC3                     l2536:
  5362  0CC3  17A6               	bsf	___flmul@b+2,7
  5363  0CC4  2CCD               	goto	l2540
  5364  0CC5                     l2538:
  5365  0CC5  3000               	movlw	0
  5366  0CC6  00A7               	movwf	___flmul@b+3
  5367  0CC7  3000               	movlw	0
  5368  0CC8  00A6               	movwf	___flmul@b+2
  5369  0CC9  3000               	movlw	0
  5370  0CCA  00A5               	movwf	___flmul@b+1
  5371  0CCB  3000               	movlw	0
  5372  0CCC  00A4               	movwf	___flmul@b
  5373  0CCD                     l2540:
  5374  0CCD  082B               	movf	___flmul@a+3,w
  5375  0CCE  3980               	andlw	128
  5376  0CCF  00AC               	movwf	??___flmul
  5377  0CD0  082C               	movf	??___flmul,w
  5378  0CD1  06B1               	xorwf	___flmul@sign,f
  5379  0CD2                     l2542:
  5380  0CD2  082B               	movf	___flmul@a+3,w
  5381  0CD3  00AC               	movwf	??___flmul
  5382  0CD4  072C               	addwf	??___flmul,w
  5383  0CD5  00AD               	movwf	??___flmul+1
  5384  0CD6  082D               	movf	??___flmul+1,w
  5385  0CD7  00B6               	movwf	___flmul@aexp
  5386  0CD8                     l2544:
  5387  0CD8  1FAA               	btfss	___flmul@a+2,7
  5388  0CD9  2CDB               	goto	u3651
  5389  0CDA  2CDC               	goto	u3650
  5390  0CDB                     u3651:
  5391  0CDB  2CDD               	goto	l2548
  5392  0CDC                     u3650:
  5393  0CDC                     l2546:
  5394  0CDC  1436               	bsf	___flmul@aexp,0
  5395  0CDD                     l2548:
  5396  0CDD  0836               	movf	___flmul@aexp,w
  5397  0CDE  1903               	btfsc	3,2
  5398  0CDF  2CE1               	goto	u3661
  5399  0CE0  2CE2               	goto	u3660
  5400  0CE1                     u3661:
  5401  0CE1  2CF1               	goto	l2556
  5402  0CE2                     u3660:
  5403  0CE2                     l2550:
  5404  0CE2  0A36               	incf	___flmul@aexp,w
  5405  0CE3  1D03               	btfss	3,2
  5406  0CE4  2CE6               	goto	u3671
  5407  0CE5  2CE7               	goto	u3670
  5408  0CE6                     u3671:
  5409  0CE6  2CEF               	goto	l2554
  5410  0CE7                     u3670:
  5411  0CE7                     l2552:
  5412  0CE7  3000               	movlw	0
  5413  0CE8  00AB               	movwf	___flmul@a+3
  5414  0CE9  3000               	movlw	0
  5415  0CEA  00AA               	movwf	___flmul@a+2
  5416  0CEB  3000               	movlw	0
  5417  0CEC  00A9               	movwf	___flmul@a+1
  5418  0CED  3000               	movlw	0
  5419  0CEE  00A8               	movwf	___flmul@a
  5420  0CEF                     l2554:
  5421  0CEF  17AA               	bsf	___flmul@a+2,7
  5422  0CF0  2CF9               	goto	l2558
  5423  0CF1                     l2556:
  5424  0CF1  3000               	movlw	0
  5425  0CF2  00AB               	movwf	___flmul@a+3
  5426  0CF3  3000               	movlw	0
  5427  0CF4  00AA               	movwf	___flmul@a+2
  5428  0CF5  3000               	movlw	0
  5429  0CF6  00A9               	movwf	___flmul@a+1
  5430  0CF7  3000               	movlw	0
  5431  0CF8  00A8               	movwf	___flmul@a
  5432  0CF9                     l2558:
  5433  0CF9  0836               	movf	___flmul@aexp,w
  5434  0CFA  1903               	btfsc	3,2
  5435  0CFB  2CFD               	goto	u3681
  5436  0CFC  2CFE               	goto	u3680
  5437  0CFD                     u3681:
  5438  0CFD  2D03               	goto	l2562
  5439  0CFE                     u3680:
  5440  0CFE                     l2560:
  5441  0CFE  0837               	movf	___flmul@bexp,w
  5442  0CFF  1D03               	btfss	3,2
  5443  0D00  2D02               	goto	u3691
  5444  0D01  2D03               	goto	u3690
  5445  0D02                     u3691:
  5446  0D02  2D0C               	goto	l2566
  5447  0D03                     u3690:
  5448  0D03                     l2562:
  5449  0D03  3000               	movlw	0
  5450  0D04  00A7               	movwf	?___flmul+3
  5451  0D05  3000               	movlw	0
  5452  0D06  00A6               	movwf	?___flmul+2
  5453  0D07  3000               	movlw	0
  5454  0D08  00A5               	movwf	?___flmul+1
  5455  0D09  3000               	movlw	0
  5456  0D0A  00A4               	movwf	?___flmul
  5457  0D0B  2FFF               	goto	l712
  5458  0D0C                     l2566:
  5459  0D0C  0824               	movf	___flmul@b,w
  5460  0D0D  00AC               	movwf	??___flmul
  5461  0D0E  082C               	movf	??___flmul,w
  5462  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5463  0D10  082A               	movf	___flmul@a+2,w
  5464  0D11  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5465  0D16  0871               	movf	?__Umul8_16+1,w
  5466  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5467  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5468  0D19  00BD               	movwf	___flmul@temp+1
  5469  0D1A  0870               	movf	?__Umul8_16,w
  5470  0D1B  00BC               	movwf	___flmul@temp
  5471  0D1C                     l2568:
  5472  0D1C  083C               	movf	___flmul@temp,w
  5473  0D1D  00AC               	movwf	??___flmul
  5474  0D1E  01AD               	clrf	??___flmul+1
  5475  0D1F  01AE               	clrf	??___flmul+2
  5476  0D20  01AF               	clrf	??___flmul+3
  5477  0D21  082F               	movf	??___flmul+3,w
  5478  0D22  00B5               	movwf	___flmul@grs+3
  5479  0D23  082E               	movf	??___flmul+2,w
  5480  0D24  00B4               	movwf	___flmul@grs+2
  5481  0D25  082D               	movf	??___flmul+1,w
  5482  0D26  00B3               	movwf	___flmul@grs+1
  5483  0D27  082C               	movf	??___flmul,w
  5484  0D28  00B2               	movwf	___flmul@grs
  5485  0D29                     l2570:
  5486  0D29  083D               	movf	___flmul@temp+1,w
  5487  0D2A  00AC               	movwf	??___flmul
  5488  0D2B  01AD               	clrf	??___flmul+1
  5489  0D2C  01AE               	clrf	??___flmul+2
  5490  0D2D  01AF               	clrf	??___flmul+3
  5491  0D2E  082F               	movf	??___flmul+3,w
  5492  0D2F  00BB               	movwf	___flmul@prod+3
  5493  0D30  082E               	movf	??___flmul+2,w
  5494  0D31  00BA               	movwf	___flmul@prod+2
  5495  0D32  082D               	movf	??___flmul+1,w
  5496  0D33  00B9               	movwf	___flmul@prod+1
  5497  0D34  082C               	movf	??___flmul,w
  5498  0D35  00B8               	movwf	___flmul@prod
  5499  0D36  0825               	movf	___flmul@b+1,w
  5500  0D37  00AC               	movwf	??___flmul
  5501  0D38  082C               	movf	??___flmul,w
  5502  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5503  0D3A  0829               	movf	___flmul@a+1,w
  5504  0D3B  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5505  0D40  0871               	movf	?__Umul8_16+1,w
  5506  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5508  0D43  00BD               	movwf	___flmul@temp+1
  5509  0D44  0870               	movf	?__Umul8_16,w
  5510  0D45  00BC               	movwf	___flmul@temp
  5511  0D46                     l2572:
  5512  0D46  083C               	movf	___flmul@temp,w
  5513  0D47  00AC               	movwf	??___flmul
  5514  0D48  01AD               	clrf	??___flmul+1
  5515  0D49  01AE               	clrf	??___flmul+2
  5516  0D4A  01AF               	clrf	??___flmul+3
  5517  0D4B  082C               	movf	??___flmul,w
  5518  0D4C  07B2               	addwf	___flmul@grs,f
  5519  0D4D  082D               	movf	??___flmul+1,w
  5520  0D4E  1103               	clrz
  5521  0D4F  1803               	skipnc
  5522  0D50  3E01               	addlw	1
  5523  0D51  1903               	skipnz
  5524  0D52  2D54               	goto	u3701
  5525  0D53  07B3               	addwf	___flmul@grs+1,f
  5526  0D54                     u3701:
  5527  0D54  082E               	movf	??___flmul+2,w
  5528  0D55  1103               	clrz
  5529  0D56  1803               	skipnc
  5530  0D57  3E01               	addlw	1
  5531  0D58  1903               	skipnz
  5532  0D59  2D5B               	goto	u3702
  5533  0D5A  07B4               	addwf	___flmul@grs+2,f
  5534  0D5B                     u3702:
  5535  0D5B  082F               	movf	??___flmul+3,w
  5536  0D5C  1103               	clrz
  5537  0D5D  1803               	skipnc
  5538  0D5E  3E01               	addlw	1
  5539  0D5F  1903               	skipnz
  5540  0D60  2D62               	goto	u3703
  5541  0D61  07B5               	addwf	___flmul@grs+3,f
  5542  0D62                     u3703:
  5543  0D62                     l2574:
  5544  0D62  083D               	movf	___flmul@temp+1,w
  5545  0D63  00AC               	movwf	??___flmul
  5546  0D64  01AD               	clrf	??___flmul+1
  5547  0D65  01AE               	clrf	??___flmul+2
  5548  0D66  01AF               	clrf	??___flmul+3
  5549  0D67  082C               	movf	??___flmul,w
  5550  0D68  07B8               	addwf	___flmul@prod,f
  5551  0D69  082D               	movf	??___flmul+1,w
  5552  0D6A  1103               	clrz
  5553  0D6B  1803               	skipnc
  5554  0D6C  3E01               	addlw	1
  5555  0D6D  1903               	skipnz
  5556  0D6E  2D70               	goto	u3711
  5557  0D6F  07B9               	addwf	___flmul@prod+1,f
  5558  0D70                     u3711:
  5559  0D70  082E               	movf	??___flmul+2,w
  5560  0D71  1103               	clrz
  5561  0D72  1803               	skipnc
  5562  0D73  3E01               	addlw	1
  5563  0D74  1903               	skipnz
  5564  0D75  2D77               	goto	u3712
  5565  0D76  07BA               	addwf	___flmul@prod+2,f
  5566  0D77                     u3712:
  5567  0D77  082F               	movf	??___flmul+3,w
  5568  0D78  1103               	clrz
  5569  0D79  1803               	skipnc
  5570  0D7A  3E01               	addlw	1
  5571  0D7B  1903               	skipnz
  5572  0D7C  2D7E               	goto	u3713
  5573  0D7D  07BB               	addwf	___flmul@prod+3,f
  5574  0D7E                     u3713:
  5575  0D7E  0826               	movf	___flmul@b+2,w
  5576  0D7F  00AC               	movwf	??___flmul
  5577  0D80  082C               	movf	??___flmul,w
  5578  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5579  0D82  0828               	movf	___flmul@a,w
  5580  0D83  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5581  0D88  0871               	movf	?__Umul8_16+1,w
  5582  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5583  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5584  0D8B  00BD               	movwf	___flmul@temp+1
  5585  0D8C  0870               	movf	?__Umul8_16,w
  5586  0D8D  00BC               	movwf	___flmul@temp
  5587  0D8E                     l2576:
  5588  0D8E  083C               	movf	___flmul@temp,w
  5589  0D8F  00AC               	movwf	??___flmul
  5590  0D90  01AD               	clrf	??___flmul+1
  5591  0D91  01AE               	clrf	??___flmul+2
  5592  0D92  01AF               	clrf	??___flmul+3
  5593  0D93  082C               	movf	??___flmul,w
  5594  0D94  07B2               	addwf	___flmul@grs,f
  5595  0D95  082D               	movf	??___flmul+1,w
  5596  0D96  1103               	clrz
  5597  0D97  1803               	skipnc
  5598  0D98  3E01               	addlw	1
  5599  0D99  1903               	skipnz
  5600  0D9A  2D9C               	goto	u3721
  5601  0D9B  07B3               	addwf	___flmul@grs+1,f
  5602  0D9C                     u3721:
  5603  0D9C  082E               	movf	??___flmul+2,w
  5604  0D9D  1103               	clrz
  5605  0D9E  1803               	skipnc
  5606  0D9F  3E01               	addlw	1
  5607  0DA0  1903               	skipnz
  5608  0DA1  2DA3               	goto	u3722
  5609  0DA2  07B4               	addwf	___flmul@grs+2,f
  5610  0DA3                     u3722:
  5611  0DA3  082F               	movf	??___flmul+3,w
  5612  0DA4  1103               	clrz
  5613  0DA5  1803               	skipnc
  5614  0DA6  3E01               	addlw	1
  5615  0DA7  1903               	skipnz
  5616  0DA8  2DAA               	goto	u3723
  5617  0DA9  07B5               	addwf	___flmul@grs+3,f
  5618  0DAA                     u3723:
  5619  0DAA                     l2578:
  5620  0DAA  083D               	movf	___flmul@temp+1,w
  5621  0DAB  00AC               	movwf	??___flmul
  5622  0DAC  01AD               	clrf	??___flmul+1
  5623  0DAD  01AE               	clrf	??___flmul+2
  5624  0DAE  01AF               	clrf	??___flmul+3
  5625  0DAF  082C               	movf	??___flmul,w
  5626  0DB0  07B8               	addwf	___flmul@prod,f
  5627  0DB1  082D               	movf	??___flmul+1,w
  5628  0DB2  1103               	clrz
  5629  0DB3  1803               	skipnc
  5630  0DB4  3E01               	addlw	1
  5631  0DB5  1903               	skipnz
  5632  0DB6  2DB8               	goto	u3731
  5633  0DB7  07B9               	addwf	___flmul@prod+1,f
  5634  0DB8                     u3731:
  5635  0DB8  082E               	movf	??___flmul+2,w
  5636  0DB9  1103               	clrz
  5637  0DBA  1803               	skipnc
  5638  0DBB  3E01               	addlw	1
  5639  0DBC  1903               	skipnz
  5640  0DBD  2DBF               	goto	u3732
  5641  0DBE  07BA               	addwf	___flmul@prod+2,f
  5642  0DBF                     u3732:
  5643  0DBF  082F               	movf	??___flmul+3,w
  5644  0DC0  1103               	clrz
  5645  0DC1  1803               	skipnc
  5646  0DC2  3E01               	addlw	1
  5647  0DC3  1903               	skipnz
  5648  0DC4  2DC6               	goto	u3733
  5649  0DC5  07BB               	addwf	___flmul@prod+3,f
  5650  0DC6                     u3733:
  5651  0DC6                     l2580:
  5652  0DC6  3008               	movlw	8
  5653  0DC7  00AC               	movwf	??___flmul
  5654  0DC8                     u3745:
  5655  0DC8  1003               	clrc
  5656  0DC9  0DB2               	rlf	___flmul@grs,f
  5657  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5658  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5659  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5660  0DCD  0BAC               	decfsz	??___flmul,f
  5661  0DCE  2DC8               	goto	u3745
  5662  0DCF                     l2582:
  5663  0DCF  0825               	movf	___flmul@b+1,w
  5664  0DD0  00AC               	movwf	??___flmul
  5665  0DD1  082C               	movf	??___flmul,w
  5666  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5667  0DD3  0828               	movf	___flmul@a,w
  5668  0DD4  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5669  0DD9  0871               	movf	?__Umul8_16+1,w
  5670  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5671  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5672  0DDC  00BD               	movwf	___flmul@temp+1
  5673  0DDD  0870               	movf	?__Umul8_16,w
  5674  0DDE  00BC               	movwf	___flmul@temp
  5675  0DDF                     l2584:
  5676  0DDF  083C               	movf	___flmul@temp,w
  5677  0DE0  00AC               	movwf	??___flmul
  5678  0DE1  083D               	movf	___flmul@temp+1,w
  5679  0DE2  00AD               	movwf	??___flmul+1
  5680  0DE3  01AE               	clrf	??___flmul+2
  5681  0DE4  01AF               	clrf	??___flmul+3
  5682  0DE5  082C               	movf	??___flmul,w
  5683  0DE6  07B2               	addwf	___flmul@grs,f
  5684  0DE7  082D               	movf	??___flmul+1,w
  5685  0DE8  1103               	clrz
  5686  0DE9  1803               	skipnc
  5687  0DEA  3E01               	addlw	1
  5688  0DEB  1903               	skipnz
  5689  0DEC  2DEE               	goto	u3751
  5690  0DED  07B3               	addwf	___flmul@grs+1,f
  5691  0DEE                     u3751:
  5692  0DEE  082E               	movf	??___flmul+2,w
  5693  0DEF  1103               	clrz
  5694  0DF0  1803               	skipnc
  5695  0DF1  3E01               	addlw	1
  5696  0DF2  1903               	skipnz
  5697  0DF3  2DF5               	goto	u3752
  5698  0DF4  07B4               	addwf	___flmul@grs+2,f
  5699  0DF5                     u3752:
  5700  0DF5  082F               	movf	??___flmul+3,w
  5701  0DF6  1103               	clrz
  5702  0DF7  1803               	skipnc
  5703  0DF8  3E01               	addlw	1
  5704  0DF9  1903               	skipnz
  5705  0DFA  2DFC               	goto	u3753
  5706  0DFB  07B5               	addwf	___flmul@grs+3,f
  5707  0DFC                     u3753:
  5708  0DFC                     l2586:
  5709  0DFC  0824               	movf	___flmul@b,w
  5710  0DFD  00AC               	movwf	??___flmul
  5711  0DFE  082C               	movf	??___flmul,w
  5712  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5713  0E00  0829               	movf	___flmul@a+1,w
  5714  0E01  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5715  0E06  0871               	movf	?__Umul8_16+1,w
  5716  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5717  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5718  0E09  00BD               	movwf	___flmul@temp+1
  5719  0E0A  0870               	movf	?__Umul8_16,w
  5720  0E0B  00BC               	movwf	___flmul@temp
  5721  0E0C                     l2588:
  5722  0E0C  083C               	movf	___flmul@temp,w
  5723  0E0D  00AC               	movwf	??___flmul
  5724  0E0E  083D               	movf	___flmul@temp+1,w
  5725  0E0F  00AD               	movwf	??___flmul+1
  5726  0E10  01AE               	clrf	??___flmul+2
  5727  0E11  01AF               	clrf	??___flmul+3
  5728  0E12  082C               	movf	??___flmul,w
  5729  0E13  07B2               	addwf	___flmul@grs,f
  5730  0E14  082D               	movf	??___flmul+1,w
  5731  0E15  1103               	clrz
  5732  0E16  1803               	skipnc
  5733  0E17  3E01               	addlw	1
  5734  0E18  1903               	skipnz
  5735  0E19  2E1B               	goto	u3761
  5736  0E1A  07B3               	addwf	___flmul@grs+1,f
  5737  0E1B                     u3761:
  5738  0E1B  082E               	movf	??___flmul+2,w
  5739  0E1C  1103               	clrz
  5740  0E1D  1803               	skipnc
  5741  0E1E  3E01               	addlw	1
  5742  0E1F  1903               	skipnz
  5743  0E20  2E22               	goto	u3762
  5744  0E21  07B4               	addwf	___flmul@grs+2,f
  5745  0E22                     u3762:
  5746  0E22  082F               	movf	??___flmul+3,w
  5747  0E23  1103               	clrz
  5748  0E24  1803               	skipnc
  5749  0E25  3E01               	addlw	1
  5750  0E26  1903               	skipnz
  5751  0E27  2E29               	goto	u3763
  5752  0E28  07B5               	addwf	___flmul@grs+3,f
  5753  0E29                     u3763:
  5754  0E29                     l2590:
  5755  0E29  3008               	movlw	8
  5756  0E2A  00AC               	movwf	??___flmul
  5757  0E2B                     u3775:
  5758  0E2B  1003               	clrc
  5759  0E2C  0DB2               	rlf	___flmul@grs,f
  5760  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5761  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5762  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5763  0E30  0BAC               	decfsz	??___flmul,f
  5764  0E31  2E2B               	goto	u3775
  5765  0E32  0824               	movf	___flmul@b,w
  5766  0E33  00AC               	movwf	??___flmul
  5767  0E34  082C               	movf	??___flmul,w
  5768  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5769  0E36  0828               	movf	___flmul@a,w
  5770  0E37  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5771  0E3C  0871               	movf	?__Umul8_16+1,w
  5772  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5773  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5774  0E3F  00BD               	movwf	___flmul@temp+1
  5775  0E40  0870               	movf	?__Umul8_16,w
  5776  0E41  00BC               	movwf	___flmul@temp
  5777  0E42                     l2592:
  5778  0E42  083C               	movf	___flmul@temp,w
  5779  0E43  00AC               	movwf	??___flmul
  5780  0E44  083D               	movf	___flmul@temp+1,w
  5781  0E45  00AD               	movwf	??___flmul+1
  5782  0E46  01AE               	clrf	??___flmul+2
  5783  0E47  01AF               	clrf	??___flmul+3
  5784  0E48  082C               	movf	??___flmul,w
  5785  0E49  07B2               	addwf	___flmul@grs,f
  5786  0E4A  082D               	movf	??___flmul+1,w
  5787  0E4B  1103               	clrz
  5788  0E4C  1803               	skipnc
  5789  0E4D  3E01               	addlw	1
  5790  0E4E  1903               	skipnz
  5791  0E4F  2E51               	goto	u3781
  5792  0E50  07B3               	addwf	___flmul@grs+1,f
  5793  0E51                     u3781:
  5794  0E51  082E               	movf	??___flmul+2,w
  5795  0E52  1103               	clrz
  5796  0E53  1803               	skipnc
  5797  0E54  3E01               	addlw	1
  5798  0E55  1903               	skipnz
  5799  0E56  2E58               	goto	u3782
  5800  0E57  07B4               	addwf	___flmul@grs+2,f
  5801  0E58                     u3782:
  5802  0E58  082F               	movf	??___flmul+3,w
  5803  0E59  1103               	clrz
  5804  0E5A  1803               	skipnc
  5805  0E5B  3E01               	addlw	1
  5806  0E5C  1903               	skipnz
  5807  0E5D  2E5F               	goto	u3783
  5808  0E5E  07B5               	addwf	___flmul@grs+3,f
  5809  0E5F                     u3783:
  5810  0E5F                     l2594:
  5811  0E5F  0825               	movf	___flmul@b+1,w
  5812  0E60  00AC               	movwf	??___flmul
  5813  0E61  082C               	movf	??___flmul,w
  5814  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5815  0E63  082A               	movf	___flmul@a+2,w
  5816  0E64  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5817  0E69  0871               	movf	?__Umul8_16+1,w
  5818  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5819  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5820  0E6C  00BD               	movwf	___flmul@temp+1
  5821  0E6D  0870               	movf	?__Umul8_16,w
  5822  0E6E  00BC               	movwf	___flmul@temp
  5823  0E6F  083C               	movf	___flmul@temp,w
  5824  0E70  00AC               	movwf	??___flmul
  5825  0E71  083D               	movf	___flmul@temp+1,w
  5826  0E72  00AD               	movwf	??___flmul+1
  5827  0E73  01AE               	clrf	??___flmul+2
  5828  0E74  01AF               	clrf	??___flmul+3
  5829  0E75  082C               	movf	??___flmul,w
  5830  0E76  07B8               	addwf	___flmul@prod,f
  5831  0E77  082D               	movf	??___flmul+1,w
  5832  0E78  1103               	clrz
  5833  0E79  1803               	skipnc
  5834  0E7A  3E01               	addlw	1
  5835  0E7B  1903               	skipnz
  5836  0E7C  2E7E               	goto	u3791
  5837  0E7D  07B9               	addwf	___flmul@prod+1,f
  5838  0E7E                     u3791:
  5839  0E7E  082E               	movf	??___flmul+2,w
  5840  0E7F  1103               	clrz
  5841  0E80  1803               	skipnc
  5842  0E81  3E01               	addlw	1
  5843  0E82  1903               	skipnz
  5844  0E83  2E85               	goto	u3792
  5845  0E84  07BA               	addwf	___flmul@prod+2,f
  5846  0E85                     u3792:
  5847  0E85  082F               	movf	??___flmul+3,w
  5848  0E86  1103               	clrz
  5849  0E87  1803               	skipnc
  5850  0E88  3E01               	addlw	1
  5851  0E89  1903               	skipnz
  5852  0E8A  2E8C               	goto	u3793
  5853  0E8B  07BB               	addwf	___flmul@prod+3,f
  5854  0E8C                     u3793:
  5855  0E8C                     l2596:
  5856  0E8C  0826               	movf	___flmul@b+2,w
  5857  0E8D  00AC               	movwf	??___flmul
  5858  0E8E  082C               	movf	??___flmul,w
  5859  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5860  0E90  0829               	movf	___flmul@a+1,w
  5861  0E91  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5862  0E96  0871               	movf	?__Umul8_16+1,w
  5863  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5864  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5865  0E99  00BD               	movwf	___flmul@temp+1
  5866  0E9A  0870               	movf	?__Umul8_16,w
  5867  0E9B  00BC               	movwf	___flmul@temp
  5868  0E9C                     l2598:
  5869  0E9C  083C               	movf	___flmul@temp,w
  5870  0E9D  00AC               	movwf	??___flmul
  5871  0E9E  083D               	movf	___flmul@temp+1,w
  5872  0E9F  00AD               	movwf	??___flmul+1
  5873  0EA0  01AE               	clrf	??___flmul+2
  5874  0EA1  01AF               	clrf	??___flmul+3
  5875  0EA2  082C               	movf	??___flmul,w
  5876  0EA3  07B8               	addwf	___flmul@prod,f
  5877  0EA4  082D               	movf	??___flmul+1,w
  5878  0EA5  1103               	clrz
  5879  0EA6  1803               	skipnc
  5880  0EA7  3E01               	addlw	1
  5881  0EA8  1903               	skipnz
  5882  0EA9  2EAB               	goto	u3801
  5883  0EAA  07B9               	addwf	___flmul@prod+1,f
  5884  0EAB                     u3801:
  5885  0EAB  082E               	movf	??___flmul+2,w
  5886  0EAC  1103               	clrz
  5887  0EAD  1803               	skipnc
  5888  0EAE  3E01               	addlw	1
  5889  0EAF  1903               	skipnz
  5890  0EB0  2EB2               	goto	u3802
  5891  0EB1  07BA               	addwf	___flmul@prod+2,f
  5892  0EB2                     u3802:
  5893  0EB2  082F               	movf	??___flmul+3,w
  5894  0EB3  1103               	clrz
  5895  0EB4  1803               	skipnc
  5896  0EB5  3E01               	addlw	1
  5897  0EB6  1903               	skipnz
  5898  0EB7  2EB9               	goto	u3803
  5899  0EB8  07BB               	addwf	___flmul@prod+3,f
  5900  0EB9                     u3803:
  5901  0EB9  0826               	movf	___flmul@b+2,w
  5902  0EBA  00AC               	movwf	??___flmul
  5903  0EBB  082C               	movf	??___flmul,w
  5904  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5905  0EBD  082A               	movf	___flmul@a+2,w
  5906  0EBE  160A  118A  200D  120A  158A  	fcall	__Umul8_16
  5907  0EC3  0871               	movf	?__Umul8_16+1,w
  5908  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5909  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5910  0EC6  00BD               	movwf	___flmul@temp+1
  5911  0EC7  0870               	movf	?__Umul8_16,w
  5912  0EC8  00BC               	movwf	___flmul@temp
  5913  0EC9                     l2600:
  5914  0EC9  083C               	movf	___flmul@temp,w
  5915  0ECA  00AC               	movwf	??___flmul
  5916  0ECB  083D               	movf	___flmul@temp+1,w
  5917  0ECC  00AD               	movwf	??___flmul+1
  5918  0ECD  01AE               	clrf	??___flmul+2
  5919  0ECE  01AF               	clrf	??___flmul+3
  5920  0ECF  3008               	movlw	8
  5921  0ED0                     u3815:
  5922  0ED0  1003               	clrc
  5923  0ED1  0DAC               	rlf	??___flmul,f
  5924  0ED2  0DAD               	rlf	??___flmul+1,f
  5925  0ED3  0DAE               	rlf	??___flmul+2,f
  5926  0ED4  0DAF               	rlf	??___flmul+3,f
  5927  0ED5                     u3810:
  5928  0ED5  3EFF               	addlw	-1
  5929  0ED6  1D03               	skipz
  5930  0ED7  2ED0               	goto	u3815
  5931  0ED8  082C               	movf	??___flmul,w
  5932  0ED9  07B8               	addwf	___flmul@prod,f
  5933  0EDA  082D               	movf	??___flmul+1,w
  5934  0EDB  1103               	clrz
  5935  0EDC  1803               	skipnc
  5936  0EDD  3E01               	addlw	1
  5937  0EDE  1903               	skipnz
  5938  0EDF  2EE1               	goto	u3821
  5939  0EE0  07B9               	addwf	___flmul@prod+1,f
  5940  0EE1                     u3821:
  5941  0EE1  082E               	movf	??___flmul+2,w
  5942  0EE2  1103               	clrz
  5943  0EE3  1803               	skipnc
  5944  0EE4  3E01               	addlw	1
  5945  0EE5  1903               	skipnz
  5946  0EE6  2EE8               	goto	u3822
  5947  0EE7  07BA               	addwf	___flmul@prod+2,f
  5948  0EE8                     u3822:
  5949  0EE8  082F               	movf	??___flmul+3,w
  5950  0EE9  1103               	clrz
  5951  0EEA  1803               	skipnc
  5952  0EEB  3E01               	addlw	1
  5953  0EEC  1903               	skipnz
  5954  0EED  2EEF               	goto	u3823
  5955  0EEE  07BB               	addwf	___flmul@prod+3,f
  5956  0EEF                     u3823:
  5957  0EEF                     l2602:
  5958  0EEF  0832               	movf	___flmul@grs,w
  5959  0EF0  00AC               	movwf	??___flmul
  5960  0EF1  0833               	movf	___flmul@grs+1,w
  5961  0EF2  00AD               	movwf	??___flmul+1
  5962  0EF3  0834               	movf	___flmul@grs+2,w
  5963  0EF4  00AE               	movwf	??___flmul+2
  5964  0EF5  0835               	movf	___flmul@grs+3,w
  5965  0EF6  00AF               	movwf	??___flmul+3
  5966  0EF7  3018               	movlw	24
  5967  0EF8                     u3835:
  5968  0EF8  1003               	clrc
  5969  0EF9  0CAF               	rrf	??___flmul+3,f
  5970  0EFA  0CAE               	rrf	??___flmul+2,f
  5971  0EFB  0CAD               	rrf	??___flmul+1,f
  5972  0EFC  0CAC               	rrf	??___flmul,f
  5973  0EFD                     u3830:
  5974  0EFD  3EFF               	addlw	-1
  5975  0EFE  1D03               	skipz
  5976  0EFF  2EF8               	goto	u3835
  5977  0F00  082C               	movf	??___flmul,w
  5978  0F01  07B8               	addwf	___flmul@prod,f
  5979  0F02  082D               	movf	??___flmul+1,w
  5980  0F03  1103               	clrz
  5981  0F04  1803               	skipnc
  5982  0F05  3E01               	addlw	1
  5983  0F06  1903               	skipnz
  5984  0F07  2F09               	goto	u3841
  5985  0F08  07B9               	addwf	___flmul@prod+1,f
  5986  0F09                     u3841:
  5987  0F09  082E               	movf	??___flmul+2,w
  5988  0F0A  1103               	clrz
  5989  0F0B  1803               	skipnc
  5990  0F0C  3E01               	addlw	1
  5991  0F0D  1903               	skipnz
  5992  0F0E  2F10               	goto	u3842
  5993  0F0F  07BA               	addwf	___flmul@prod+2,f
  5994  0F10                     u3842:
  5995  0F10  082F               	movf	??___flmul+3,w
  5996  0F11  1103               	clrz
  5997  0F12  1803               	skipnc
  5998  0F13  3E01               	addlw	1
  5999  0F14  1903               	skipnz
  6000  0F15  2F17               	goto	u3843
  6001  0F16  07BB               	addwf	___flmul@prod+3,f
  6002  0F17                     u3843:
  6003  0F17                     l2604:
  6004  0F17  3008               	movlw	8
  6005  0F18  00AC               	movwf	??___flmul
  6006  0F19                     u3855:
  6007  0F19  1003               	clrc
  6008  0F1A  0DB2               	rlf	___flmul@grs,f
  6009  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6010  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6011  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6012  0F1E  0BAC               	decfsz	??___flmul,f
  6013  0F1F  2F19               	goto	u3855
  6014  0F20                     l2606:
  6015  0F20  0837               	movf	___flmul@bexp,w
  6016  0F21  0736               	addwf	___flmul@aexp,w
  6017  0F22  00AC               	movwf	??___flmul
  6018  0F23  01AD               	clrf	??___flmul+1
  6019  0F24  0DAD               	rlf	??___flmul+1,f
  6020  0F25  082C               	movf	??___flmul,w
  6021  0F26  3E82               	addlw	130
  6022  0F27  00BC               	movwf	___flmul@temp
  6023  0F28  082D               	movf	??___flmul+1,w
  6024  0F29  1803               	skipnc
  6025  0F2A  3E01               	addlw	1
  6026  0F2B  3EFF               	addlw	255
  6027  0F2C  00BD               	movwf	___flmul@temp+1
  6028  0F2D  2F4B               	goto	l2618
  6029  0F2E                     l2608:
  6030  0F2E  3001               	movlw	1
  6031  0F2F  00AC               	movwf	??___flmul
  6032  0F30                     u3865:
  6033  0F30  1003               	clrc
  6034  0F31  0DB8               	rlf	___flmul@prod,f
  6035  0F32  0DB9               	rlf	___flmul@prod+1,f
  6036  0F33  0DBA               	rlf	___flmul@prod+2,f
  6037  0F34  0DBB               	rlf	___flmul@prod+3,f
  6038  0F35  0BAC               	decfsz	??___flmul,f
  6039  0F36  2F30               	goto	u3865
  6040  0F37                     l2610:
  6041  0F37  1FB5               	btfss	___flmul@grs+3,7
  6042  0F38  2F3A               	goto	u3871
  6043  0F39  2F3B               	goto	u3870
  6044  0F3A                     u3871:
  6045  0F3A  2F3C               	goto	l2614
  6046  0F3B                     u3870:
  6047  0F3B                     l2612:
  6048  0F3B  1438               	bsf	___flmul@prod,0
  6049  0F3C                     l2614:
  6050  0F3C  3001               	movlw	1
  6051  0F3D  00AC               	movwf	??___flmul
  6052  0F3E                     u3885:
  6053  0F3E  1003               	clrc
  6054  0F3F  0DB2               	rlf	___flmul@grs,f
  6055  0F40  0DB3               	rlf	___flmul@grs+1,f
  6056  0F41  0DB4               	rlf	___flmul@grs+2,f
  6057  0F42  0DB5               	rlf	___flmul@grs+3,f
  6058  0F43  0BAC               	decfsz	??___flmul,f
  6059  0F44  2F3E               	goto	u3885
  6060  0F45                     l2616:
  6061  0F45  30FF               	movlw	255
  6062  0F46  07BC               	addwf	___flmul@temp,f
  6063  0F47  1803               	skipnc
  6064  0F48  0ABD               	incf	___flmul@temp+1,f
  6065  0F49  30FF               	movlw	255
  6066  0F4A  07BD               	addwf	___flmul@temp+1,f
  6067  0F4B                     l2618:
  6068  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6069  0F4C  2F4E               	goto	u3891
  6070  0F4D  2F4F               	goto	u3890
  6071  0F4E                     u3891:
  6072  0F4E  2F2E               	goto	l2608
  6073  0F4F                     u3890:
  6074  0F4F                     l2620:
  6075  0F4F  01B6               	clrf	___flmul@aexp
  6076  0F50                     l2622:
  6077  0F50  1FB5               	btfss	___flmul@grs+3,7
  6078  0F51  2F53               	goto	u3901
  6079  0F52  2F54               	goto	u3900
  6080  0F53                     u3901:
  6081  0F53  2F70               	goto	l2630
  6082  0F54                     u3900:
  6083  0F54                     l2624:
  6084  0F54  30FF               	movlw	255
  6085  0F55  0532               	andwf	___flmul@grs,w
  6086  0F56  00AC               	movwf	??___flmul
  6087  0F57  30FF               	movlw	255
  6088  0F58  0533               	andwf	___flmul@grs+1,w
  6089  0F59  00AD               	movwf	??___flmul+1
  6090  0F5A  30FF               	movlw	255
  6091  0F5B  0534               	andwf	___flmul@grs+2,w
  6092  0F5C  00AE               	movwf	??___flmul+2
  6093  0F5D  307F               	movlw	127
  6094  0F5E  0535               	andwf	___flmul@grs+3,w
  6095  0F5F  00AF               	movwf	??___flmul+3
  6096  0F60  082F               	movf	??___flmul+3,w
  6097  0F61  042E               	iorwf	??___flmul+2,w
  6098  0F62  042D               	iorwf	??___flmul+1,w
  6099  0F63  042C               	iorwf	??___flmul,w
  6100  0F64  1903               	skipnz
  6101  0F65  2F67               	goto	u3911
  6102  0F66  2F68               	goto	u3910
  6103  0F67                     u3911:
  6104  0F67  2F6B               	goto	l718
  6105  0F68                     u3910:
  6106  0F68                     l2626:
  6107  0F68  01B6               	clrf	___flmul@aexp
  6108  0F69  0AB6               	incf	___flmul@aexp,f
  6109  0F6A  2F70               	goto	l2630
  6110  0F6B                     l718:
  6111  0F6B  1C38               	btfss	___flmul@prod,0
  6112  0F6C  2F6E               	goto	u3921
  6113  0F6D  2F6F               	goto	u3920
  6114  0F6E                     u3921:
  6115  0F6E  2F70               	goto	l2630
  6116  0F6F                     u3920:
  6117  0F6F  2F68               	goto	l2626
  6118  0F70                     l2630:
  6119  0F70  0836               	movf	___flmul@aexp,w
  6120  0F71  1903               	btfsc	3,2
  6121  0F72  2F74               	goto	u3931
  6122  0F73  2F75               	goto	u3930
  6123  0F74                     u3931:
  6124  0F74  2FA6               	goto	l2640
  6125  0F75                     u3930:
  6126  0F75                     l2632:
  6127  0F75  3001               	movlw	1
  6128  0F76  07B8               	addwf	___flmul@prod,f
  6129  0F77  3000               	movlw	0
  6130  0F78  1803               	skipnc
  6131  0F79  3001               	movlw	1
  6132  0F7A  07B9               	addwf	___flmul@prod+1,f
  6133  0F7B  3000               	movlw	0
  6134  0F7C  1803               	skipnc
  6135  0F7D  3001               	movlw	1
  6136  0F7E  07BA               	addwf	___flmul@prod+2,f
  6137  0F7F  3000               	movlw	0
  6138  0F80  1803               	skipnc
  6139  0F81  3001               	movlw	1
  6140  0F82  07BB               	addwf	___flmul@prod+3,f
  6141  0F83                     l2634:
  6142  0F83  1C3B               	btfss	___flmul@prod+3,0
  6143  0F84  2F86               	goto	u3941
  6144  0F85  2F87               	goto	u3940
  6145  0F86                     u3941:
  6146  0F86  2FA6               	goto	l2640
  6147  0F87                     u3940:
  6148  0F87                     l2636:
  6149  0F87  0838               	movf	___flmul@prod,w
  6150  0F88  00AC               	movwf	??___flmul
  6151  0F89  0839               	movf	___flmul@prod+1,w
  6152  0F8A  00AD               	movwf	??___flmul+1
  6153  0F8B  083A               	movf	___flmul@prod+2,w
  6154  0F8C  00AE               	movwf	??___flmul+2
  6155  0F8D  083B               	movf	___flmul@prod+3,w
  6156  0F8E  00AF               	movwf	??___flmul+3
  6157  0F8F  3001               	movlw	1
  6158  0F90  00B0               	movwf	??___flmul+4
  6159  0F91                     u3955:
  6160  0F91  0D2F               	rlf	??___flmul+3,w
  6161  0F92  0CAF               	rrf	??___flmul+3,f
  6162  0F93  0CAE               	rrf	??___flmul+2,f
  6163  0F94  0CAD               	rrf	??___flmul+1,f
  6164  0F95  0CAC               	rrf	??___flmul,f
  6165  0F96                     u3950:
  6166  0F96  0BB0               	decfsz	??___flmul+4,f
  6167  0F97  2F91               	goto	u3955
  6168  0F98  082F               	movf	??___flmul+3,w
  6169  0F99  00BB               	movwf	___flmul@prod+3
  6170  0F9A  082E               	movf	??___flmul+2,w
  6171  0F9B  00BA               	movwf	___flmul@prod+2
  6172  0F9C  082D               	movf	??___flmul+1,w
  6173  0F9D  00B9               	movwf	___flmul@prod+1
  6174  0F9E  082C               	movf	??___flmul,w
  6175  0F9F  00B8               	movwf	___flmul@prod
  6176  0FA0                     l2638:
  6177  0FA0  3001               	movlw	1
  6178  0FA1  07BC               	addwf	___flmul@temp,f
  6179  0FA2  1803               	skipnc
  6180  0FA3  0ABD               	incf	___flmul@temp+1,f
  6181  0FA4  3000               	movlw	0
  6182  0FA5  07BD               	addwf	___flmul@temp+1,f
  6183  0FA6                     l2640:
  6184  0FA6  083D               	movf	___flmul@temp+1,w
  6185  0FA7  3A80               	xorlw	128
  6186  0FA8  00FF               	movwf	btemp+1
  6187  0FA9  3080               	movlw	128
  6188  0FAA  027F               	subwf	btemp+1,w
  6189  0FAB  1D03               	skipz
  6190  0FAC  2FAF               	goto	u3965
  6191  0FAD  30FF               	movlw	255
  6192  0FAE  023C               	subwf	___flmul@temp,w
  6193  0FAF                     u3965:
  6194  0FAF  1C03               	skipc
  6195  0FB0  2FB2               	goto	u3961
  6196  0FB1  2FB3               	goto	u3960
  6197  0FB2                     u3961:
  6198  0FB2  2FBE               	goto	l2644
  6199  0FB3                     u3960:
  6200  0FB3                     l2642:
  6201  0FB3  307F               	movlw	127
  6202  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6203  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6204  0FB6  00BB               	movwf	___flmul@prod+3
  6205  0FB7  3080               	movlw	128
  6206  0FB8  00BA               	movwf	___flmul@prod+2
  6207  0FB9  3000               	movlw	0
  6208  0FBA  00B9               	movwf	___flmul@prod+1
  6209  0FBB  3000               	movlw	0
  6210  0FBC  00B8               	movwf	___flmul@prod
  6211  0FBD  2FF3               	goto	l724
  6212  0FBE                     l2644:
  6213  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6214  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6215  0FC0  083D               	movf	___flmul@temp+1,w
  6216  0FC1  3A80               	xorlw	128
  6217  0FC2  00FF               	movwf	btemp+1
  6218  0FC3  3080               	movlw	128
  6219  0FC4  027F               	subwf	btemp+1,w
  6220  0FC5  1D03               	skipz
  6221  0FC6  2FC9               	goto	u3975
  6222  0FC7  3001               	movlw	1
  6223  0FC8  023C               	subwf	___flmul@temp,w
  6224  0FC9                     u3975:
  6225  0FC9  1803               	skipnc
  6226  0FCA  2FCC               	goto	u3971
  6227  0FCB  2FCD               	goto	u3970
  6228  0FCC                     u3971:
  6229  0FCC  2FD9               	goto	l2650
  6230  0FCD                     u3970:
  6231  0FCD                     l2646:
  6232  0FCD  3000               	movlw	0
  6233  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6235  0FD0  00BB               	movwf	___flmul@prod+3
  6236  0FD1  3000               	movlw	0
  6237  0FD2  00BA               	movwf	___flmul@prod+2
  6238  0FD3  3000               	movlw	0
  6239  0FD4  00B9               	movwf	___flmul@prod+1
  6240  0FD5  3000               	movlw	0
  6241  0FD6  00B8               	movwf	___flmul@prod
  6242  0FD7                     l2648:
  6243  0FD7  01B1               	clrf	___flmul@sign
  6244  0FD8  2FF3               	goto	l724
  6245  0FD9                     l2650:
  6246  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6247  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6248  0FDB  083C               	movf	___flmul@temp,w
  6249  0FDC  00AC               	movwf	??___flmul
  6250  0FDD  082C               	movf	??___flmul,w
  6251  0FDE  00B7               	movwf	___flmul@bexp
  6252  0FDF  30FF               	movlw	255
  6253  0FE0  05B8               	andwf	___flmul@prod,f
  6254  0FE1  30FF               	movlw	255
  6255  0FE2  05B9               	andwf	___flmul@prod+1,f
  6256  0FE3  307F               	movlw	127
  6257  0FE4  05BA               	andwf	___flmul@prod+2,f
  6258  0FE5  3000               	movlw	0
  6259  0FE6  05BB               	andwf	___flmul@prod+3,f
  6260  0FE7                     l2652:
  6261  0FE7  1C37               	btfss	___flmul@bexp,0
  6262  0FE8  2FEA               	goto	u3981
  6263  0FE9  2FEB               	goto	u3980
  6264  0FEA                     u3981:
  6265  0FEA  2FEC               	goto	l2656
  6266  0FEB                     u3980:
  6267  0FEB                     l2654:
  6268  0FEB  17BA               	bsf	___flmul@prod+2,7
  6269  0FEC                     l2656:
  6270  0FEC  0837               	movf	___flmul@bexp,w
  6271  0FED  00AC               	movwf	??___flmul
  6272  0FEE  1003               	clrc
  6273  0FEF  0C2C               	rrf	??___flmul,w
  6274  0FF0  00AD               	movwf	??___flmul+1
  6275  0FF1  082D               	movf	??___flmul+1,w
  6276  0FF2  00BB               	movwf	___flmul@prod+3
  6277  0FF3                     l724:
  6278  0FF3  0831               	movf	___flmul@sign,w
  6279  0FF4  00AC               	movwf	??___flmul
  6280  0FF5  082C               	movf	??___flmul,w
  6281  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6282  0FF7                     l2658:
  6283  0FF7  083B               	movf	___flmul@prod+3,w
  6284  0FF8  00A7               	movwf	?___flmul+3
  6285  0FF9  083A               	movf	___flmul@prod+2,w
  6286  0FFA  00A6               	movwf	?___flmul+2
  6287  0FFB  0839               	movf	___flmul@prod+1,w
  6288  0FFC  00A5               	movwf	?___flmul+1
  6289  0FFD  0838               	movf	___flmul@prod,w
  6290  0FFE  00A4               	movwf	?___flmul
  6291  0FFF                     l712:
  6292  0FFF  0008               	return
  6293  1000                     __end_of___flmul:
  6294                           
  6295                           	psect	text9
  6296  100D                     __ptext9:	
  6297 ;; *************** function __Umul8_16 *****************
  6298 ;; Defined at:
  6299 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  multiplier      1    wreg     unsigned char 
  6302 ;;  multiplicand    1    0[COMMON] unsigned char 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  multiplier      1    8[COMMON] unsigned char 
  6305 ;;  word_mpld       2    6[COMMON] unsigned int 
  6306 ;;  product         2    4[COMMON] unsigned int 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  2    0[COMMON] unsigned int 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2, status,0
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6316 ;;      Params:         2       0       0       0       0
  6317 ;;      Locals:         5       0       0       0       0
  6318 ;;      Temps:          2       0       0       0       0
  6319 ;;      Totals:         9       0       0       0       0
  6320 ;;Total ram usage:        9 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		___flmul
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329  100D                     __Umul8_16:	
  6330                           ;psect for function __Umul8_16
  6331                           
  6332                           
  6333                           ;incstack = 0
  6334                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6335                           ;__Umul8_16@multiplier stored from wreg
  6336  100D  00F8               	movwf	__Umul8_16@multiplier
  6337  100E                     l2156:
  6338  100E  01F4               	clrf	__Umul8_16@product
  6339  100F  01F5               	clrf	__Umul8_16@product+1
  6340  1010                     l2158:
  6341  1010  0870               	movf	__Umul8_16@multiplicand,w
  6342  1011  00F2               	movwf	??__Umul8_16
  6343  1012  01F3               	clrf	??__Umul8_16+1
  6344  1013  0872               	movf	??__Umul8_16,w
  6345  1014  00F6               	movwf	__Umul8_16@word_mpld
  6346  1015  0873               	movf	??__Umul8_16+1,w
  6347  1016  00F7               	movwf	__Umul8_16@word_mpld+1
  6348  1017                     l2160:
  6349  1017  1C78               	btfss	__Umul8_16@multiplier,0
  6350  1018  281A               	goto	u2801
  6351  1019  281B               	goto	u2800
  6352  101A                     u2801:
  6353  101A  2821               	goto	l731
  6354  101B                     u2800:
  6355  101B                     l2162:
  6356  101B  0876               	movf	__Umul8_16@word_mpld,w
  6357  101C  07F4               	addwf	__Umul8_16@product,f
  6358  101D  1803               	skipnc
  6359  101E  0AF5               	incf	__Umul8_16@product+1,f
  6360  101F  0877               	movf	__Umul8_16@word_mpld+1,w
  6361  1020  07F5               	addwf	__Umul8_16@product+1,f
  6362  1021                     l731:
  6363  1021  3001               	movlw	1
  6364  1022                     u2815:
  6365  1022  1003               	clrc
  6366  1023  0DF6               	rlf	__Umul8_16@word_mpld,f
  6367  1024  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6368  1025  3EFF               	addlw	-1
  6369  1026  1D03               	skipz
  6370  1027  2822               	goto	u2815
  6371  1028  1003               	clrc
  6372  1029  0CF8               	rrf	__Umul8_16@multiplier,f
  6373  102A                     l2164:
  6374  102A  0878               	movf	__Umul8_16@multiplier,w
  6375  102B  1D03               	btfss	3,2
  6376  102C  282E               	goto	u2821
  6377  102D  282F               	goto	u2820
  6378  102E                     u2821:
  6379  102E  2817               	goto	l2160
  6380  102F                     u2820:
  6381  102F                     l2166:
  6382  102F  0875               	movf	__Umul8_16@product+1,w
  6383  1030  00F1               	movwf	?__Umul8_16+1
  6384  1031  0874               	movf	__Umul8_16@product,w
  6385  1032  00F0               	movwf	?__Umul8_16
  6386  1033                     l733:
  6387  1033  0008               	return
  6388  1034                     __end_of__Umul8_16:
  6389                           
  6390                           	psect	text10
  6391  12B0                     __ptext10:	
  6392 ;; *************** function __tdiv_to_l_ *****************
  6393 ;; Defined at:
  6394 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  f1              4    0[COMMON] float 
  6397 ;;  f2              4    4[COMMON] float 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  quot            4    0[BANK0 ] unsigned long 
  6400 ;;  exp1            1    5[BANK0 ] unsigned char 
  6401 ;;  cntr            1    4[BANK0 ] unsigned char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  4    0[COMMON] unsigned long 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6411 ;;      Params:         8       0       0       0       0
  6412 ;;      Locals:         0       6       0       0       0
  6413 ;;      Temps:          4       0       0       0       0
  6414 ;;      Totals:        12       6       0       0       0
  6415 ;;Total ram usage:       18 bytes
  6416 ;; Hardware stack levels used: 1
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_sprintf
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424  12B0                     __tdiv_to_l_:	
  6425                           ;psect for function __tdiv_to_l_
  6426                           
  6427  12B0                     l2780:	
  6428                           ;incstack = 0
  6429                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6430                           
  6431  12B0  0870               	movf	__tdiv_to_l_@f1,w
  6432  12B1  00F8               	movwf	??__tdiv_to_l_
  6433  12B2  0871               	movf	__tdiv_to_l_@f1+1,w
  6434  12B3  00F9               	movwf	??__tdiv_to_l_+1
  6435  12B4  0872               	movf	__tdiv_to_l_@f1+2,w
  6436  12B5  00FA               	movwf	??__tdiv_to_l_+2
  6437  12B6  1003               	clrc
  6438  12B7  0D79               	rlf	??__tdiv_to_l_+1,w
  6439  12B8  0D7A               	rlf	??__tdiv_to_l_+2,w
  6440  12B9  00FB               	movwf	??__tdiv_to_l_+3
  6441  12BA  087B               	movf	??__tdiv_to_l_+3,w
  6442  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  6443  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  6444  12BD  00A5               	movwf	__tdiv_to_l_@exp1
  6445  12BE  0825               	movf	__tdiv_to_l_@exp1,w
  6446  12BF  1D03               	btfss	3,2
  6447  12C0  2AC2               	goto	u4301
  6448  12C1  2AC3               	goto	u4300
  6449  12C2                     u4301:
  6450  12C2  2ACC               	goto	l2786
  6451  12C3                     u4300:
  6452  12C3                     l2782:
  6453  12C3  3000               	movlw	0
  6454  12C4  00F3               	movwf	?__tdiv_to_l_+3
  6455  12C5  3000               	movlw	0
  6456  12C6  00F2               	movwf	?__tdiv_to_l_+2
  6457  12C7  3000               	movlw	0
  6458  12C8  00F1               	movwf	?__tdiv_to_l_+1
  6459  12C9  3000               	movlw	0
  6460  12CA  00F0               	movwf	?__tdiv_to_l_
  6461  12CB  2B6C               	goto	l506
  6462  12CC                     l2786:
  6463  12CC  0874               	movf	__tdiv_to_l_@f2,w
  6464  12CD  00F8               	movwf	??__tdiv_to_l_
  6465  12CE  0875               	movf	__tdiv_to_l_@f2+1,w
  6466  12CF  00F9               	movwf	??__tdiv_to_l_+1
  6467  12D0  0876               	movf	__tdiv_to_l_@f2+2,w
  6468  12D1  00FA               	movwf	??__tdiv_to_l_+2
  6469  12D2  1003               	clrc
  6470  12D3  0D79               	rlf	??__tdiv_to_l_+1,w
  6471  12D4  0D7A               	rlf	??__tdiv_to_l_+2,w
  6472  12D5  00FB               	movwf	??__tdiv_to_l_+3
  6473  12D6  087B               	movf	??__tdiv_to_l_+3,w
  6474  12D7  00A4               	movwf	__tdiv_to_l_@cntr
  6475  12D8  0824               	movf	__tdiv_to_l_@cntr,w
  6476  12D9  1D03               	btfss	3,2
  6477  12DA  2ADC               	goto	u4311
  6478  12DB  2ADD               	goto	u4310
  6479  12DC                     u4311:
  6480  12DC  2ADE               	goto	l507
  6481  12DD                     u4310:
  6482  12DD  2AC3               	goto	l2782
  6483  12DE                     l507:
  6484  12DE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6485  12DF                     l2792:
  6486  12DF  30FF               	movlw	255
  6487  12E0  05F0               	andwf	__tdiv_to_l_@f1,f
  6488  12E1  30FF               	movlw	255
  6489  12E2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6490  12E3  3000               	movlw	0
  6491  12E4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6492  12E5                     l2794:
  6493  12E5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6494  12E6  30FF               	movlw	255
  6495  12E7  05F4               	andwf	__tdiv_to_l_@f2,f
  6496  12E8  30FF               	movlw	255
  6497  12E9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6498  12EA  3000               	movlw	0
  6499  12EB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6500  12EC  3000               	movlw	0
  6501  12ED  00A3               	movwf	__tdiv_to_l_@quot+3
  6502  12EE  3000               	movlw	0
  6503  12EF  00A2               	movwf	__tdiv_to_l_@quot+2
  6504  12F0  3000               	movlw	0
  6505  12F1  00A1               	movwf	__tdiv_to_l_@quot+1
  6506  12F2  3000               	movlw	0
  6507  12F3  00A0               	movwf	__tdiv_to_l_@quot
  6508  12F4                     l2796:
  6509  12F4  307F               	movlw	127
  6510  12F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  6511  12F6                     l2798:
  6512  12F6  3098               	movlw	152
  6513  12F7  0724               	addwf	__tdiv_to_l_@cntr,w
  6514  12F8  00F8               	movwf	??__tdiv_to_l_
  6515  12F9  0878               	movf	??__tdiv_to_l_,w
  6516  12FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  6517  12FB  3018               	movlw	24
  6518  12FC  00F8               	movwf	??__tdiv_to_l_
  6519  12FD  0878               	movf	??__tdiv_to_l_,w
  6520  12FE  00A4               	movwf	__tdiv_to_l_@cntr
  6521  12FF                     l2800:
  6522  12FF  3001               	movlw	1
  6523  1300  00F8               	movwf	??__tdiv_to_l_
  6524  1301                     u4325:
  6525  1301  1003               	clrc
  6526  1302  0DA0               	rlf	__tdiv_to_l_@quot,f
  6527  1303  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6528  1304  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6529  1305  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6530  1306  0BF8               	decfsz	??__tdiv_to_l_,f
  6531  1307  2B01               	goto	u4325
  6532  1308                     l2802:
  6533  1308  0876               	movf	__tdiv_to_l_@f2+2,w
  6534  1309  0272               	subwf	__tdiv_to_l_@f1+2,w
  6535  130A  1D03               	skipz
  6536  130B  2B12               	goto	u4335
  6537  130C  0875               	movf	__tdiv_to_l_@f2+1,w
  6538  130D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6539  130E  1D03               	skipz
  6540  130F  2B12               	goto	u4335
  6541  1310  0874               	movf	__tdiv_to_l_@f2,w
  6542  1311  0270               	subwf	__tdiv_to_l_@f1,w
  6543  1312                     u4335:
  6544  1312  1C03               	skipc
  6545  1313  2B15               	goto	u4331
  6546  1314  2B16               	goto	u4330
  6547  1315                     u4331:
  6548  1315  2B21               	goto	l2808
  6549  1316                     u4330:
  6550  1316                     l2804:
  6551  1316  0874               	movf	__tdiv_to_l_@f2,w
  6552  1317  02F0               	subwf	__tdiv_to_l_@f1,f
  6553  1318  0875               	movf	__tdiv_to_l_@f2+1,w
  6554  1319  1C03               	skipc
  6555  131A  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6556  131B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6557  131C  0876               	movf	__tdiv_to_l_@f2+2,w
  6558  131D  1C03               	skipc
  6559  131E  0A76               	incf	__tdiv_to_l_@f2+2,w
  6560  131F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6561  1320                     l2806:
  6562  1320  1420               	bsf	__tdiv_to_l_@quot,0
  6563  1321                     l2808:
  6564  1321  3001               	movlw	1
  6565  1322                     u4345:
  6566  1322  1003               	clrc
  6567  1323  0DF0               	rlf	__tdiv_to_l_@f1,f
  6568  1324  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6569  1325  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6570  1326  3EFF               	addlw	-1
  6571  1327  1D03               	skipz
  6572  1328  2B22               	goto	u4345
  6573  1329                     l2810:
  6574  1329  3001               	movlw	1
  6575  132A  02A4               	subwf	__tdiv_to_l_@cntr,f
  6576  132B  1D03               	btfss	3,2
  6577  132C  2B2E               	goto	u4351
  6578  132D  2B2F               	goto	u4350
  6579  132E                     u4351:
  6580  132E  2AFF               	goto	l2800
  6581  132F                     u4350:
  6582  132F                     l510:
  6583  132F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6584  1330  2B32               	goto	u4361
  6585  1331  2B33               	goto	u4360
  6586  1332                     u4361:
  6587  1332  2B4D               	goto	l2820
  6588  1333                     u4360:
  6589  1333                     l2812:
  6590  1333  0825               	movf	__tdiv_to_l_@exp1,w
  6591  1334  3A80               	xorlw	128
  6592  1335  3E97               	addlw	151
  6593  1336  1803               	skipnc
  6594  1337  2B39               	goto	u4371
  6595  1338  2B3A               	goto	u4370
  6596  1339                     u4371:
  6597  1339  2B3B               	goto	l2818
  6598  133A                     u4370:
  6599  133A  2AC3               	goto	l2782
  6600  133B                     l2818:
  6601  133B  3001               	movlw	1
  6602  133C                     u4385:
  6603  133C  1003               	clrc
  6604  133D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6605  133E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6606  133F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6607  1340  0CA0               	rrf	__tdiv_to_l_@quot,f
  6608  1341  3EFF               	addlw	-1
  6609  1342  1D03               	skipz
  6610  1343  2B3C               	goto	u4385
  6611  1344  3001               	movlw	1
  6612  1345  00F8               	movwf	??__tdiv_to_l_
  6613  1346  0878               	movf	??__tdiv_to_l_,w
  6614  1347  07A5               	addwf	__tdiv_to_l_@exp1,f
  6615  1348  1D03               	btfss	3,2
  6616  1349  2B4B               	goto	u4391
  6617  134A  2B4C               	goto	u4390
  6618  134B                     u4391:
  6619  134B  2B3B               	goto	l2818
  6620  134C                     u4390:
  6621  134C  2B64               	goto	l2828
  6622  134D                     l2820:
  6623  134D  3018               	movlw	24
  6624  134E  0225               	subwf	__tdiv_to_l_@exp1,w
  6625  134F  1C03               	skipc
  6626  1350  2B52               	goto	u4401
  6627  1351  2B53               	goto	u4400
  6628  1352                     u4401:
  6629  1352  2B5F               	goto	l517
  6630  1353                     u4400:
  6631  1353  2AC3               	goto	l2782
  6632  1354                     l2826:
  6633  1354  3001               	movlw	1
  6634  1355  00F8               	movwf	??__tdiv_to_l_
  6635  1356                     u4415:
  6636  1356  1003               	clrc
  6637  1357  0DA0               	rlf	__tdiv_to_l_@quot,f
  6638  1358  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6639  1359  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6640  135A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6641  135B  0BF8               	decfsz	??__tdiv_to_l_,f
  6642  135C  2B56               	goto	u4415
  6643  135D  3001               	movlw	1
  6644  135E  02A5               	subwf	__tdiv_to_l_@exp1,f
  6645  135F                     l517:
  6646  135F  0825               	movf	__tdiv_to_l_@exp1,w
  6647  1360  1D03               	btfss	3,2
  6648  1361  2B63               	goto	u4421
  6649  1362  2B64               	goto	u4420
  6650  1363                     u4421:
  6651  1363  2B54               	goto	l2826
  6652  1364                     u4420:
  6653  1364                     l2828:
  6654  1364  0823               	movf	__tdiv_to_l_@quot+3,w
  6655  1365  00F3               	movwf	?__tdiv_to_l_+3
  6656  1366  0822               	movf	__tdiv_to_l_@quot+2,w
  6657  1367  00F2               	movwf	?__tdiv_to_l_+2
  6658  1368  0821               	movf	__tdiv_to_l_@quot+1,w
  6659  1369  00F1               	movwf	?__tdiv_to_l_+1
  6660  136A  0820               	movf	__tdiv_to_l_@quot,w
  6661  136B  00F0               	movwf	?__tdiv_to_l_
  6662  136C                     l506:
  6663  136C  0008               	return
  6664  136D                     __end_of__tdiv_to_l_:
  6665                           
  6666                           	psect	text11
  6667  0882                     __ptext11:	
  6668 ;; *************** function __div_to_l_ *****************
  6669 ;; Defined at:
  6670 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  f1              4    0[COMMON] unsigned long 
  6673 ;;  f2              4    4[COMMON] unsigned long 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  quot            4    0[BANK0 ] unsigned long 
  6676 ;;  exp1            1    5[BANK0 ] unsigned char 
  6677 ;;  cntr            1    4[BANK0 ] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  4    0[COMMON] unsigned long 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6687 ;;      Params:         8       0       0       0       0
  6688 ;;      Locals:         0       6       0       0       0
  6689 ;;      Temps:          1       0       0       0       0
  6690 ;;      Totals:         9       6       0       0       0
  6691 ;;Total ram usage:       15 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_sprintf
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700  0882                     __div_to_l_:	
  6701                           ;psect for function __div_to_l_
  6702                           
  6703  0882                     l2832:	
  6704                           ;incstack = 0
  6705                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6706                           
  6707  0882  1003               	clrc
  6708  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6709  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6710  0885  00F8               	movwf	??__div_to_l_
  6711  0886  0878               	movf	??__div_to_l_,w
  6712  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6713  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6714  0889  00A5               	movwf	__div_to_l_@exp1
  6715  088A  0825               	movf	__div_to_l_@exp1,w
  6716  088B  1D03               	btfss	3,2
  6717  088C  288E               	goto	u4431
  6718  088D  288F               	goto	u4430
  6719  088E                     u4431:
  6720  088E  2898               	goto	l2838
  6721  088F                     u4430:
  6722  088F                     l2834:
  6723  088F  3000               	movlw	0
  6724  0890  00F3               	movwf	?__div_to_l_+3
  6725  0891  3000               	movlw	0
  6726  0892  00F2               	movwf	?__div_to_l_+2
  6727  0893  3000               	movlw	0
  6728  0894  00F1               	movwf	?__div_to_l_+1
  6729  0895  3000               	movlw	0
  6730  0896  00F0               	movwf	?__div_to_l_
  6731  0897  293F               	goto	l459
  6732  0898                     l2838:
  6733  0898  1003               	clrc
  6734  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6735  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6736  089B  00F8               	movwf	??__div_to_l_
  6737  089C  0878               	movf	??__div_to_l_,w
  6738  089D  00A4               	movwf	__div_to_l_@cntr
  6739  089E  0824               	movf	__div_to_l_@cntr,w
  6740  089F  1D03               	btfss	3,2
  6741  08A0  28A2               	goto	u4441
  6742  08A1  28A3               	goto	u4440
  6743  08A2                     u4441:
  6744  08A2  28A4               	goto	l460
  6745  08A3                     u4440:
  6746  08A3  288F               	goto	l2834
  6747  08A4                     l460:
  6748  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6749  08A5                     l2844:
  6750  08A5  30FF               	movlw	255
  6751  08A6  05F0               	andwf	__div_to_l_@f1,f
  6752  08A7  30FF               	movlw	255
  6753  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6754  08A9  30FF               	movlw	255
  6755  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6756  08AB  3000               	movlw	0
  6757  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6758  08AD                     l2846:
  6759  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6760  08AE  30FF               	movlw	255
  6761  08AF  05F4               	andwf	__div_to_l_@f2,f
  6762  08B0  30FF               	movlw	255
  6763  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6764  08B2  30FF               	movlw	255
  6765  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6766  08B4  3000               	movlw	0
  6767  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6768  08B6  3000               	movlw	0
  6769  08B7  00A3               	movwf	__div_to_l_@quot+3
  6770  08B8  3000               	movlw	0
  6771  08B9  00A2               	movwf	__div_to_l_@quot+2
  6772  08BA  3000               	movlw	0
  6773  08BB  00A1               	movwf	__div_to_l_@quot+1
  6774  08BC  3000               	movlw	0
  6775  08BD  00A0               	movwf	__div_to_l_@quot
  6776  08BE                     l2848:
  6777  08BE  307F               	movlw	127
  6778  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6779  08C0                     l2850:
  6780  08C0  30A0               	movlw	160
  6781  08C1  0724               	addwf	__div_to_l_@cntr,w
  6782  08C2  00F8               	movwf	??__div_to_l_
  6783  08C3  0878               	movf	??__div_to_l_,w
  6784  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6785  08C5  3020               	movlw	32
  6786  08C6  00F8               	movwf	??__div_to_l_
  6787  08C7  0878               	movf	??__div_to_l_,w
  6788  08C8  00A4               	movwf	__div_to_l_@cntr
  6789  08C9                     l2852:
  6790  08C9  3001               	movlw	1
  6791  08CA  00F8               	movwf	??__div_to_l_
  6792  08CB                     u4455:
  6793  08CB  1003               	clrc
  6794  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6795  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6796  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6797  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6798  08D0  0BF8               	decfsz	??__div_to_l_,f
  6799  08D1  28CB               	goto	u4455
  6800  08D2                     l2854:
  6801  08D2  0877               	movf	__div_to_l_@f2+3,w
  6802  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6803  08D4  1D03               	skipz
  6804  08D5  28E0               	goto	u4465
  6805  08D6  0876               	movf	__div_to_l_@f2+2,w
  6806  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6807  08D8  1D03               	skipz
  6808  08D9  28E0               	goto	u4465
  6809  08DA  0875               	movf	__div_to_l_@f2+1,w
  6810  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6811  08DC  1D03               	skipz
  6812  08DD  28E0               	goto	u4465
  6813  08DE  0874               	movf	__div_to_l_@f2,w
  6814  08DF  0270               	subwf	__div_to_l_@f1,w
  6815  08E0                     u4465:
  6816  08E0  1C03               	skipc
  6817  08E1  28E3               	goto	u4461
  6818  08E2  28E4               	goto	u4460
  6819  08E3                     u4461:
  6820  08E3  28F3               	goto	l2860
  6821  08E4                     u4460:
  6822  08E4                     l2856:
  6823  08E4  0874               	movf	__div_to_l_@f2,w
  6824  08E5  02F0               	subwf	__div_to_l_@f1,f
  6825  08E6  0875               	movf	__div_to_l_@f2+1,w
  6826  08E7  1C03               	skipc
  6827  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6828  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6829  08EA  0876               	movf	__div_to_l_@f2+2,w
  6830  08EB  1C03               	skipc
  6831  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6832  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6833  08EE  0877               	movf	__div_to_l_@f2+3,w
  6834  08EF  1C03               	skipc
  6835  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6836  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6837  08F2                     l2858:
  6838  08F2  1420               	bsf	__div_to_l_@quot,0
  6839  08F3                     l2860:
  6840  08F3  3001               	movlw	1
  6841  08F4  00F8               	movwf	??__div_to_l_
  6842  08F5                     u4475:
  6843  08F5  1003               	clrc
  6844  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6845  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6846  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6847  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6848  08FA  0BF8               	decfsz	??__div_to_l_,f
  6849  08FB  28F5               	goto	u4475
  6850  08FC                     l2862:
  6851  08FC  3001               	movlw	1
  6852  08FD  02A4               	subwf	__div_to_l_@cntr,f
  6853  08FE  1D03               	btfss	3,2
  6854  08FF  2901               	goto	u4481
  6855  0900  2902               	goto	u4480
  6856  0901                     u4481:
  6857  0901  28C9               	goto	l2852
  6858  0902                     u4480:
  6859  0902                     l463:
  6860  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6861  0903  2905               	goto	u4491
  6862  0904  2906               	goto	u4490
  6863  0905                     u4491:
  6864  0905  2920               	goto	l2872
  6865  0906                     u4490:
  6866  0906                     l2864:
  6867  0906  0825               	movf	__div_to_l_@exp1,w
  6868  0907  3A80               	xorlw	128
  6869  0908  3E9F               	addlw	159
  6870  0909  1803               	skipnc
  6871  090A  290C               	goto	u4501
  6872  090B  290D               	goto	u4500
  6873  090C                     u4501:
  6874  090C  290E               	goto	l2870
  6875  090D                     u4500:
  6876  090D  288F               	goto	l2834
  6877  090E                     l2870:
  6878  090E  3001               	movlw	1
  6879  090F                     u4515:
  6880  090F  1003               	clrc
  6881  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  6882  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  6883  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  6884  0913  0CA0               	rrf	__div_to_l_@quot,f
  6885  0914  3EFF               	addlw	-1
  6886  0915  1D03               	skipz
  6887  0916  290F               	goto	u4515
  6888  0917  3001               	movlw	1
  6889  0918  00F8               	movwf	??__div_to_l_
  6890  0919  0878               	movf	??__div_to_l_,w
  6891  091A  07A5               	addwf	__div_to_l_@exp1,f
  6892  091B  1D03               	btfss	3,2
  6893  091C  291E               	goto	u4521
  6894  091D  291F               	goto	u4520
  6895  091E                     u4521:
  6896  091E  290E               	goto	l2870
  6897  091F                     u4520:
  6898  091F  2937               	goto	l2880
  6899  0920                     l2872:
  6900  0920  3020               	movlw	32
  6901  0921  0225               	subwf	__div_to_l_@exp1,w
  6902  0922  1C03               	skipc
  6903  0923  2925               	goto	u4531
  6904  0924  2926               	goto	u4530
  6905  0925                     u4531:
  6906  0925  2932               	goto	l470
  6907  0926                     u4530:
  6908  0926  288F               	goto	l2834
  6909  0927                     l2878:
  6910  0927  3001               	movlw	1
  6911  0928  00F8               	movwf	??__div_to_l_
  6912  0929                     u4545:
  6913  0929  1003               	clrc
  6914  092A  0DA0               	rlf	__div_to_l_@quot,f
  6915  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6916  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6917  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6918  092E  0BF8               	decfsz	??__div_to_l_,f
  6919  092F  2929               	goto	u4545
  6920  0930  3001               	movlw	1
  6921  0931  02A5               	subwf	__div_to_l_@exp1,f
  6922  0932                     l470:
  6923  0932  0825               	movf	__div_to_l_@exp1,w
  6924  0933  1D03               	btfss	3,2
  6925  0934  2936               	goto	u4551
  6926  0935  2937               	goto	u4550
  6927  0936                     u4551:
  6928  0936  2927               	goto	l2878
  6929  0937                     u4550:
  6930  0937                     l2880:
  6931  0937  0823               	movf	__div_to_l_@quot+3,w
  6932  0938  00F3               	movwf	?__div_to_l_+3
  6933  0939  0822               	movf	__div_to_l_@quot+2,w
  6934  093A  00F2               	movwf	?__div_to_l_+2
  6935  093B  0821               	movf	__div_to_l_@quot+1,w
  6936  093C  00F1               	movwf	?__div_to_l_+1
  6937  093D  0820               	movf	__div_to_l_@quot,w
  6938  093E  00F0               	movwf	?__div_to_l_
  6939  093F                     l459:
  6940  093F  0008               	return
  6941  0940                     __end_of__div_to_l_:
  6942                           
  6943                           	psect	text12
  6944  113C                     __ptext12:	
  6945 ;; *************** function ___xxtofl *****************
  6946 ;; Defined at:
  6947 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  sign            1    wreg     unsigned char 
  6950 ;;  val             4    0[COMMON] long 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  sign            1    8[COMMON] unsigned char 
  6953 ;;  arg             4   10[COMMON] unsigned long 
  6954 ;;  exp             1    9[COMMON] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  4    0[COMMON] unsigned char 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6964 ;;      Params:         4       0       0       0       0
  6965 ;;      Locals:         6       0       0       0       0
  6966 ;;      Temps:          4       0       0       0       0
  6967 ;;      Totals:        14       0       0       0       0
  6968 ;;Total ram usage:       14 bytes
  6969 ;; Hardware stack levels used: 1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_main
  6974 ;;		_sprintf
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978  113C                     ___xxtofl:	
  6979                           ;psect for function ___xxtofl
  6980                           
  6981                           
  6982                           ;incstack = 0
  6983                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6984                           ;___xxtofl@sign stored from wreg
  6985  113C  00F8               	movwf	___xxtofl@sign
  6986  113D                     l3024:
  6987  113D  0878               	movf	___xxtofl@sign,w
  6988  113E  1903               	btfsc	3,2
  6989  113F  2941               	goto	u4941
  6990  1140  2942               	goto	u4940
  6991  1141                     u4941:
  6992  1141  2956               	goto	l3030
  6993  1142                     u4940:
  6994  1142                     l3026:
  6995  1142  1FF3               	btfss	___xxtofl@val+3,7
  6996  1143  2945               	goto	u4951
  6997  1144  2946               	goto	u4950
  6998  1145                     u4951:
  6999  1145  2956               	goto	l3030
  7000  1146                     u4950:
  7001  1146                     l3028:
  7002  1146  0970               	comf	___xxtofl@val,w
  7003  1147  00FA               	movwf	___xxtofl@arg
  7004  1148  0971               	comf	___xxtofl@val+1,w
  7005  1149  00FB               	movwf	___xxtofl@arg+1
  7006  114A  0972               	comf	___xxtofl@val+2,w
  7007  114B  00FC               	movwf	___xxtofl@arg+2
  7008  114C  0973               	comf	___xxtofl@val+3,w
  7009  114D  00FD               	movwf	___xxtofl@arg+3
  7010  114E  0AFA               	incf	___xxtofl@arg,f
  7011  114F  1903               	skipnz
  7012  1150  0AFB               	incf	___xxtofl@arg+1,f
  7013  1151  1903               	skipnz
  7014  1152  0AFC               	incf	___xxtofl@arg+2,f
  7015  1153  1903               	skipnz
  7016  1154  0AFD               	incf	___xxtofl@arg+3,f
  7017  1155  295E               	goto	l756
  7018  1156                     l3030:
  7019  1156  0873               	movf	___xxtofl@val+3,w
  7020  1157  00FD               	movwf	___xxtofl@arg+3
  7021  1158  0872               	movf	___xxtofl@val+2,w
  7022  1159  00FC               	movwf	___xxtofl@arg+2
  7023  115A  0871               	movf	___xxtofl@val+1,w
  7024  115B  00FB               	movwf	___xxtofl@arg+1
  7025  115C  0870               	movf	___xxtofl@val,w
  7026  115D  00FA               	movwf	___xxtofl@arg
  7027  115E                     l756:
  7028  115E  0873               	movf	___xxtofl@val+3,w
  7029  115F  0472               	iorwf	___xxtofl@val+2,w
  7030  1160  0471               	iorwf	___xxtofl@val+1,w
  7031  1161  0470               	iorwf	___xxtofl@val,w
  7032  1162  1D03               	skipz
  7033  1163  2965               	goto	u4961
  7034  1164  2966               	goto	u4960
  7035  1165                     u4961:
  7036  1165  296F               	goto	l3036
  7037  1166                     u4960:
  7038  1166                     l3032:
  7039  1166  3000               	movlw	0
  7040  1167  00F3               	movwf	?___xxtofl+3
  7041  1168  3000               	movlw	0
  7042  1169  00F2               	movwf	?___xxtofl+2
  7043  116A  3000               	movlw	0
  7044  116B  00F1               	movwf	?___xxtofl+1
  7045  116C  3000               	movlw	0
  7046  116D  00F0               	movwf	?___xxtofl
  7047  116E  29F5               	goto	l758
  7048  116F                     l3036:
  7049  116F  3096               	movlw	150
  7050  1170  00F4               	movwf	??___xxtofl
  7051  1171  0874               	movf	??___xxtofl,w
  7052  1172  00F9               	movwf	___xxtofl@exp
  7053  1173  2981               	goto	l3040
  7054  1174                     l3038:
  7055  1174  3001               	movlw	1
  7056  1175  00F4               	movwf	??___xxtofl
  7057  1176  0874               	movf	??___xxtofl,w
  7058  1177  07F9               	addwf	___xxtofl@exp,f
  7059  1178  3001               	movlw	1
  7060  1179                     u4975:
  7061  1179  1003               	clrc
  7062  117A  0CFD               	rrf	___xxtofl@arg+3,f
  7063  117B  0CFC               	rrf	___xxtofl@arg+2,f
  7064  117C  0CFB               	rrf	___xxtofl@arg+1,f
  7065  117D  0CFA               	rrf	___xxtofl@arg,f
  7066  117E  3EFF               	addlw	-1
  7067  117F  1D03               	skipz
  7068  1180  2979               	goto	u4975
  7069  1181                     l3040:
  7070  1181  30FE               	movlw	254
  7071  1182  057D               	andwf	___xxtofl@arg+3,w
  7072  1183  1D03               	btfss	3,2
  7073  1184  2986               	goto	u4981
  7074  1185  2987               	goto	u4980
  7075  1186                     u4981:
  7076  1186  2974               	goto	l3038
  7077  1187                     u4980:
  7078  1187  29A3               	goto	l762
  7079  1188                     l3042:
  7080  1188  3001               	movlw	1
  7081  1189  00F4               	movwf	??___xxtofl
  7082  118A  0874               	movf	??___xxtofl,w
  7083  118B  07F9               	addwf	___xxtofl@exp,f
  7084  118C                     l3044:
  7085  118C  3001               	movlw	1
  7086  118D  07FA               	addwf	___xxtofl@arg,f
  7087  118E  3000               	movlw	0
  7088  118F  1803               	skipnc
  7089  1190  3001               	movlw	1
  7090  1191  07FB               	addwf	___xxtofl@arg+1,f
  7091  1192  3000               	movlw	0
  7092  1193  1803               	skipnc
  7093  1194  3001               	movlw	1
  7094  1195  07FC               	addwf	___xxtofl@arg+2,f
  7095  1196  3000               	movlw	0
  7096  1197  1803               	skipnc
  7097  1198  3001               	movlw	1
  7098  1199  07FD               	addwf	___xxtofl@arg+3,f
  7099  119A                     l3046:
  7100  119A  3001               	movlw	1
  7101  119B                     u4995:
  7102  119B  1003               	clrc
  7103  119C  0CFD               	rrf	___xxtofl@arg+3,f
  7104  119D  0CFC               	rrf	___xxtofl@arg+2,f
  7105  119E  0CFB               	rrf	___xxtofl@arg+1,f
  7106  119F  0CFA               	rrf	___xxtofl@arg,f
  7107  11A0  3EFF               	addlw	-1
  7108  11A1  1D03               	skipz
  7109  11A2  299B               	goto	u4995
  7110  11A3                     l762:
  7111  11A3  30FF               	movlw	255
  7112  11A4  057D               	andwf	___xxtofl@arg+3,w
  7113  11A5  1D03               	btfss	3,2
  7114  11A6  29A8               	goto	u5001
  7115  11A7  29A9               	goto	u5000
  7116  11A8                     u5001:
  7117  11A8  2988               	goto	l3042
  7118  11A9                     u5000:
  7119  11A9  29B5               	goto	l3050
  7120  11AA                     l3048:
  7121  11AA  3001               	movlw	1
  7122  11AB  02F9               	subwf	___xxtofl@exp,f
  7123  11AC  3001               	movlw	1
  7124  11AD  00F4               	movwf	??___xxtofl
  7125  11AE                     u5015:
  7126  11AE  1003               	clrc
  7127  11AF  0DFA               	rlf	___xxtofl@arg,f
  7128  11B0  0DFB               	rlf	___xxtofl@arg+1,f
  7129  11B1  0DFC               	rlf	___xxtofl@arg+2,f
  7130  11B2  0DFD               	rlf	___xxtofl@arg+3,f
  7131  11B3  0BF4               	decfsz	??___xxtofl,f
  7132  11B4  29AE               	goto	u5015
  7133  11B5                     l3050:
  7134  11B5  1BFC               	btfsc	___xxtofl@arg+2,7
  7135  11B6  29B8               	goto	u5021
  7136  11B7  29B9               	goto	u5020
  7137  11B8                     u5021:
  7138  11B8  29BF               	goto	l769
  7139  11B9                     u5020:
  7140  11B9                     l3052:
  7141  11B9  3002               	movlw	2
  7142  11BA  0279               	subwf	___xxtofl@exp,w
  7143  11BB  1803               	skipnc
  7144  11BC  29BE               	goto	u5031
  7145  11BD  29BF               	goto	u5030
  7146  11BE                     u5031:
  7147  11BE  29AA               	goto	l3048
  7148  11BF                     u5030:
  7149  11BF                     l769:
  7150  11BF  1879               	btfsc	___xxtofl@exp,0
  7151  11C0  29C2               	goto	u5041
  7152  11C1  29C3               	goto	u5040
  7153  11C2                     u5041:
  7154  11C2  29CB               	goto	l770
  7155  11C3                     u5040:
  7156  11C3                     l3054:
  7157  11C3  30FF               	movlw	255
  7158  11C4  05FA               	andwf	___xxtofl@arg,f
  7159  11C5  30FF               	movlw	255
  7160  11C6  05FB               	andwf	___xxtofl@arg+1,f
  7161  11C7  307F               	movlw	127
  7162  11C8  05FC               	andwf	___xxtofl@arg+2,f
  7163  11C9  30FF               	movlw	255
  7164  11CA  05FD               	andwf	___xxtofl@arg+3,f
  7165  11CB                     l770:
  7166  11CB  1003               	clrc
  7167  11CC  0CF9               	rrf	___xxtofl@exp,f
  7168  11CD                     l3056:
  7169  11CD  0879               	movf	___xxtofl@exp,w
  7170  11CE  00F4               	movwf	??___xxtofl
  7171  11CF  01F5               	clrf	??___xxtofl+1
  7172  11D0  01F6               	clrf	??___xxtofl+2
  7173  11D1  01F7               	clrf	??___xxtofl+3
  7174  11D2  3018               	movlw	24
  7175  11D3                     u5055:
  7176  11D3  1003               	clrc
  7177  11D4  0DF4               	rlf	??___xxtofl,f
  7178  11D5  0DF5               	rlf	??___xxtofl+1,f
  7179  11D6  0DF6               	rlf	??___xxtofl+2,f
  7180  11D7  0DF7               	rlf	??___xxtofl+3,f
  7181  11D8                     u5050:
  7182  11D8  3EFF               	addlw	-1
  7183  11D9  1D03               	skipz
  7184  11DA  29D3               	goto	u5055
  7185  11DB  0874               	movf	??___xxtofl,w
  7186  11DC  04FA               	iorwf	___xxtofl@arg,f
  7187  11DD  0875               	movf	??___xxtofl+1,w
  7188  11DE  04FB               	iorwf	___xxtofl@arg+1,f
  7189  11DF  0876               	movf	??___xxtofl+2,w
  7190  11E0  04FC               	iorwf	___xxtofl@arg+2,f
  7191  11E1  0877               	movf	??___xxtofl+3,w
  7192  11E2  04FD               	iorwf	___xxtofl@arg+3,f
  7193  11E3                     l3058:
  7194  11E3  0878               	movf	___xxtofl@sign,w
  7195  11E4  1903               	btfsc	3,2
  7196  11E5  29E7               	goto	u5061
  7197  11E6  29E8               	goto	u5060
  7198  11E7                     u5061:
  7199  11E7  29ED               	goto	l3064
  7200  11E8                     u5060:
  7201  11E8                     l3060:
  7202  11E8  1FF3               	btfss	___xxtofl@val+3,7
  7203  11E9  29EB               	goto	u5071
  7204  11EA  29EC               	goto	u5070
  7205  11EB                     u5071:
  7206  11EB  29ED               	goto	l3064
  7207  11EC                     u5070:
  7208  11EC                     l3062:
  7209  11EC  17FD               	bsf	___xxtofl@arg+3,7
  7210  11ED                     l3064:
  7211  11ED  087D               	movf	___xxtofl@arg+3,w
  7212  11EE  00F3               	movwf	?___xxtofl+3
  7213  11EF  087C               	movf	___xxtofl@arg+2,w
  7214  11F0  00F2               	movwf	?___xxtofl+2
  7215  11F1  087B               	movf	___xxtofl@arg+1,w
  7216  11F2  00F1               	movwf	?___xxtofl+1
  7217  11F3  087A               	movf	___xxtofl@arg,w
  7218  11F4  00F0               	movwf	?___xxtofl
  7219  11F5                     l758:
  7220  11F5  0008               	return
  7221  11F6                     __end_of___xxtofl:
  7222                           
  7223                           	psect	text13
  7224  1D09                     __ptext13:	
  7225 ;; *************** function ___wmul *****************
  7226 ;; Defined at:
  7227 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  multiplier      2    0[COMMON] unsigned int 
  7230 ;;  multiplicand    2    2[COMMON] unsigned int 
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  product         2    4[COMMON] unsigned int 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  2    0[COMMON] unsigned int 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7242 ;;      Params:         4       0       0       0       0
  7243 ;;      Locals:         2       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0
  7245 ;;      Totals:         6       0       0       0       0
  7246 ;;Total ram usage:        6 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_sprintf
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255  1D09                     ___wmul:	
  7256                           ;psect for function ___wmul
  7257                           
  7258  1D09                     l2884:	
  7259                           ;incstack = 0
  7260                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7261                           
  7262  1D09  01F4               	clrf	___wmul@product
  7263  1D0A  01F5               	clrf	___wmul@product+1
  7264  1D0B                     l2886:
  7265  1D0B  1C70               	btfss	___wmul@multiplier,0
  7266  1D0C  2D0E               	goto	u4561
  7267  1D0D  2D0F               	goto	u4560
  7268  1D0E                     u4561:
  7269  1D0E  2D15               	goto	l289
  7270  1D0F                     u4560:
  7271  1D0F                     l2888:
  7272  1D0F  0872               	movf	___wmul@multiplicand,w
  7273  1D10  07F4               	addwf	___wmul@product,f
  7274  1D11  1803               	skipnc
  7275  1D12  0AF5               	incf	___wmul@product+1,f
  7276  1D13  0873               	movf	___wmul@multiplicand+1,w
  7277  1D14  07F5               	addwf	___wmul@product+1,f
  7278  1D15                     l289:
  7279  1D15  3001               	movlw	1
  7280  1D16                     u4575:
  7281  1D16  1003               	clrc
  7282  1D17  0DF2               	rlf	___wmul@multiplicand,f
  7283  1D18  0DF3               	rlf	___wmul@multiplicand+1,f
  7284  1D19  3EFF               	addlw	-1
  7285  1D1A  1D03               	skipz
  7286  1D1B  2D16               	goto	u4575
  7287  1D1C                     l2890:
  7288  1D1C  3001               	movlw	1
  7289  1D1D                     u4585:
  7290  1D1D  1003               	clrc
  7291  1D1E  0CF1               	rrf	___wmul@multiplier+1,f
  7292  1D1F  0CF0               	rrf	___wmul@multiplier,f
  7293  1D20  3EFF               	addlw	-1
  7294  1D21  1D03               	skipz
  7295  1D22  2D1D               	goto	u4585
  7296  1D23                     l2892:
  7297  1D23  0870               	movf	___wmul@multiplier,w
  7298  1D24  0471               	iorwf	___wmul@multiplier+1,w
  7299  1D25  1D03               	btfss	3,2
  7300  1D26  2D28               	goto	u4591
  7301  1D27  2D29               	goto	u4590
  7302  1D28                     u4591:
  7303  1D28  2D0B               	goto	l2886
  7304  1D29                     u4590:
  7305  1D29                     l2894:
  7306  1D29  0875               	movf	___wmul@product+1,w
  7307  1D2A  00F1               	movwf	?___wmul+1
  7308  1D2B  0874               	movf	___wmul@product,w
  7309  1D2C  00F0               	movwf	?___wmul
  7310  1D2D                     l291:
  7311  1D2D  0008               	return
  7312  1D2E                     __end_of___wmul:
  7313                           
  7314                           	psect	text14
  7315  1EEF                     __ptext14:	
  7316 ;; *************** function ___llmod *****************
  7317 ;; Defined at:
  7318 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  divisor         4    0[COMMON] unsigned long 
  7321 ;;  dividend        4    4[COMMON] unsigned long 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  counter         1    9[COMMON] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  4    0[COMMON] unsigned long 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7333 ;;      Params:         8       0       0       0       0
  7334 ;;      Locals:         1       0       0       0       0
  7335 ;;      Temps:          1       0       0       0       0
  7336 ;;      Totals:        10       0       0       0       0
  7337 ;;Total ram usage:       10 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_sprintf
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346  1EEF                     ___llmod:	
  7347                           ;psect for function ___llmod
  7348                           
  7349  1EEF                     l2998:	
  7350                           ;incstack = 0
  7351                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7352                           
  7353  1EEF  0873               	movf	___llmod@divisor+3,w
  7354  1EF0  0472               	iorwf	___llmod@divisor+2,w
  7355  1EF1  0471               	iorwf	___llmod@divisor+1,w
  7356  1EF2  0470               	iorwf	___llmod@divisor,w
  7357  1EF3  1903               	skipnz
  7358  1EF4  2EF6               	goto	u4881
  7359  1EF5  2EF7               	goto	u4880
  7360  1EF6                     u4881:
  7361  1EF6  2F3A               	goto	l3014
  7362  1EF7                     u4880:
  7363  1EF7                     l3000:
  7364  1EF7  01F9               	clrf	___llmod@counter
  7365  1EF8  0AF9               	incf	___llmod@counter,f
  7366  1EF9  2F07               	goto	l3004
  7367  1EFA                     l3002:
  7368  1EFA  3001               	movlw	1
  7369  1EFB  00F8               	movwf	??___llmod
  7370  1EFC                     u4895:
  7371  1EFC  1003               	clrc
  7372  1EFD  0DF0               	rlf	___llmod@divisor,f
  7373  1EFE  0DF1               	rlf	___llmod@divisor+1,f
  7374  1EFF  0DF2               	rlf	___llmod@divisor+2,f
  7375  1F00  0DF3               	rlf	___llmod@divisor+3,f
  7376  1F01  0BF8               	decfsz	??___llmod,f
  7377  1F02  2EFC               	goto	u4895
  7378  1F03  3001               	movlw	1
  7379  1F04  00F8               	movwf	??___llmod
  7380  1F05  0878               	movf	??___llmod,w
  7381  1F06  07F9               	addwf	___llmod@counter,f
  7382  1F07                     l3004:
  7383  1F07  1FF3               	btfss	___llmod@divisor+3,7
  7384  1F08  2F0A               	goto	u4901
  7385  1F09  2F0B               	goto	u4900
  7386  1F0A                     u4901:
  7387  1F0A  2EFA               	goto	l3002
  7388  1F0B                     u4900:
  7389  1F0B                     l3006:
  7390  1F0B  0873               	movf	___llmod@divisor+3,w
  7391  1F0C  0277               	subwf	___llmod@dividend+3,w
  7392  1F0D  1D03               	skipz
  7393  1F0E  2F19               	goto	u4915
  7394  1F0F  0872               	movf	___llmod@divisor+2,w
  7395  1F10  0276               	subwf	___llmod@dividend+2,w
  7396  1F11  1D03               	skipz
  7397  1F12  2F19               	goto	u4915
  7398  1F13  0871               	movf	___llmod@divisor+1,w
  7399  1F14  0275               	subwf	___llmod@dividend+1,w
  7400  1F15  1D03               	skipz
  7401  1F16  2F19               	goto	u4915
  7402  1F17  0870               	movf	___llmod@divisor,w
  7403  1F18  0274               	subwf	___llmod@dividend,w
  7404  1F19                     u4915:
  7405  1F19  1C03               	skipc
  7406  1F1A  2F1C               	goto	u4911
  7407  1F1B  2F1D               	goto	u4910
  7408  1F1C                     u4911:
  7409  1F1C  2F2B               	goto	l3010
  7410  1F1D                     u4910:
  7411  1F1D                     l3008:
  7412  1F1D  0870               	movf	___llmod@divisor,w
  7413  1F1E  02F4               	subwf	___llmod@dividend,f
  7414  1F1F  0871               	movf	___llmod@divisor+1,w
  7415  1F20  1C03               	skipc
  7416  1F21  0F71               	incfsz	___llmod@divisor+1,w
  7417  1F22  02F5               	subwf	___llmod@dividend+1,f
  7418  1F23  0872               	movf	___llmod@divisor+2,w
  7419  1F24  1C03               	skipc
  7420  1F25  0F72               	incfsz	___llmod@divisor+2,w
  7421  1F26  02F6               	subwf	___llmod@dividend+2,f
  7422  1F27  0873               	movf	___llmod@divisor+3,w
  7423  1F28  1C03               	skipc
  7424  1F29  0F73               	incfsz	___llmod@divisor+3,w
  7425  1F2A  02F7               	subwf	___llmod@dividend+3,f
  7426  1F2B                     l3010:
  7427  1F2B  3001               	movlw	1
  7428  1F2C                     u4925:
  7429  1F2C  1003               	clrc
  7430  1F2D  0CF3               	rrf	___llmod@divisor+3,f
  7431  1F2E  0CF2               	rrf	___llmod@divisor+2,f
  7432  1F2F  0CF1               	rrf	___llmod@divisor+1,f
  7433  1F30  0CF0               	rrf	___llmod@divisor,f
  7434  1F31  3EFF               	addlw	-1
  7435  1F32  1D03               	skipz
  7436  1F33  2F2C               	goto	u4925
  7437  1F34                     l3012:
  7438  1F34  3001               	movlw	1
  7439  1F35  02F9               	subwf	___llmod@counter,f
  7440  1F36  1D03               	btfss	3,2
  7441  1F37  2F39               	goto	u4931
  7442  1F38  2F3A               	goto	u4930
  7443  1F39                     u4931:
  7444  1F39  2F0B               	goto	l3006
  7445  1F3A                     u4930:
  7446  1F3A                     l3014:
  7447  1F3A  0877               	movf	___llmod@dividend+3,w
  7448  1F3B  00F3               	movwf	?___llmod+3
  7449  1F3C  0876               	movf	___llmod@dividend+2,w
  7450  1F3D  00F2               	movwf	?___llmod+2
  7451  1F3E  0875               	movf	___llmod@dividend+1,w
  7452  1F3F  00F1               	movwf	?___llmod+1
  7453  1F40  0874               	movf	___llmod@dividend,w
  7454  1F41  00F0               	movwf	?___llmod
  7455  1F42                     l545:
  7456  1F42  0008               	return
  7457  1F43                     __end_of___llmod:
  7458                           
  7459                           	psect	text15
  7460  1034                     __ptext15:	
  7461 ;; *************** function ___lldiv *****************
  7462 ;; Defined at:
  7463 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  divisor         4    0[COMMON] unsigned long 
  7466 ;;  dividend        4    4[COMMON] unsigned long 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  quotient        4    9[COMMON] unsigned long 
  7469 ;;  counter         1   13[COMMON] unsigned char 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  4    0[COMMON] unsigned long 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7479 ;;      Params:         8       0       0       0       0
  7480 ;;      Locals:         5       0       0       0       0
  7481 ;;      Temps:          1       0       0       0       0
  7482 ;;      Totals:        14       0       0       0       0
  7483 ;;Total ram usage:       14 bytes
  7484 ;; Hardware stack levels used: 1
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_sprintf
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492  1034                     ___lldiv:	
  7493                           ;psect for function ___lldiv
  7494                           
  7495  1034                     l2898:	
  7496                           ;incstack = 0
  7497                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7498                           
  7499  1034  3000               	movlw	0
  7500  1035  00FC               	movwf	___lldiv@quotient+3
  7501  1036  3000               	movlw	0
  7502  1037  00FB               	movwf	___lldiv@quotient+2
  7503  1038  3000               	movlw	0
  7504  1039  00FA               	movwf	___lldiv@quotient+1
  7505  103A  3000               	movlw	0
  7506  103B  00F9               	movwf	___lldiv@quotient
  7507  103C  0873               	movf	___lldiv@divisor+3,w
  7508  103D  0472               	iorwf	___lldiv@divisor+2,w
  7509  103E  0471               	iorwf	___lldiv@divisor+1,w
  7510  103F  0470               	iorwf	___lldiv@divisor,w
  7511  1040  1903               	skipnz
  7512  1041  2843               	goto	u4601
  7513  1042  2844               	goto	u4600
  7514  1043                     u4601:
  7515  1043  2891               	goto	l2918
  7516  1044                     u4600:
  7517  1044                     l2900:
  7518  1044  01FD               	clrf	___lldiv@counter
  7519  1045  0AFD               	incf	___lldiv@counter,f
  7520  1046  2854               	goto	l2904
  7521  1047                     l2902:
  7522  1047  3001               	movlw	1
  7523  1048  00F8               	movwf	??___lldiv
  7524  1049                     u4615:
  7525  1049  1003               	clrc
  7526  104A  0DF0               	rlf	___lldiv@divisor,f
  7527  104B  0DF1               	rlf	___lldiv@divisor+1,f
  7528  104C  0DF2               	rlf	___lldiv@divisor+2,f
  7529  104D  0DF3               	rlf	___lldiv@divisor+3,f
  7530  104E  0BF8               	decfsz	??___lldiv,f
  7531  104F  2849               	goto	u4615
  7532  1050  3001               	movlw	1
  7533  1051  00F8               	movwf	??___lldiv
  7534  1052  0878               	movf	??___lldiv,w
  7535  1053  07FD               	addwf	___lldiv@counter,f
  7536  1054                     l2904:
  7537  1054  1FF3               	btfss	___lldiv@divisor+3,7
  7538  1055  2857               	goto	u4621
  7539  1056  2858               	goto	u4620
  7540  1057                     u4621:
  7541  1057  2847               	goto	l2902
  7542  1058                     u4620:
  7543  1058                     l2906:
  7544  1058  3001               	movlw	1
  7545  1059  00F8               	movwf	??___lldiv
  7546  105A                     u4635:
  7547  105A  1003               	clrc
  7548  105B  0DF9               	rlf	___lldiv@quotient,f
  7549  105C  0DFA               	rlf	___lldiv@quotient+1,f
  7550  105D  0DFB               	rlf	___lldiv@quotient+2,f
  7551  105E  0DFC               	rlf	___lldiv@quotient+3,f
  7552  105F  0BF8               	decfsz	??___lldiv,f
  7553  1060  285A               	goto	u4635
  7554  1061                     l2908:
  7555  1061  0873               	movf	___lldiv@divisor+3,w
  7556  1062  0277               	subwf	___lldiv@dividend+3,w
  7557  1063  1D03               	skipz
  7558  1064  286F               	goto	u4645
  7559  1065  0872               	movf	___lldiv@divisor+2,w
  7560  1066  0276               	subwf	___lldiv@dividend+2,w
  7561  1067  1D03               	skipz
  7562  1068  286F               	goto	u4645
  7563  1069  0871               	movf	___lldiv@divisor+1,w
  7564  106A  0275               	subwf	___lldiv@dividend+1,w
  7565  106B  1D03               	skipz
  7566  106C  286F               	goto	u4645
  7567  106D  0870               	movf	___lldiv@divisor,w
  7568  106E  0274               	subwf	___lldiv@dividend,w
  7569  106F                     u4645:
  7570  106F  1C03               	skipc
  7571  1070  2872               	goto	u4641
  7572  1071  2873               	goto	u4640
  7573  1072                     u4641:
  7574  1072  2882               	goto	l2914
  7575  1073                     u4640:
  7576  1073                     l2910:
  7577  1073  0870               	movf	___lldiv@divisor,w
  7578  1074  02F4               	subwf	___lldiv@dividend,f
  7579  1075  0871               	movf	___lldiv@divisor+1,w
  7580  1076  1C03               	skipc
  7581  1077  0F71               	incfsz	___lldiv@divisor+1,w
  7582  1078  02F5               	subwf	___lldiv@dividend+1,f
  7583  1079  0872               	movf	___lldiv@divisor+2,w
  7584  107A  1C03               	skipc
  7585  107B  0F72               	incfsz	___lldiv@divisor+2,w
  7586  107C  02F6               	subwf	___lldiv@dividend+2,f
  7587  107D  0873               	movf	___lldiv@divisor+3,w
  7588  107E  1C03               	skipc
  7589  107F  0F73               	incfsz	___lldiv@divisor+3,w
  7590  1080  02F7               	subwf	___lldiv@dividend+3,f
  7591  1081                     l2912:
  7592  1081  1479               	bsf	___lldiv@quotient,0
  7593  1082                     l2914:
  7594  1082  3001               	movlw	1
  7595  1083                     u4655:
  7596  1083  1003               	clrc
  7597  1084  0CF3               	rrf	___lldiv@divisor+3,f
  7598  1085  0CF2               	rrf	___lldiv@divisor+2,f
  7599  1086  0CF1               	rrf	___lldiv@divisor+1,f
  7600  1087  0CF0               	rrf	___lldiv@divisor,f
  7601  1088  3EFF               	addlw	-1
  7602  1089  1D03               	skipz
  7603  108A  2883               	goto	u4655
  7604  108B                     l2916:
  7605  108B  3001               	movlw	1
  7606  108C  02FD               	subwf	___lldiv@counter,f
  7607  108D  1D03               	btfss	3,2
  7608  108E  2890               	goto	u4661
  7609  108F  2891               	goto	u4660
  7610  1090                     u4661:
  7611  1090  2858               	goto	l2906
  7612  1091                     u4660:
  7613  1091                     l2918:
  7614  1091  087C               	movf	___lldiv@quotient+3,w
  7615  1092  00F3               	movwf	?___lldiv+3
  7616  1093  087B               	movf	___lldiv@quotient+2,w
  7617  1094  00F2               	movwf	?___lldiv+2
  7618  1095  087A               	movf	___lldiv@quotient+1,w
  7619  1096  00F1               	movwf	?___lldiv+1
  7620  1097  0879               	movf	___lldiv@quotient,w
  7621  1098  00F0               	movwf	?___lldiv
  7622  1099                     l325:
  7623  1099  0008               	return
  7624  109A                     __end_of___lldiv:
  7625                           
  7626                           	psect	text16
  7627  0806                     __ptext16:	
  7628 ;; *************** function ___fltol *****************
  7629 ;; Defined at:
  7630 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  f1              4   49[BANK0 ] unsigned long 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  exp1            1   59[BANK0 ] unsigned char 
  7635 ;;  sign1           1   58[BANK0 ] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  4   49[BANK0 ] long 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7645 ;;      Params:         0       4       0       0       0
  7646 ;;      Locals:         0       2       0       0       0
  7647 ;;      Temps:          0       5       0       0       0
  7648 ;;      Totals:         0      11       0       0       0
  7649 ;;Total ram usage:       11 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_sprintf
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658  0806                     ___fltol:	
  7659                           ;psect for function ___fltol
  7660                           
  7661  0806                     l2962:	
  7662                           ;incstack = 0
  7663                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7664                           
  7665  0806  1003               	clrc
  7666  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7667  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7668  0809  0D53               	rlf	___fltol@f1+2,w
  7669  080A  0D54               	rlf	___fltol@f1+3,w
  7670  080B  00D5               	movwf	??___fltol
  7671  080C  0855               	movf	??___fltol,w
  7672  080D  00DB               	movwf	___fltol@exp1
  7673  080E  085B               	movf	___fltol@exp1,w
  7674  080F  1D03               	btfss	3,2
  7675  0810  2812               	goto	u4781
  7676  0811  2813               	goto	u4780
  7677  0812                     u4781:
  7678  0812  281C               	goto	l2968
  7679  0813                     u4780:
  7680  0813                     l2964:
  7681  0813  3000               	movlw	0
  7682  0814  00D4               	movwf	?___fltol+3
  7683  0815  3000               	movlw	0
  7684  0816  00D3               	movwf	?___fltol+2
  7685  0817  3000               	movlw	0
  7686  0818  00D2               	movwf	?___fltol+1
  7687  0819  3000               	movlw	0
  7688  081A  00D1               	movwf	?___fltol
  7689  081B  2881               	goto	l492
  7690  081C                     l2968:
  7691  081C  0851               	movf	___fltol@f1,w
  7692  081D  00D5               	movwf	??___fltol
  7693  081E  0852               	movf	___fltol@f1+1,w
  7694  081F  00D6               	movwf	??___fltol+1
  7695  0820  0853               	movf	___fltol@f1+2,w
  7696  0821  00D7               	movwf	??___fltol+2
  7697  0822  0854               	movf	___fltol@f1+3,w
  7698  0823  00D8               	movwf	??___fltol+3
  7699  0824  301F               	movlw	31
  7700  0825                     u4795:
  7701  0825  1003               	clrc
  7702  0826  0CD8               	rrf	??___fltol+3,f
  7703  0827  0CD7               	rrf	??___fltol+2,f
  7704  0828  0CD6               	rrf	??___fltol+1,f
  7705  0829  0CD5               	rrf	??___fltol,f
  7706  082A                     u4790:
  7707  082A  3EFF               	addlw	-1
  7708  082B  1D03               	skipz
  7709  082C  2825               	goto	u4795
  7710  082D  0855               	movf	??___fltol,w
  7711  082E  00D9               	movwf	??___fltol+4
  7712  082F  0859               	movf	??___fltol+4,w
  7713  0830  00DA               	movwf	___fltol@sign1
  7714  0831                     l2970:
  7715  0831  17D3               	bsf	___fltol@f1+2,7
  7716  0832                     l2972:
  7717  0832  30FF               	movlw	255
  7718  0833  05D1               	andwf	___fltol@f1,f
  7719  0834  30FF               	movlw	255
  7720  0835  05D2               	andwf	___fltol@f1+1,f
  7721  0836  30FF               	movlw	255
  7722  0837  05D3               	andwf	___fltol@f1+2,f
  7723  0838  3000               	movlw	0
  7724  0839  05D4               	andwf	___fltol@f1+3,f
  7725  083A                     l2974:
  7726  083A  3096               	movlw	150
  7727  083B  02DB               	subwf	___fltol@exp1,f
  7728  083C                     l2976:
  7729  083C  1FDB               	btfss	___fltol@exp1,7
  7730  083D  283F               	goto	u4801
  7731  083E  2840               	goto	u4800
  7732  083F                     u4801:
  7733  083F  285A               	goto	l2986
  7734  0840                     u4800:
  7735  0840                     l2978:
  7736  0840  085B               	movf	___fltol@exp1,w
  7737  0841  3A80               	xorlw	128
  7738  0842  3E97               	addlw	151
  7739  0843  1803               	skipnc
  7740  0844  2846               	goto	u4811
  7741  0845  2847               	goto	u4810
  7742  0846                     u4811:
  7743  0846  2848               	goto	l2984
  7744  0847                     u4810:
  7745  0847  2813               	goto	l2964
  7746  0848                     l2984:
  7747  0848  3001               	movlw	1
  7748  0849                     u4825:
  7749  0849  1003               	clrc
  7750  084A  0CD4               	rrf	___fltol@f1+3,f
  7751  084B  0CD3               	rrf	___fltol@f1+2,f
  7752  084C  0CD2               	rrf	___fltol@f1+1,f
  7753  084D  0CD1               	rrf	___fltol@f1,f
  7754  084E  3EFF               	addlw	-1
  7755  084F  1D03               	skipz
  7756  0850  2849               	goto	u4825
  7757  0851  3001               	movlw	1
  7758  0852  00D5               	movwf	??___fltol
  7759  0853  0855               	movf	??___fltol,w
  7760  0854  07DB               	addwf	___fltol@exp1,f
  7761  0855  1D03               	btfss	3,2
  7762  0856  2858               	goto	u4831
  7763  0857  2859               	goto	u4830
  7764  0858                     u4831:
  7765  0858  2848               	goto	l2984
  7766  0859                     u4830:
  7767  0859  2871               	goto	l2994
  7768  085A                     l2986:
  7769  085A  3020               	movlw	32
  7770  085B  025B               	subwf	___fltol@exp1,w
  7771  085C  1C03               	skipc
  7772  085D  285F               	goto	u4841
  7773  085E  2860               	goto	u4840
  7774  085F                     u4841:
  7775  085F  286C               	goto	l499
  7776  0860                     u4840:
  7777  0860  2813               	goto	l2964
  7778  0861                     l2992:
  7779  0861  3001               	movlw	1
  7780  0862  00D5               	movwf	??___fltol
  7781  0863                     u4855:
  7782  0863  1003               	clrc
  7783  0864  0DD1               	rlf	___fltol@f1,f
  7784  0865  0DD2               	rlf	___fltol@f1+1,f
  7785  0866  0DD3               	rlf	___fltol@f1+2,f
  7786  0867  0DD4               	rlf	___fltol@f1+3,f
  7787  0868  0BD5               	decfsz	??___fltol,f
  7788  0869  2863               	goto	u4855
  7789  086A  3001               	movlw	1
  7790  086B  02DB               	subwf	___fltol@exp1,f
  7791  086C                     l499:
  7792  086C  085B               	movf	___fltol@exp1,w
  7793  086D  1D03               	btfss	3,2
  7794  086E  2870               	goto	u4861
  7795  086F  2871               	goto	u4860
  7796  0870                     u4861:
  7797  0870  2861               	goto	l2992
  7798  0871                     u4860:
  7799  0871                     l2994:
  7800  0871  085A               	movf	___fltol@sign1,w
  7801  0872  1903               	btfsc	3,2
  7802  0873  2875               	goto	u4871
  7803  0874  2876               	goto	u4870
  7804  0875                     u4871:
  7805  0875  2881               	goto	l502
  7806  0876                     u4870:
  7807  0876                     l2996:
  7808  0876  09D1               	comf	___fltol@f1,f
  7809  0877  09D2               	comf	___fltol@f1+1,f
  7810  0878  09D3               	comf	___fltol@f1+2,f
  7811  0879  09D4               	comf	___fltol@f1+3,f
  7812  087A  0AD1               	incf	___fltol@f1,f
  7813  087B  1903               	skipnz
  7814  087C  0AD2               	incf	___fltol@f1+1,f
  7815  087D  1903               	skipnz
  7816  087E  0AD3               	incf	___fltol@f1+2,f
  7817  087F  1903               	skipnz
  7818  0880  0AD4               	incf	___fltol@f1+3,f
  7819  0881                     l502:
  7820  0881                     l492:
  7821  0881  0008               	return
  7822  0882                     __end_of___fltol:
  7823                           
  7824                           	psect	text17
  7825  1CE5                     __ptext17:	
  7826 ;; *************** function ___flsub *****************
  7827 ;; Defined at:
  7828 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  a               4   70[BANK0 ] long 
  7831 ;;  b               4   74[BANK0 ] long 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  4   70[BANK0 ] long 
  7836 ;; Registers used:
  7837 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7843 ;;      Params:         0       8       0       0       0
  7844 ;;      Locals:         0       0       0       0       0
  7845 ;;      Temps:          0       0       0       0       0
  7846 ;;      Totals:         0       8       0       0       0
  7847 ;;Total ram usage:        8 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 1
  7850 ;; This function calls:
  7851 ;;		___fladd
  7852 ;; This function is called by:
  7853 ;;		_sprintf
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857  1CE5                     ___flsub:	
  7858                           ;psect for function ___flsub
  7859                           
  7860  1CE5                     l3018:	
  7861                           ;incstack = 0
  7862                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7863                           
  7864  1CE5  3080               	movlw	128
  7865  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  7866  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  7867  1CE8  06E9               	xorwf	___flsub@a+3,f
  7868  1CE9                     l3020:
  7869  1CE9  086D               	movf	___flsub@b+3,w
  7870  1CEA  00D5               	movwf	___fladd@b+3
  7871  1CEB  086C               	movf	___flsub@b+2,w
  7872  1CEC  00D4               	movwf	___fladd@b+2
  7873  1CED  086B               	movf	___flsub@b+1,w
  7874  1CEE  00D3               	movwf	___fladd@b+1
  7875  1CEF  086A               	movf	___flsub@b,w
  7876  1CF0  00D2               	movwf	___fladd@b
  7877  1CF1  0869               	movf	___flsub@a+3,w
  7878  1CF2  00D9               	movwf	___fladd@a+3
  7879  1CF3  0868               	movf	___flsub@a+2,w
  7880  1CF4  00D8               	movwf	___fladd@a+2
  7881  1CF5  0867               	movf	___flsub@a+1,w
  7882  1CF6  00D7               	movwf	___fladd@a+1
  7883  1CF7  0866               	movf	___flsub@a,w
  7884  1CF8  00D6               	movwf	___fladd@a
  7885  1CF9  160A  118A  2578  160A  158A  	fcall	___fladd
  7886  1CFE  1283               	bcf	3,5	;RP0=0, select bank0
  7887  1CFF  1303               	bcf	3,6	;RP1=0, select bank0
  7888  1D00  0855               	movf	?___fladd+3,w
  7889  1D01  00E9               	movwf	?___flsub+3
  7890  1D02  0854               	movf	?___fladd+2,w
  7891  1D03  00E8               	movwf	?___flsub+2
  7892  1D04  0853               	movf	?___fladd+1,w
  7893  1D05  00E7               	movwf	?___flsub+1
  7894  1D06  0852               	movf	?___fladd,w
  7895  1D07  00E6               	movwf	?___flsub
  7896  1D08                     l662:
  7897  1D08  0008               	return
  7898  1D09                     __end_of___flsub:
  7899                           
  7900                           	psect	text18
  7901  1578                     __ptext18:	
  7902 ;; *************** function ___fladd *****************
  7903 ;; Defined at:
  7904 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  b               4   50[BANK0 ] long 
  7907 ;;  a               4   54[BANK0 ] long 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  grs             1   69[BANK0 ] unsigned char 
  7910 ;;  bexp            1   68[BANK0 ] unsigned char 
  7911 ;;  aexp            1   67[BANK0 ] unsigned char 
  7912 ;;  signs           1   66[BANK0 ] unsigned char 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  4   50[BANK0 ] unsigned char 
  7915 ;; Registers used:
  7916 ;;		wreg, status,2, status,0, btemp+1
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7922 ;;      Params:         0       8       0       0       0
  7923 ;;      Locals:         0       4       0       0       0
  7924 ;;      Temps:          0       8       0       0       0
  7925 ;;      Totals:         0      20       0       0       0
  7926 ;;Total ram usage:       20 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_sprintf
  7932 ;;		___flsub
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936  1578                     ___fladd:	
  7937                           ;psect for function ___fladd
  7938                           
  7939  1578                     l2328:	
  7940                           ;incstack = 0
  7941                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7942                           
  7943  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7944  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7945  157A  0855               	movf	___fladd@b+3,w
  7946  157B  3980               	andlw	128
  7947  157C  00DA               	movwf	??___fladd
  7948  157D  085A               	movf	??___fladd,w
  7949  157E  00E2               	movwf	___fladd@signs
  7950  157F                     l2330:
  7951  157F  0855               	movf	___fladd@b+3,w
  7952  1580  00DA               	movwf	??___fladd
  7953  1581  075A               	addwf	??___fladd,w
  7954  1582  00DB               	movwf	??___fladd+1
  7955  1583  085B               	movf	??___fladd+1,w
  7956  1584  00E4               	movwf	___fladd@bexp
  7957  1585                     l2332:
  7958  1585  1FD4               	btfss	___fladd@b+2,7
  7959  1586  2D88               	goto	u3161
  7960  1587  2D89               	goto	u3160
  7961  1588                     u3161:
  7962  1588  2D8A               	goto	l2336
  7963  1589                     u3160:
  7964  1589                     l2334:
  7965  1589  1464               	bsf	___fladd@bexp,0
  7966  158A                     l2336:
  7967  158A  0864               	movf	___fladd@bexp,w
  7968  158B  1903               	btfsc	3,2
  7969  158C  2D8E               	goto	u3171
  7970  158D  2D8F               	goto	u3170
  7971  158E                     u3171:
  7972  158E  2D9F               	goto	l2346
  7973  158F                     u3170:
  7974  158F                     l2338:
  7975  158F  0A64               	incf	___fladd@bexp,w
  7976  1590  1D03               	btfss	3,2
  7977  1591  2D93               	goto	u3181
  7978  1592  2D94               	goto	u3180
  7979  1593                     u3181:
  7980  1593  2D9C               	goto	l2342
  7981  1594                     u3180:
  7982  1594                     l2340:
  7983  1594  3000               	movlw	0
  7984  1595  00D5               	movwf	___fladd@b+3
  7985  1596  3000               	movlw	0
  7986  1597  00D4               	movwf	___fladd@b+2
  7987  1598  3000               	movlw	0
  7988  1599  00D3               	movwf	___fladd@b+1
  7989  159A  3000               	movlw	0
  7990  159B  00D2               	movwf	___fladd@b
  7991  159C                     l2342:
  7992  159C  17D4               	bsf	___fladd@b+2,7
  7993  159D                     l2344:
  7994  159D  01D5               	clrf	___fladd@b+3
  7995  159E  2DA7               	goto	l2348
  7996  159F                     l2346:
  7997  159F  3000               	movlw	0
  7998  15A0  00D5               	movwf	___fladd@b+3
  7999  15A1  3000               	movlw	0
  8000  15A2  00D4               	movwf	___fladd@b+2
  8001  15A3  3000               	movlw	0
  8002  15A4  00D3               	movwf	___fladd@b+1
  8003  15A5  3000               	movlw	0
  8004  15A6  00D2               	movwf	___fladd@b
  8005  15A7                     l2348:
  8006  15A7  0859               	movf	___fladd@a+3,w
  8007  15A8  3980               	andlw	128
  8008  15A9  00DA               	movwf	??___fladd
  8009  15AA  085A               	movf	??___fladd,w
  8010  15AB  00E3               	movwf	___fladd@aexp
  8011  15AC                     l2350:
  8012  15AC  0863               	movf	___fladd@aexp,w
  8013  15AD  0662               	xorwf	___fladd@signs,w
  8014  15AE  1903               	skipnz
  8015  15AF  2DB1               	goto	u3191
  8016  15B0  2DB2               	goto	u3190
  8017  15B1                     u3191:
  8018  15B1  2DB3               	goto	l2354
  8019  15B2                     u3190:
  8020  15B2                     l2352:
  8021  15B2  1762               	bsf	___fladd@signs,6
  8022  15B3                     l2354:
  8023  15B3  0859               	movf	___fladd@a+3,w
  8024  15B4  00DA               	movwf	??___fladd
  8025  15B5  075A               	addwf	??___fladd,w
  8026  15B6  00DB               	movwf	??___fladd+1
  8027  15B7  085B               	movf	??___fladd+1,w
  8028  15B8  00E3               	movwf	___fladd@aexp
  8029  15B9                     l2356:
  8030  15B9  1FD8               	btfss	___fladd@a+2,7
  8031  15BA  2DBC               	goto	u3201
  8032  15BB  2DBD               	goto	u3200
  8033  15BC                     u3201:
  8034  15BC  2DBE               	goto	l2360
  8035  15BD                     u3200:
  8036  15BD                     l2358:
  8037  15BD  1463               	bsf	___fladd@aexp,0
  8038  15BE                     l2360:
  8039  15BE  0863               	movf	___fladd@aexp,w
  8040  15BF  1903               	btfsc	3,2
  8041  15C0  2DC2               	goto	u3211
  8042  15C1  2DC3               	goto	u3210
  8043  15C2                     u3211:
  8044  15C2  2DD3               	goto	l2370
  8045  15C3                     u3210:
  8046  15C3                     l2362:
  8047  15C3  0A63               	incf	___fladd@aexp,w
  8048  15C4  1D03               	btfss	3,2
  8049  15C5  2DC7               	goto	u3221
  8050  15C6  2DC8               	goto	u3220
  8051  15C7                     u3221:
  8052  15C7  2DD0               	goto	l2366
  8053  15C8                     u3220:
  8054  15C8                     l2364:
  8055  15C8  3000               	movlw	0
  8056  15C9  00D9               	movwf	___fladd@a+3
  8057  15CA  3000               	movlw	0
  8058  15CB  00D8               	movwf	___fladd@a+2
  8059  15CC  3000               	movlw	0
  8060  15CD  00D7               	movwf	___fladd@a+1
  8061  15CE  3000               	movlw	0
  8062  15CF  00D6               	movwf	___fladd@a
  8063  15D0                     l2366:
  8064  15D0  17D8               	bsf	___fladd@a+2,7
  8065  15D1                     l2368:
  8066  15D1  01D9               	clrf	___fladd@a+3
  8067  15D2  2DDB               	goto	l616
  8068  15D3                     l2370:
  8069  15D3  3000               	movlw	0
  8070  15D4  00D9               	movwf	___fladd@a+3
  8071  15D5  3000               	movlw	0
  8072  15D6  00D8               	movwf	___fladd@a+2
  8073  15D7  3000               	movlw	0
  8074  15D8  00D7               	movwf	___fladd@a+1
  8075  15D9  3000               	movlw	0
  8076  15DA  00D6               	movwf	___fladd@a
  8077  15DB                     l616:
  8078  15DB  0864               	movf	___fladd@bexp,w
  8079  15DC  0263               	subwf	___fladd@aexp,w
  8080  15DD  1803               	skipnc
  8081  15DE  2DE0               	goto	u3231
  8082  15DF  2DE1               	goto	u3230
  8083  15E0                     u3231:
  8084  15E0  2E25               	goto	l2406
  8085  15E1                     u3230:
  8086  15E1                     l2372:
  8087  15E1  1F62               	btfss	___fladd@signs,6
  8088  15E2  2DE4               	goto	u3241
  8089  15E3  2DE5               	goto	u3240
  8090  15E4                     u3241:
  8091  15E4  2DE9               	goto	l2376
  8092  15E5                     u3240:
  8093  15E5                     l2374:
  8094  15E5  3080               	movlw	128
  8095  15E6  00DA               	movwf	??___fladd
  8096  15E7  085A               	movf	??___fladd,w
  8097  15E8  06E2               	xorwf	___fladd@signs,f
  8098  15E9                     l2376:
  8099  15E9  0864               	movf	___fladd@bexp,w
  8100  15EA  00DA               	movwf	??___fladd
  8101  15EB  085A               	movf	??___fladd,w
  8102  15EC  00E5               	movwf	___fladd@grs
  8103  15ED                     l2378:
  8104  15ED  0863               	movf	___fladd@aexp,w
  8105  15EE  00DA               	movwf	??___fladd
  8106  15EF  085A               	movf	??___fladd,w
  8107  15F0  00E4               	movwf	___fladd@bexp
  8108  15F1                     l2380:
  8109  15F1  0865               	movf	___fladd@grs,w
  8110  15F2  00DA               	movwf	??___fladd
  8111  15F3  085A               	movf	??___fladd,w
  8112  15F4  00E3               	movwf	___fladd@aexp
  8113  15F5                     l2382:
  8114  15F5  0852               	movf	___fladd@b,w
  8115  15F6  00DA               	movwf	??___fladd
  8116  15F7  085A               	movf	??___fladd,w
  8117  15F8  00E5               	movwf	___fladd@grs
  8118  15F9                     l2384:
  8119  15F9  0856               	movf	___fladd@a,w
  8120  15FA  00DA               	movwf	??___fladd
  8121  15FB  085A               	movf	??___fladd,w
  8122  15FC  00D2               	movwf	___fladd@b
  8123  15FD                     l2386:
  8124  15FD  0865               	movf	___fladd@grs,w
  8125  15FE  00DA               	movwf	??___fladd
  8126  15FF  085A               	movf	??___fladd,w
  8127  1600  00D6               	movwf	___fladd@a
  8128  1601                     l2388:
  8129  1601  0853               	movf	___fladd@b+1,w
  8130  1602  00DA               	movwf	??___fladd
  8131  1603  085A               	movf	??___fladd,w
  8132  1604  00E5               	movwf	___fladd@grs
  8133  1605                     l2390:
  8134  1605  0857               	movf	___fladd@a+1,w
  8135  1606  00DA               	movwf	??___fladd
  8136  1607  085A               	movf	??___fladd,w
  8137  1608  00D3               	movwf	___fladd@b+1
  8138  1609                     l2392:
  8139  1609  0865               	movf	___fladd@grs,w
  8140  160A  00DA               	movwf	??___fladd
  8141  160B  085A               	movf	??___fladd,w
  8142  160C  00D7               	movwf	___fladd@a+1
  8143  160D                     l2394:
  8144  160D  0854               	movf	___fladd@b+2,w
  8145  160E  00DA               	movwf	??___fladd
  8146  160F  085A               	movf	??___fladd,w
  8147  1610  00E5               	movwf	___fladd@grs
  8148  1611                     l2396:
  8149  1611  0858               	movf	___fladd@a+2,w
  8150  1612  00DA               	movwf	??___fladd
  8151  1613  085A               	movf	??___fladd,w
  8152  1614  00D4               	movwf	___fladd@b+2
  8153  1615                     l2398:
  8154  1615  0865               	movf	___fladd@grs,w
  8155  1616  00DA               	movwf	??___fladd
  8156  1617  085A               	movf	??___fladd,w
  8157  1618  00D8               	movwf	___fladd@a+2
  8158  1619                     l2400:
  8159  1619  0855               	movf	___fladd@b+3,w
  8160  161A  00DA               	movwf	??___fladd
  8161  161B  085A               	movf	??___fladd,w
  8162  161C  00E5               	movwf	___fladd@grs
  8163  161D                     l2402:
  8164  161D  0859               	movf	___fladd@a+3,w
  8165  161E  00DA               	movwf	??___fladd
  8166  161F  085A               	movf	??___fladd,w
  8167  1620  00D5               	movwf	___fladd@b+3
  8168  1621                     l2404:
  8169  1621  0865               	movf	___fladd@grs,w
  8170  1622  00DA               	movwf	??___fladd
  8171  1623  085A               	movf	??___fladd,w
  8172  1624  00D9               	movwf	___fladd@a+3
  8173  1625                     l2406:
  8174  1625  01E5               	clrf	___fladd@grs
  8175  1626                     l2408:
  8176  1626  0863               	movf	___fladd@aexp,w
  8177  1627  00DA               	movwf	??___fladd
  8178  1628  01DB               	clrf	??___fladd+1
  8179  1629  085B               	movf	??___fladd+1,w
  8180  162A  00DD               	movwf	??___fladd+3
  8181  162B  0864               	movf	___fladd@bexp,w
  8182  162C  025A               	subwf	??___fladd,w
  8183  162D  00DC               	movwf	??___fladd+2
  8184  162E  1C03               	skipc
  8185  162F  03DD               	decf	??___fladd+3,f
  8186  1630  085D               	movf	??___fladd+3,w
  8187  1631  3A80               	xorlw	128
  8188  1632  00FF               	movwf	btemp+1
  8189  1633  3080               	movlw	128
  8190  1634  027F               	subwf	btemp+1,w
  8191  1635  1D03               	skipz
  8192  1636  2E39               	goto	u3255
  8193  1637  301A               	movlw	26
  8194  1638  025C               	subwf	??___fladd+2,w
  8195  1639                     u3255:
  8196  1639  1C03               	skipc
  8197  163A  2E3C               	goto	u3251
  8198  163B  2E3D               	goto	u3250
  8199  163C                     u3251:
  8200  163C  2E7A               	goto	l2424
  8201  163D                     u3250:
  8202  163D                     l2410:
  8203  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8204  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8205  163F  0855               	movf	___fladd@b+3,w
  8206  1640  0454               	iorwf	___fladd@b+2,w
  8207  1641  0453               	iorwf	___fladd@b+1,w
  8208  1642  0452               	iorwf	___fladd@b,w
  8209  1643  1D03               	skipz
  8210  1644  2E46               	goto	u3261
  8211  1645  2E48               	goto	u3260
  8212  1646                     u3261:
  8213  1646  3001               	movlw	1
  8214  1647  2E49               	goto	u3270
  8215  1648                     u3260:
  8216  1648  3000               	movlw	0
  8217  1649                     u3270:
  8218  1649  00DA               	movwf	??___fladd
  8219  164A  085A               	movf	??___fladd,w
  8220  164B  00E5               	movwf	___fladd@grs
  8221  164C  3000               	movlw	0
  8222  164D  00D5               	movwf	___fladd@b+3
  8223  164E  3000               	movlw	0
  8224  164F  00D4               	movwf	___fladd@b+2
  8225  1650  3000               	movlw	0
  8226  1651  00D3               	movwf	___fladd@b+1
  8227  1652  3000               	movlw	0
  8228  1653  00D2               	movwf	___fladd@b
  8229  1654  0863               	movf	___fladd@aexp,w
  8230  1655  00DA               	movwf	??___fladd
  8231  1656  085A               	movf	??___fladd,w
  8232  1657  00E4               	movwf	___fladd@bexp
  8233  1658  2E82               	goto	l620
  8234  1659                     l622:
  8235  1659  1C65               	btfss	___fladd@grs,0
  8236  165A  2E5C               	goto	u3281
  8237  165B  2E5D               	goto	u3280
  8238  165C                     u3281:
  8239  165C  2E66               	goto	l2414
  8240  165D                     u3280:
  8241  165D                     l2412:
  8242  165D  0865               	movf	___fladd@grs,w
  8243  165E  00DA               	movwf	??___fladd
  8244  165F  1003               	clrc
  8245  1660  0C5A               	rrf	??___fladd,w
  8246  1661  3801               	iorlw	1
  8247  1662  00DB               	movwf	??___fladd+1
  8248  1663  085B               	movf	??___fladd+1,w
  8249  1664  00E5               	movwf	___fladd@grs
  8250  1665  2E68               	goto	l2416
  8251  1666                     l2414:
  8252  1666  1003               	clrc
  8253  1667  0CE5               	rrf	___fladd@grs,f
  8254  1668                     l2416:
  8255  1668  1C52               	btfss	___fladd@b,0
  8256  1669  2E6B               	goto	u3291
  8257  166A  2E6C               	goto	u3290
  8258  166B                     u3291:
  8259  166B  2E6D               	goto	l2420
  8260  166C                     u3290:
  8261  166C                     l2418:
  8262  166C  17E5               	bsf	___fladd@grs,7
  8263  166D                     l2420:
  8264  166D  3001               	movlw	1
  8265  166E  00DA               	movwf	??___fladd
  8266  166F                     u3305:
  8267  166F  0D55               	rlf	___fladd@b+3,w
  8268  1670  0CD5               	rrf	___fladd@b+3,f
  8269  1671  0CD4               	rrf	___fladd@b+2,f
  8270  1672  0CD3               	rrf	___fladd@b+1,f
  8271  1673  0CD2               	rrf	___fladd@b,f
  8272  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8273  1675  2E6F               	goto	u3305
  8274  1676                     l2422:
  8275  1676  3001               	movlw	1
  8276  1677  00DA               	movwf	??___fladd
  8277  1678  085A               	movf	??___fladd,w
  8278  1679  07E4               	addwf	___fladd@bexp,f
  8279  167A                     l2424:
  8280  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8281  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8282  167C  0863               	movf	___fladd@aexp,w
  8283  167D  0264               	subwf	___fladd@bexp,w
  8284  167E  1C03               	skipc
  8285  167F  2E81               	goto	u3311
  8286  1680  2E82               	goto	u3310
  8287  1681                     u3311:
  8288  1681  2E59               	goto	l622
  8289  1682                     u3310:
  8290  1682                     l620:
  8291  1682  1B62               	btfsc	___fladd@signs,6
  8292  1683  2E85               	goto	u3321
  8293  1684  2E86               	goto	u3320
  8294  1685                     u3321:
  8295  1685  2ED1               	goto	l2450
  8296  1686                     u3320:
  8297  1686                     l2426:
  8298  1686  0864               	movf	___fladd@bexp,w
  8299  1687  1D03               	btfss	3,2
  8300  1688  2E8A               	goto	u3331
  8301  1689  2E8B               	goto	u3330
  8302  168A                     u3331:
  8303  168A  2E94               	goto	l2432
  8304  168B                     u3330:
  8305  168B                     l2428:
  8306  168B  3000               	movlw	0
  8307  168C  00D5               	movwf	?___fladd+3
  8308  168D  3000               	movlw	0
  8309  168E  00D4               	movwf	?___fladd+2
  8310  168F  3000               	movlw	0
  8311  1690  00D3               	movwf	?___fladd+1
  8312  1691  3000               	movlw	0
  8313  1692  00D2               	movwf	?___fladd
  8314  1693  2FFF               	goto	l629
  8315  1694                     l2432:
  8316  1694  0856               	movf	___fladd@a,w
  8317  1695  07D2               	addwf	___fladd@b,f
  8318  1696  0857               	movf	___fladd@a+1,w
  8319  1697  1103               	clrz
  8320  1698  1803               	skipnc
  8321  1699  3E01               	addlw	1
  8322  169A  1903               	skipnz
  8323  169B  2E9D               	goto	u3341
  8324  169C  07D3               	addwf	___fladd@b+1,f
  8325  169D                     u3341:
  8326  169D  0858               	movf	___fladd@a+2,w
  8327  169E  1103               	clrz
  8328  169F  1803               	skipnc
  8329  16A0  3E01               	addlw	1
  8330  16A1  1903               	skipnz
  8331  16A2  2EA4               	goto	u3342
  8332  16A3  07D4               	addwf	___fladd@b+2,f
  8333  16A4                     u3342:
  8334  16A4  0859               	movf	___fladd@a+3,w
  8335  16A5  1103               	clrz
  8336  16A6  1803               	skipnc
  8337  16A7  3E01               	addlw	1
  8338  16A8  1903               	skipnz
  8339  16A9  2EAB               	goto	u3343
  8340  16AA  07D5               	addwf	___fladd@b+3,f
  8341  16AB                     u3343:
  8342  16AB                     l2434:
  8343  16AB  1C55               	btfss	___fladd@b+3,0
  8344  16AC  2EAE               	goto	u3351
  8345  16AD  2EAF               	goto	u3350
  8346  16AE                     u3351:
  8347  16AE  2F85               	goto	l2484
  8348  16AF                     u3350:
  8349  16AF                     l2436:
  8350  16AF  1C65               	btfss	___fladd@grs,0
  8351  16B0  2EB2               	goto	u3361
  8352  16B1  2EB3               	goto	u3360
  8353  16B2                     u3361:
  8354  16B2  2EBC               	goto	l2440
  8355  16B3                     u3360:
  8356  16B3                     l2438:
  8357  16B3  0865               	movf	___fladd@grs,w
  8358  16B4  00DA               	movwf	??___fladd
  8359  16B5  1003               	clrc
  8360  16B6  0C5A               	rrf	??___fladd,w
  8361  16B7  3801               	iorlw	1
  8362  16B8  00DB               	movwf	??___fladd+1
  8363  16B9  085B               	movf	??___fladd+1,w
  8364  16BA  00E5               	movwf	___fladd@grs
  8365  16BB  2EBE               	goto	l2442
  8366  16BC                     l2440:
  8367  16BC  1003               	clrc
  8368  16BD  0CE5               	rrf	___fladd@grs,f
  8369  16BE                     l2442:
  8370  16BE  1C52               	btfss	___fladd@b,0
  8371  16BF  2EC1               	goto	u3371
  8372  16C0  2EC2               	goto	u3370
  8373  16C1                     u3371:
  8374  16C1  2EC3               	goto	l2446
  8375  16C2                     u3370:
  8376  16C2                     l2444:
  8377  16C2  17E5               	bsf	___fladd@grs,7
  8378  16C3                     l2446:
  8379  16C3  3001               	movlw	1
  8380  16C4  00DA               	movwf	??___fladd
  8381  16C5                     u3385:
  8382  16C5  0D55               	rlf	___fladd@b+3,w
  8383  16C6  0CD5               	rrf	___fladd@b+3,f
  8384  16C7  0CD4               	rrf	___fladd@b+2,f
  8385  16C8  0CD3               	rrf	___fladd@b+1,f
  8386  16C9  0CD2               	rrf	___fladd@b,f
  8387  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8388  16CB  2EC5               	goto	u3385
  8389  16CC                     l2448:
  8390  16CC  3001               	movlw	1
  8391  16CD  00DA               	movwf	??___fladd
  8392  16CE  085A               	movf	??___fladd,w
  8393  16CF  07E4               	addwf	___fladd@bexp,f
  8394  16D0  2F85               	goto	l2484
  8395  16D1                     l2450:
  8396  16D1  0855               	movf	___fladd@b+3,w
  8397  16D2  3A80               	xorlw	128
  8398  16D3  00FF               	movwf	btemp+1
  8399  16D4  0859               	movf	___fladd@a+3,w
  8400  16D5  3A80               	xorlw	128
  8401  16D6  027F               	subwf	btemp+1,w
  8402  16D7  1D03               	skipz
  8403  16D8  2EE3               	goto	u3393
  8404  16D9  0858               	movf	___fladd@a+2,w
  8405  16DA  0254               	subwf	___fladd@b+2,w
  8406  16DB  1D03               	skipz
  8407  16DC  2EE3               	goto	u3393
  8408  16DD  0857               	movf	___fladd@a+1,w
  8409  16DE  0253               	subwf	___fladd@b+1,w
  8410  16DF  1D03               	skipz
  8411  16E0  2EE3               	goto	u3393
  8412  16E1  0856               	movf	___fladd@a,w
  8413  16E2  0252               	subwf	___fladd@b,w
  8414  16E3                     u3393:
  8415  16E3  1803               	skipnc
  8416  16E4  2EE6               	goto	u3391
  8417  16E5  2EE7               	goto	u3390
  8418  16E6                     u3391:
  8419  16E6  2F3F               	goto	l2460
  8420  16E7                     u3390:
  8421  16E7                     l2452:
  8422  16E7  30FF               	movlw	255
  8423  16E8  00DA               	movwf	??___fladd
  8424  16E9  30FF               	movlw	255
  8425  16EA  00DB               	movwf	??___fladd+1
  8426  16EB  30FF               	movlw	255
  8427  16EC  00DC               	movwf	??___fladd+2
  8428  16ED  30FF               	movlw	255
  8429  16EE  00DD               	movwf	??___fladd+3
  8430  16EF  0856               	movf	___fladd@a,w
  8431  16F0  00DE               	movwf	??___fladd+4
  8432  16F1  0857               	movf	___fladd@a+1,w
  8433  16F2  00DF               	movwf	??___fladd+5
  8434  16F3  0858               	movf	___fladd@a+2,w
  8435  16F4  00E0               	movwf	??___fladd+6
  8436  16F5  0859               	movf	___fladd@a+3,w
  8437  16F6  00E1               	movwf	??___fladd+7
  8438  16F7  0852               	movf	___fladd@b,w
  8439  16F8  02DE               	subwf	??___fladd+4,f
  8440  16F9  0853               	movf	___fladd@b+1,w
  8441  16FA  1C03               	skipc
  8442  16FB  0F53               	incfsz	___fladd@b+1,w
  8443  16FC  2EFE               	goto	u3401
  8444  16FD  2EFF               	goto	u3402
  8445  16FE                     u3401:
  8446  16FE  02DF               	subwf	??___fladd+5,f
  8447  16FF                     u3402:
  8448  16FF  0854               	movf	___fladd@b+2,w
  8449  1700  1C03               	skipc
  8450  1701  0F54               	incfsz	___fladd@b+2,w
  8451  1702  2F04               	goto	u3403
  8452  1703  2F05               	goto	u3404
  8453  1704                     u3403:
  8454  1704  02E0               	subwf	??___fladd+6,f
  8455  1705                     u3404:
  8456  1705  0855               	movf	___fladd@b+3,w
  8457  1706  1C03               	skipc
  8458  1707  0F55               	incfsz	___fladd@b+3,w
  8459  1708  2F0A               	goto	u3405
  8460  1709  2F0B               	goto	u3406
  8461  170A                     u3405:
  8462  170A  02E1               	subwf	??___fladd+7,f
  8463  170B                     u3406:
  8464  170B  085E               	movf	??___fladd+4,w
  8465  170C  07DA               	addwf	??___fladd,f
  8466  170D  085F               	movf	??___fladd+5,w
  8467  170E  1803               	skipnc
  8468  170F  0F5F               	incfsz	??___fladd+5,w
  8469  1710  2F12               	goto	u3410
  8470  1711  2F13               	goto	u3411
  8471  1712                     u3410:
  8472  1712  07DB               	addwf	??___fladd+1,f
  8473  1713                     u3411:
  8474  1713  0860               	movf	??___fladd+6,w
  8475  1714  1803               	skipnc
  8476  1715  0F60               	incfsz	??___fladd+6,w
  8477  1716  2F18               	goto	u3412
  8478  1717  2F19               	goto	u3413
  8479  1718                     u3412:
  8480  1718  07DC               	addwf	??___fladd+2,f
  8481  1719                     u3413:
  8482  1719  0861               	movf	??___fladd+7,w
  8483  171A  1803               	skipnc
  8484  171B  0A61               	incf	??___fladd+7,w
  8485  171C  07DD               	addwf	??___fladd+3,f
  8486  171D  085D               	movf	??___fladd+3,w
  8487  171E  00D5               	movwf	___fladd@b+3
  8488  171F  085C               	movf	??___fladd+2,w
  8489  1720  00D4               	movwf	___fladd@b+2
  8490  1721  085B               	movf	??___fladd+1,w
  8491  1722  00D3               	movwf	___fladd@b+1
  8492  1723  085A               	movf	??___fladd,w
  8493  1724  00D2               	movwf	___fladd@b
  8494  1725                     l2454:
  8495  1725  3080               	movlw	128
  8496  1726  00DA               	movwf	??___fladd
  8497  1727  085A               	movf	??___fladd,w
  8498  1728  06E2               	xorwf	___fladd@signs,f
  8499  1729  09E5               	comf	___fladd@grs,f
  8500  172A  0AE5               	incf	___fladd@grs,f
  8501  172B                     l2456:
  8502  172B  0865               	movf	___fladd@grs,w
  8503  172C  1D03               	btfss	3,2
  8504  172D  2F2F               	goto	u3421
  8505  172E  2F30               	goto	u3420
  8506  172F                     u3421:
  8507  172F  2F4D               	goto	l637
  8508  1730                     u3420:
  8509  1730                     l2458:
  8510  1730  3001               	movlw	1
  8511  1731  07D2               	addwf	___fladd@b,f
  8512  1732  3000               	movlw	0
  8513  1733  1803               	skipnc
  8514  1734  3001               	movlw	1
  8515  1735  07D3               	addwf	___fladd@b+1,f
  8516  1736  3000               	movlw	0
  8517  1737  1803               	skipnc
  8518  1738  3001               	movlw	1
  8519  1739  07D4               	addwf	___fladd@b+2,f
  8520  173A  3000               	movlw	0
  8521  173B  1803               	skipnc
  8522  173C  3001               	movlw	1
  8523  173D  07D5               	addwf	___fladd@b+3,f
  8524  173E  2F4D               	goto	l637
  8525  173F                     l2460:
  8526  173F  0856               	movf	___fladd@a,w
  8527  1740  02D2               	subwf	___fladd@b,f
  8528  1741  0857               	movf	___fladd@a+1,w
  8529  1742  1C03               	skipc
  8530  1743  0F57               	incfsz	___fladd@a+1,w
  8531  1744  02D3               	subwf	___fladd@b+1,f
  8532  1745  0858               	movf	___fladd@a+2,w
  8533  1746  1C03               	skipc
  8534  1747  0F58               	incfsz	___fladd@a+2,w
  8535  1748  02D4               	subwf	___fladd@b+2,f
  8536  1749  0859               	movf	___fladd@a+3,w
  8537  174A  1C03               	skipc
  8538  174B  0F59               	incfsz	___fladd@a+3,w
  8539  174C  02D5               	subwf	___fladd@b+3,f
  8540  174D                     l637:
  8541  174D  0855               	movf	___fladd@b+3,w
  8542  174E  0454               	iorwf	___fladd@b+2,w
  8543  174F  0453               	iorwf	___fladd@b+1,w
  8544  1750  0452               	iorwf	___fladd@b,w
  8545  1751  1D03               	skipz
  8546  1752  2F54               	goto	u3431
  8547  1753  2F55               	goto	u3430
  8548  1754                     u3431:
  8549  1754  2F81               	goto	l2482
  8550  1755                     u3430:
  8551  1755                     l2462:
  8552  1755  0865               	movf	___fladd@grs,w
  8553  1756  1D03               	btfss	3,2
  8554  1757  2F59               	goto	u3441
  8555  1758  2F5A               	goto	u3440
  8556  1759                     u3441:
  8557  1759  2F81               	goto	l2482
  8558  175A                     u3440:
  8559  175A                     l2464:
  8560  175A  3000               	movlw	0
  8561  175B  00D5               	movwf	?___fladd+3
  8562  175C  3000               	movlw	0
  8563  175D  00D4               	movwf	?___fladd+2
  8564  175E  3000               	movlw	0
  8565  175F  00D3               	movwf	?___fladd+1
  8566  1760  3000               	movlw	0
  8567  1761  00D2               	movwf	?___fladd
  8568  1762  2FFF               	goto	l629
  8569  1763                     l2468:
  8570  1763  3001               	movlw	1
  8571  1764  00DA               	movwf	??___fladd
  8572  1765                     u3455:
  8573  1765  1003               	clrc
  8574  1766  0DD2               	rlf	___fladd@b,f
  8575  1767  0DD3               	rlf	___fladd@b+1,f
  8576  1768  0DD4               	rlf	___fladd@b+2,f
  8577  1769  0DD5               	rlf	___fladd@b+3,f
  8578  176A  0BDA               	decfsz	??___fladd,f
  8579  176B  2F65               	goto	u3455
  8580  176C                     l2470:
  8581  176C  1FE5               	btfss	___fladd@grs,7
  8582  176D  2F6F               	goto	u3461
  8583  176E  2F70               	goto	u3460
  8584  176F                     u3461:
  8585  176F  2F71               	goto	l641
  8586  1770                     u3460:
  8587  1770                     l2472:
  8588  1770  1452               	bsf	___fladd@b,0
  8589  1771                     l641:
  8590  1771  1C65               	btfss	___fladd@grs,0
  8591  1772  2F74               	goto	u3471
  8592  1773  2F75               	goto	u3470
  8593  1774                     u3471:
  8594  1774  2F78               	goto	l2476
  8595  1775                     u3470:
  8596  1775                     l2474:
  8597  1775  1403               	setc
  8598  1776  0DE5               	rlf	___fladd@grs,f
  8599  1777  2F7A               	goto	l2478
  8600  1778                     l2476:
  8601  1778  1003               	clrc
  8602  1779  0DE5               	rlf	___fladd@grs,f
  8603  177A                     l2478:
  8604  177A  0864               	movf	___fladd@bexp,w
  8605  177B  1903               	btfsc	3,2
  8606  177C  2F7E               	goto	u3481
  8607  177D  2F7F               	goto	u3480
  8608  177E                     u3481:
  8609  177E  2F81               	goto	l2482
  8610  177F                     u3480:
  8611  177F                     l2480:
  8612  177F  3001               	movlw	1
  8613  1780  02E4               	subwf	___fladd@bexp,f
  8614  1781                     l2482:
  8615  1781  1FD4               	btfss	___fladd@b+2,7
  8616  1782  2F84               	goto	u3491
  8617  1783  2F85               	goto	u3490
  8618  1784                     u3491:
  8619  1784  2F63               	goto	l2468
  8620  1785                     u3490:
  8621  1785                     l2484:
  8622  1785  01E3               	clrf	___fladd@aexp
  8623  1786                     l2486:
  8624  1786  1FE5               	btfss	___fladd@grs,7
  8625  1787  2F89               	goto	u3501
  8626  1788  2F8A               	goto	u3500
  8627  1789                     u3501:
  8628  1789  2F98               	goto	l2494
  8629  178A                     u3500:
  8630  178A                     l2488:
  8631  178A  0865               	movf	___fladd@grs,w
  8632  178B  397F               	andlw	127
  8633  178C  1903               	btfsc	3,2
  8634  178D  2F8F               	goto	u3511
  8635  178E  2F90               	goto	u3510
  8636  178F                     u3511:
  8637  178F  2F93               	goto	l647
  8638  1790                     u3510:
  8639  1790                     l2490:
  8640  1790  01E3               	clrf	___fladd@aexp
  8641  1791  0AE3               	incf	___fladd@aexp,f
  8642  1792  2F98               	goto	l2494
  8643  1793                     l647:
  8644  1793  1C52               	btfss	___fladd@b,0
  8645  1794  2F96               	goto	u3521
  8646  1795  2F97               	goto	u3520
  8647  1796                     u3521:
  8648  1796  2F98               	goto	l2494
  8649  1797                     u3520:
  8650  1797  2F90               	goto	l2490
  8651  1798                     l2494:
  8652  1798  0863               	movf	___fladd@aexp,w
  8653  1799  1903               	btfsc	3,2
  8654  179A  2F9C               	goto	u3531
  8655  179B  2F9D               	goto	u3530
  8656  179C                     u3531:
  8657  179C  2FD1               	goto	l650
  8658  179D                     u3530:
  8659  179D                     l2496:
  8660  179D  3001               	movlw	1
  8661  179E  07D2               	addwf	___fladd@b,f
  8662  179F  3000               	movlw	0
  8663  17A0  1803               	skipnc
  8664  17A1  3001               	movlw	1
  8665  17A2  07D3               	addwf	___fladd@b+1,f
  8666  17A3  3000               	movlw	0
  8667  17A4  1803               	skipnc
  8668  17A5  3001               	movlw	1
  8669  17A6  07D4               	addwf	___fladd@b+2,f
  8670  17A7  3000               	movlw	0
  8671  17A8  1803               	skipnc
  8672  17A9  3001               	movlw	1
  8673  17AA  07D5               	addwf	___fladd@b+3,f
  8674  17AB                     l2498:
  8675  17AB  1C55               	btfss	___fladd@b+3,0
  8676  17AC  2FAE               	goto	u3541
  8677  17AD  2FAF               	goto	u3540
  8678  17AE                     u3541:
  8679  17AE  2FD1               	goto	l650
  8680  17AF                     u3540:
  8681  17AF                     l2500:
  8682  17AF  0852               	movf	___fladd@b,w
  8683  17B0  00DA               	movwf	??___fladd
  8684  17B1  0853               	movf	___fladd@b+1,w
  8685  17B2  00DB               	movwf	??___fladd+1
  8686  17B3  0854               	movf	___fladd@b+2,w
  8687  17B4  00DC               	movwf	??___fladd+2
  8688  17B5  0855               	movf	___fladd@b+3,w
  8689  17B6  00DD               	movwf	??___fladd+3
  8690  17B7  3001               	movlw	1
  8691  17B8  00DE               	movwf	??___fladd+4
  8692  17B9                     u3555:
  8693  17B9  0D5D               	rlf	??___fladd+3,w
  8694  17BA  0CDD               	rrf	??___fladd+3,f
  8695  17BB  0CDC               	rrf	??___fladd+2,f
  8696  17BC  0CDB               	rrf	??___fladd+1,f
  8697  17BD  0CDA               	rrf	??___fladd,f
  8698  17BE                     u3550:
  8699  17BE  0BDE               	decfsz	??___fladd+4,f
  8700  17BF  2FB9               	goto	u3555
  8701  17C0  085D               	movf	??___fladd+3,w
  8702  17C1  00D5               	movwf	___fladd@b+3
  8703  17C2  085C               	movf	??___fladd+2,w
  8704  17C3  00D4               	movwf	___fladd@b+2
  8705  17C4  085B               	movf	??___fladd+1,w
  8706  17C5  00D3               	movwf	___fladd@b+1
  8707  17C6  085A               	movf	??___fladd,w
  8708  17C7  00D2               	movwf	___fladd@b
  8709  17C8  0A64               	incf	___fladd@bexp,w
  8710  17C9  1903               	btfsc	3,2
  8711  17CA  2FCC               	goto	u3561
  8712  17CB  2FCD               	goto	u3560
  8713  17CC                     u3561:
  8714  17CC  2FD1               	goto	l650
  8715  17CD                     u3560:
  8716  17CD                     l2502:
  8717  17CD  3001               	movlw	1
  8718  17CE  00DA               	movwf	??___fladd
  8719  17CF  085A               	movf	??___fladd,w
  8720  17D0  07E4               	addwf	___fladd@bexp,f
  8721  17D1                     l650:
  8722  17D1  0A64               	incf	___fladd@bexp,w
  8723  17D2  1903               	btfsc	3,2
  8724  17D3  2FD5               	goto	u3571
  8725  17D4  2FD6               	goto	u3570
  8726  17D5                     u3571:
  8727  17D5  2FDB               	goto	l2506
  8728  17D6                     u3570:
  8729  17D6                     l2504:
  8730  17D6  0864               	movf	___fladd@bexp,w
  8731  17D7  1D03               	btfss	3,2
  8732  17D8  2FDA               	goto	u3581
  8733  17D9  2FDB               	goto	u3580
  8734  17DA                     u3581:
  8735  17DA  2FE9               	goto	l2512
  8736  17DB                     u3580:
  8737  17DB                     l2506:
  8738  17DB  3000               	movlw	0
  8739  17DC  00D5               	movwf	___fladd@b+3
  8740  17DD  3000               	movlw	0
  8741  17DE  00D4               	movwf	___fladd@b+2
  8742  17DF  3000               	movlw	0
  8743  17E0  00D3               	movwf	___fladd@b+1
  8744  17E1  3000               	movlw	0
  8745  17E2  00D2               	movwf	___fladd@b
  8746  17E3                     l2508:
  8747  17E3  0864               	movf	___fladd@bexp,w
  8748  17E4  1D03               	btfss	3,2
  8749  17E5  2FE7               	goto	u3591
  8750  17E6  2FE8               	goto	u3590
  8751  17E7                     u3591:
  8752  17E7  2FE9               	goto	l2512
  8753  17E8                     u3590:
  8754  17E8                     l2510:
  8755  17E8  01E2               	clrf	___fladd@signs
  8756  17E9                     l2512:
  8757  17E9  1C64               	btfss	___fladd@bexp,0
  8758  17EA  2FEC               	goto	u3601
  8759  17EB  2FED               	goto	u3600
  8760  17EC                     u3601:
  8761  17EC  2FEF               	goto	l2516
  8762  17ED                     u3600:
  8763  17ED                     l2514:
  8764  17ED  17D4               	bsf	___fladd@b+2,7
  8765  17EE  2FF3               	goto	l658
  8766  17EF                     l2516:
  8767  17EF  307F               	movlw	127
  8768  17F0  00DA               	movwf	??___fladd
  8769  17F1  085A               	movf	??___fladd,w
  8770  17F2  05D4               	andwf	___fladd@b+2,f
  8771  17F3                     l658:
  8772  17F3  0864               	movf	___fladd@bexp,w
  8773  17F4  00DA               	movwf	??___fladd
  8774  17F5  1003               	clrc
  8775  17F6  0C5A               	rrf	??___fladd,w
  8776  17F7  00DB               	movwf	??___fladd+1
  8777  17F8  085B               	movf	??___fladd+1,w
  8778  17F9  00D5               	movwf	___fladd@b+3
  8779  17FA                     l2518:
  8780  17FA  1FE2               	btfss	___fladd@signs,7
  8781  17FB  2FFD               	goto	u3611
  8782  17FC  2FFE               	goto	u3610
  8783  17FD                     u3611:
  8784  17FD  2FFF               	goto	l659
  8785  17FE                     u3610:
  8786  17FE                     l2520:
  8787  17FE  17D5               	bsf	___fladd@b+3,7
  8788  17FF                     l659:
  8789  17FF                     l629:
  8790  17FF  0008               	return
  8791  1800                     __end_of___fladd:
  8792                           
  8793                           	psect	text19
  8794  1CA3                     __ptext19:	
  8795 ;; *************** function ___flneg *****************
  8796 ;; Defined at:
  8797 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  f1              4    0[COMMON] unsigned char 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  4    0[COMMON] unsigned char 
  8804 ;; Registers used:
  8805 ;;		wreg
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8811 ;;      Params:         4       0       0       0       0
  8812 ;;      Locals:         0       0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0
  8814 ;;      Totals:         4       0       0       0       0
  8815 ;;Total ram usage:        4 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_sprintf
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824  1CA3                     ___flneg:	
  8825                           ;psect for function ___flneg
  8826                           
  8827  1CA3                     l2954:	
  8828                           ;incstack = 0
  8829                           ; Regs used in ___flneg: [wreg]
  8830                           
  8831  1CA3  0873               	movf	___flneg@f1+3,w
  8832  1CA4  0472               	iorwf	___flneg@f1+2,w
  8833  1CA5  0471               	iorwf	___flneg@f1+1,w
  8834  1CA6  0470               	iorwf	___flneg@f1,w
  8835  1CA7  1903               	skipnz
  8836  1CA8  2CAA               	goto	u4771
  8837  1CA9  2CAB               	goto	u4770
  8838  1CAA                     u4771:
  8839  1CAA  2CAD               	goto	l2958
  8840  1CAB                     u4770:
  8841  1CAB                     l2956:
  8842  1CAB  3080               	movlw	128
  8843  1CAC  06F3               	xorwf	___flneg@f1+3,f
  8844  1CAD                     l2958:
  8845  1CAD                     l488:
  8846  1CAD  0008               	return
  8847  1CAE                     __end_of___flneg:
  8848                           
  8849                           	psect	text20
  8850  109A                     __ptext20:	
  8851 ;; *************** function ___flge *****************
  8852 ;; Defined at:
  8853 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;  ff1             4    0[COMMON] unsigned char 
  8856 ;;  ff2             4    4[COMMON] unsigned char 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;		None               void
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8868 ;;      Params:         8       0       0       0       0
  8869 ;;      Locals:         0       0       0       0       0
  8870 ;;      Temps:          4       0       0       0       0
  8871 ;;      Totals:        12       0       0       0       0
  8872 ;;Total ram usage:       12 bytes
  8873 ;; Hardware stack levels used: 1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_sprintf
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881  109A                     ___flge:	
  8882                           ;psect for function ___flge
  8883                           
  8884  109A                     l2934:	
  8885                           ;incstack = 0
  8886                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8887                           
  8888  109A  3000               	movlw	0
  8889  109B  0570               	andwf	___flge@ff1,w
  8890  109C  00F8               	movwf	??___flge
  8891  109D  3000               	movlw	0
  8892  109E  0571               	andwf	___flge@ff1+1,w
  8893  109F  00F9               	movwf	??___flge+1
  8894  10A0  3080               	movlw	128
  8895  10A1  0572               	andwf	___flge@ff1+2,w
  8896  10A2  00FA               	movwf	??___flge+2
  8897  10A3  307F               	movlw	127
  8898  10A4  0573               	andwf	___flge@ff1+3,w
  8899  10A5  00FB               	movwf	??___flge+3
  8900  10A6  087B               	movf	??___flge+3,w
  8901  10A7  047A               	iorwf	??___flge+2,w
  8902  10A8  0479               	iorwf	??___flge+1,w
  8903  10A9  0478               	iorwf	??___flge,w
  8904  10AA  1D03               	skipz
  8905  10AB  28AD               	goto	u4701
  8906  10AC  28AE               	goto	u4700
  8907  10AD                     u4701:
  8908  10AD  28B6               	goto	l480
  8909  10AE                     u4700:
  8910  10AE                     l2936:
  8911  10AE  3000               	movlw	0
  8912  10AF  00F3               	movwf	___flge@ff1+3
  8913  10B0  3000               	movlw	0
  8914  10B1  00F2               	movwf	___flge@ff1+2
  8915  10B2  3000               	movlw	0
  8916  10B3  00F1               	movwf	___flge@ff1+1
  8917  10B4  3000               	movlw	0
  8918  10B5  00F0               	movwf	___flge@ff1
  8919  10B6                     l480:
  8920  10B6  3000               	movlw	0
  8921  10B7  0574               	andwf	___flge@ff2,w
  8922  10B8  00F8               	movwf	??___flge
  8923  10B9  3000               	movlw	0
  8924  10BA  0575               	andwf	___flge@ff2+1,w
  8925  10BB  00F9               	movwf	??___flge+1
  8926  10BC  3080               	movlw	128
  8927  10BD  0576               	andwf	___flge@ff2+2,w
  8928  10BE  00FA               	movwf	??___flge+2
  8929  10BF  307F               	movlw	127
  8930  10C0  0577               	andwf	___flge@ff2+3,w
  8931  10C1  00FB               	movwf	??___flge+3
  8932  10C2  087B               	movf	??___flge+3,w
  8933  10C3  047A               	iorwf	??___flge+2,w
  8934  10C4  0479               	iorwf	??___flge+1,w
  8935  10C5  0478               	iorwf	??___flge,w
  8936  10C6  1D03               	skipz
  8937  10C7  28C9               	goto	u4711
  8938  10C8  28CA               	goto	u4710
  8939  10C9                     u4711:
  8940  10C9  28D2               	goto	l2940
  8941  10CA                     u4710:
  8942  10CA                     l2938:
  8943  10CA  3000               	movlw	0
  8944  10CB  00F7               	movwf	___flge@ff2+3
  8945  10CC  3000               	movlw	0
  8946  10CD  00F6               	movwf	___flge@ff2+2
  8947  10CE  3000               	movlw	0
  8948  10CF  00F5               	movwf	___flge@ff2+1
  8949  10D0  3000               	movlw	0
  8950  10D1  00F4               	movwf	___flge@ff2
  8951  10D2                     l2940:
  8952  10D2  1FF3               	btfss	___flge@ff1+3,7
  8953  10D3  28D5               	goto	u4721
  8954  10D4  28D6               	goto	u4720
  8955  10D5                     u4721:
  8956  10D5  28FA               	goto	l2944
  8957  10D6                     u4720:
  8958  10D6                     l2942:
  8959  10D6  3000               	movlw	0
  8960  10D7  00F8               	movwf	??___flge
  8961  10D8  3000               	movlw	0
  8962  10D9  00F9               	movwf	??___flge+1
  8963  10DA  3000               	movlw	0
  8964  10DB  00FA               	movwf	??___flge+2
  8965  10DC  3080               	movlw	128
  8966  10DD  00FB               	movwf	??___flge+3
  8967  10DE  0870               	movf	___flge@ff1,w
  8968  10DF  02F8               	subwf	??___flge,f
  8969  10E0  0871               	movf	___flge@ff1+1,w
  8970  10E1  1C03               	skipc
  8971  10E2  0F71               	incfsz	___flge@ff1+1,w
  8972  10E3  28E5               	goto	u4731
  8973  10E4  28E6               	goto	u4732
  8974  10E5                     u4731:
  8975  10E5  02F9               	subwf	??___flge+1,f
  8976  10E6                     u4732:
  8977  10E6  0872               	movf	___flge@ff1+2,w
  8978  10E7  1C03               	skipc
  8979  10E8  0F72               	incfsz	___flge@ff1+2,w
  8980  10E9  28EB               	goto	u4733
  8981  10EA  28EC               	goto	u4734
  8982  10EB                     u4733:
  8983  10EB  02FA               	subwf	??___flge+2,f
  8984  10EC                     u4734:
  8985  10EC  0873               	movf	___flge@ff1+3,w
  8986  10ED  1C03               	skipc
  8987  10EE  0F73               	incfsz	___flge@ff1+3,w
  8988  10EF  28F1               	goto	u4735
  8989  10F0  28F2               	goto	u4736
  8990  10F1                     u4735:
  8991  10F1  02FB               	subwf	??___flge+3,f
  8992  10F2                     u4736:
  8993  10F2  087B               	movf	??___flge+3,w
  8994  10F3  00F3               	movwf	___flge@ff1+3
  8995  10F4  087A               	movf	??___flge+2,w
  8996  10F5  00F2               	movwf	___flge@ff1+2
  8997  10F6  0879               	movf	??___flge+1,w
  8998  10F7  00F1               	movwf	___flge@ff1+1
  8999  10F8  0878               	movf	??___flge,w
  9000  10F9  00F0               	movwf	___flge@ff1
  9001  10FA                     l2944:
  9002  10FA  1FF7               	btfss	___flge@ff2+3,7
  9003  10FB  28FD               	goto	u4741
  9004  10FC  28FE               	goto	u4740
  9005  10FD                     u4741:
  9006  10FD  2922               	goto	l483
  9007  10FE                     u4740:
  9008  10FE                     l2946:
  9009  10FE  3000               	movlw	0
  9010  10FF  00F8               	movwf	??___flge
  9011  1100  3000               	movlw	0
  9012  1101  00F9               	movwf	??___flge+1
  9013  1102  3000               	movlw	0
  9014  1103  00FA               	movwf	??___flge+2
  9015  1104  3080               	movlw	128
  9016  1105  00FB               	movwf	??___flge+3
  9017  1106  0874               	movf	___flge@ff2,w
  9018  1107  02F8               	subwf	??___flge,f
  9019  1108  0875               	movf	___flge@ff2+1,w
  9020  1109  1C03               	skipc
  9021  110A  0F75               	incfsz	___flge@ff2+1,w
  9022  110B  290D               	goto	u4751
  9023  110C  290E               	goto	u4752
  9024  110D                     u4751:
  9025  110D  02F9               	subwf	??___flge+1,f
  9026  110E                     u4752:
  9027  110E  0876               	movf	___flge@ff2+2,w
  9028  110F  1C03               	skipc
  9029  1110  0F76               	incfsz	___flge@ff2+2,w
  9030  1111  2913               	goto	u4753
  9031  1112  2914               	goto	u4754
  9032  1113                     u4753:
  9033  1113  02FA               	subwf	??___flge+2,f
  9034  1114                     u4754:
  9035  1114  0877               	movf	___flge@ff2+3,w
  9036  1115  1C03               	skipc
  9037  1116  0F77               	incfsz	___flge@ff2+3,w
  9038  1117  2919               	goto	u4755
  9039  1118  291A               	goto	u4756
  9040  1119                     u4755:
  9041  1119  02FB               	subwf	??___flge+3,f
  9042  111A                     u4756:
  9043  111A  087B               	movf	??___flge+3,w
  9044  111B  00F7               	movwf	___flge@ff2+3
  9045  111C  087A               	movf	??___flge+2,w
  9046  111D  00F6               	movwf	___flge@ff2+2
  9047  111E  0879               	movf	??___flge+1,w
  9048  111F  00F5               	movwf	___flge@ff2+1
  9049  1120  0878               	movf	??___flge,w
  9050  1121  00F4               	movwf	___flge@ff2
  9051  1122                     l483:
  9052  1122  3080               	movlw	128
  9053  1123  06F3               	xorwf	___flge@ff1+3,f
  9054  1124  3080               	movlw	128
  9055  1125  06F7               	xorwf	___flge@ff2+3,f
  9056  1126  0877               	movf	___flge@ff2+3,w
  9057  1127  0273               	subwf	___flge@ff1+3,w
  9058  1128  1D03               	skipz
  9059  1129  2934               	goto	u4765
  9060  112A  0876               	movf	___flge@ff2+2,w
  9061  112B  0272               	subwf	___flge@ff1+2,w
  9062  112C  1D03               	skipz
  9063  112D  2934               	goto	u4765
  9064  112E  0875               	movf	___flge@ff2+1,w
  9065  112F  0271               	subwf	___flge@ff1+1,w
  9066  1130  1D03               	skipz
  9067  1131  2934               	goto	u4765
  9068  1132  0874               	movf	___flge@ff2,w
  9069  1133  0270               	subwf	___flge@ff1,w
  9070  1134                     u4765:
  9071  1134  1803               	skipnc
  9072  1135  2937               	goto	u4761
  9073  1136  2938               	goto	u4760
  9074  1137                     u4761:
  9075  1137  293A               	goto	l2950
  9076  1138                     u4760:
  9077  1138                     l2948:
  9078  1138  1003               	clrc
  9079  1139  293B               	goto	l484
  9080  113A                     l2950:
  9081  113A  1403               	setc
  9082  113B                     l484:
  9083  113B  0008               	return
  9084  113C                     __end_of___flge:
  9085                           
  9086                           	psect	text21
  9087  1EA1                     __ptext21:	
  9088 ;; *************** function ___fleq *****************
  9089 ;; Defined at:
  9090 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  ff1             4    0[COMMON] unsigned char 
  9093 ;;  ff2             4    4[COMMON] unsigned char 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;		None               void
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9105 ;;      Params:         8       0       0       0       0
  9106 ;;      Locals:         0       0       0       0       0
  9107 ;;      Temps:          4       0       0       0       0
  9108 ;;      Totals:        12       0       0       0       0
  9109 ;;Total ram usage:       12 bytes
  9110 ;; Hardware stack levels used: 1
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_sprintf
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118  1EA1                     ___fleq:	
  9119                           ;psect for function ___fleq
  9120                           
  9121  1EA1                     l2922:	
  9122                           ;incstack = 0
  9123                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9124                           
  9125  1EA1  3000               	movlw	0
  9126  1EA2  0570               	andwf	___fleq@ff1,w
  9127  1EA3  00F8               	movwf	??___fleq
  9128  1EA4  3000               	movlw	0
  9129  1EA5  0571               	andwf	___fleq@ff1+1,w
  9130  1EA6  00F9               	movwf	??___fleq+1
  9131  1EA7  3080               	movlw	128
  9132  1EA8  0572               	andwf	___fleq@ff1+2,w
  9133  1EA9  00FA               	movwf	??___fleq+2
  9134  1EAA  307F               	movlw	127
  9135  1EAB  0573               	andwf	___fleq@ff1+3,w
  9136  1EAC  00FB               	movwf	??___fleq+3
  9137  1EAD  087B               	movf	??___fleq+3,w
  9138  1EAE  047A               	iorwf	??___fleq+2,w
  9139  1EAF  0479               	iorwf	??___fleq+1,w
  9140  1EB0  0478               	iorwf	??___fleq,w
  9141  1EB1  1D03               	skipz
  9142  1EB2  2EB4               	goto	u4671
  9143  1EB3  2EB5               	goto	u4670
  9144  1EB4                     u4671:
  9145  1EB4  2EBD               	goto	l475
  9146  1EB5                     u4670:
  9147  1EB5                     l2924:
  9148  1EB5  3000               	movlw	0
  9149  1EB6  00F3               	movwf	___fleq@ff1+3
  9150  1EB7  3000               	movlw	0
  9151  1EB8  00F2               	movwf	___fleq@ff1+2
  9152  1EB9  3000               	movlw	0
  9153  1EBA  00F1               	movwf	___fleq@ff1+1
  9154  1EBB  3000               	movlw	0
  9155  1EBC  00F0               	movwf	___fleq@ff1
  9156  1EBD                     l475:
  9157  1EBD  3000               	movlw	0
  9158  1EBE  0574               	andwf	___fleq@ff2,w
  9159  1EBF  00F8               	movwf	??___fleq
  9160  1EC0  3000               	movlw	0
  9161  1EC1  0575               	andwf	___fleq@ff2+1,w
  9162  1EC2  00F9               	movwf	??___fleq+1
  9163  1EC3  3080               	movlw	128
  9164  1EC4  0576               	andwf	___fleq@ff2+2,w
  9165  1EC5  00FA               	movwf	??___fleq+2
  9166  1EC6  307F               	movlw	127
  9167  1EC7  0577               	andwf	___fleq@ff2+3,w
  9168  1EC8  00FB               	movwf	??___fleq+3
  9169  1EC9  087B               	movf	??___fleq+3,w
  9170  1ECA  047A               	iorwf	??___fleq+2,w
  9171  1ECB  0479               	iorwf	??___fleq+1,w
  9172  1ECC  0478               	iorwf	??___fleq,w
  9173  1ECD  1D03               	skipz
  9174  1ECE  2ED0               	goto	u4681
  9175  1ECF  2ED1               	goto	u4680
  9176  1ED0                     u4681:
  9177  1ED0  2ED9               	goto	l476
  9178  1ED1                     u4680:
  9179  1ED1                     l2926:
  9180  1ED1  3000               	movlw	0
  9181  1ED2  00F7               	movwf	___fleq@ff2+3
  9182  1ED3  3000               	movlw	0
  9183  1ED4  00F6               	movwf	___fleq@ff2+2
  9184  1ED5  3000               	movlw	0
  9185  1ED6  00F5               	movwf	___fleq@ff2+1
  9186  1ED7  3000               	movlw	0
  9187  1ED8  00F4               	movwf	___fleq@ff2
  9188  1ED9                     l476:
  9189  1ED9  0877               	movf	___fleq@ff2+3,w
  9190  1EDA  0673               	xorwf	___fleq@ff1+3,w
  9191  1EDB  1D03               	skipz
  9192  1EDC  2EE7               	goto	u4695
  9193  1EDD  0876               	movf	___fleq@ff2+2,w
  9194  1EDE  0672               	xorwf	___fleq@ff1+2,w
  9195  1EDF  1D03               	skipz
  9196  1EE0  2EE7               	goto	u4695
  9197  1EE1  0875               	movf	___fleq@ff2+1,w
  9198  1EE2  0671               	xorwf	___fleq@ff1+1,w
  9199  1EE3  1D03               	skipz
  9200  1EE4  2EE7               	goto	u4695
  9201  1EE5  0874               	movf	___fleq@ff2,w
  9202  1EE6  0670               	xorwf	___fleq@ff1,w
  9203  1EE7                     u4695:
  9204  1EE7  1903               	skipnz
  9205  1EE8  2EEA               	goto	u4691
  9206  1EE9  2EEB               	goto	u4690
  9207  1EEA                     u4691:
  9208  1EEA  2EED               	goto	l2930
  9209  1EEB                     u4690:
  9210  1EEB                     l2928:
  9211  1EEB  1003               	clrc
  9212  1EEC  2EEE               	goto	l477
  9213  1EED                     l2930:
  9214  1EED  1403               	setc
  9215  1EEE                     l477:
  9216  1EEE  0008               	return
  9217  1EEF                     __end_of___fleq:
  9218                           
  9219                           	psect	text22
  9220  1CAE                     __ptext22:	
  9221 ;; *************** function _WriteLCDLine1 *****************
  9222 ;; Defined at:
  9223 ;;		line 84 in file "../../LCD.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  s               1    wreg     PTR const unsigned char 
  9226 ;;		 -> main@string(25), 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  s               1    6[COMMON] PTR const unsigned char 
  9229 ;;		 -> main@string(25), 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9239 ;;      Params:         0       0       0       0       0
  9240 ;;      Locals:         1       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0
  9242 ;;      Totals:         1       0       0       0       0
  9243 ;;Total ram usage:        1 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; Hardware stack levels required when called: 2
  9246 ;; This function calls:
  9247 ;;		_WriteStringToLCD
  9248 ;;		_lcdcmd
  9249 ;; This function is called by:
  9250 ;;		_main
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254  1CAE                     _WriteLCDLine1:	
  9255                           ;psect for function _WriteLCDLine1
  9256                           
  9257                           
  9258                           ;incstack = 0
  9259                           ; Regs used in _WriteLCDLine1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9260                           ;WriteLCDLine1@s stored from wreg
  9261  1CAE  00F6               	movwf	WriteLCDLine1@s
  9262  1CAF                     l3110:
  9263                           
  9264                           ;../../LCD.c: 84: void WriteLCDLine1(const char *s);../../LCD.c: 85: {;../../LCD.c: 86: 
      +                             lcdcmd(0x80);
  9265  1CAF  3080               	movlw	128
  9266  1CB0  160A  158A  2566  160A  158A  	fcall	_lcdcmd
  9267  1CB5                     l3112:
  9268                           
  9269                           ;../../LCD.c: 87:    WriteStringToLCD(s);
  9270  1CB5  0876               	movf	WriteLCDLine1@s,w
  9271  1CB6  160A  158A  24CE  160A  158A  	fcall	_WriteStringToLCD
  9272  1CBB                     l67:
  9273  1CBB  0008               	return
  9274  1CBC                     __end_of_WriteLCDLine1:
  9275                           
  9276                           	psect	text23
  9277  1CCE                     __ptext23:	
  9278 ;; *************** function _WriteStringToLCD *****************
  9279 ;; Defined at:
  9280 ;;		line 63 in file "../../LCD.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;  s               1    wreg     PTR const unsigned char 
  9283 ;;		 -> main@string(25), 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  s               1    5[COMMON] PTR const unsigned char 
  9286 ;;		 -> main@string(25), 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9296 ;;      Params:         0       0       0       0       0
  9297 ;;      Locals:         1       0       0       0       0
  9298 ;;      Temps:          1       0       0       0       0
  9299 ;;      Totals:         2       0       0       0       0
  9300 ;;Total ram usage:        2 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 1
  9303 ;; This function calls:
  9304 ;;		_lcddata
  9305 ;; This function is called by:
  9306 ;;		_WriteLCDLine1
  9307 ;;		_WriteLCDLine2
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311  1CCE                     _WriteStringToLCD:	
  9312                           ;psect for function _WriteStringToLCD
  9313                           
  9314                           
  9315                           ;incstack = 0
  9316                           ; Regs used in _WriteStringToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9317                           ;WriteStringToLCD@s stored from wreg
  9318  1CCE  00F5               	movwf	WriteStringToLCD@s
  9319  1CCF                     l2702:
  9320                           
  9321                           ;../../LCD.c: 63: void WriteStringToLCD(const char *s);../../LCD.c: 64: {;../../LCD.c: 6
      +                          5:    while(*s)
  9322  1CCF  2CDC               	goto	l2708
  9323  1CD0                     l2704:
  9324                           
  9325                           ;../../LCD.c: 66:       lcddata(*s++);
  9326  1CD0  0875               	movf	WriteStringToLCD@s,w
  9327  1CD1  0084               	movwf	4
  9328  1CD2  0800               	movf	0,w
  9329  1CD3  160A  158A  252E  160A  158A  	fcall	_lcddata
  9330  1CD8                     l2706:
  9331  1CD8  3001               	movlw	1
  9332  1CD9  00F4               	movwf	??_WriteStringToLCD
  9333  1CDA  0874               	movf	??_WriteStringToLCD,w
  9334  1CDB  07F5               	addwf	WriteStringToLCD@s,f
  9335  1CDC                     l2708:
  9336                           
  9337                           ;../../LCD.c: 65:    while(*s)
  9338  1CDC  0875               	movf	WriteStringToLCD@s,w
  9339  1CDD  0084               	movwf	4
  9340  1CDE  1383               	bcf	3,7	;select IRP bank0
  9341  1CDF  0800               	movf	0,w
  9342  1CE0  1D03               	btfss	3,2
  9343  1CE1  2CE3               	goto	u4021
  9344  1CE2  2CE4               	goto	u4020
  9345  1CE3                     u4021:
  9346  1CE3  2CD0               	goto	l2704
  9347  1CE4                     u4020:
  9348  1CE4                     l58:
  9349  1CE4  0008               	return
  9350  1CE5                     __end_of_WriteStringToLCD:
  9351                           
  9352                           	psect	text24
  9353  1D2E                     __ptext24:	
  9354 ;; *************** function _lcddata *****************
  9355 ;; Defined at:
  9356 ;;		line 25 in file "../../LCD.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  value           1    wreg     unsigned char 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  value           1    2[COMMON] unsigned char 
  9361 ;;  dta             1    3[COMMON] unsigned char 
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9371 ;;      Params:         0       0       0       0       0
  9372 ;;      Locals:         2       0       0       0       0
  9373 ;;      Temps:          2       0       0       0       0
  9374 ;;      Totals:         4       0       0       0       0
  9375 ;;Total ram usage:        4 bytes
  9376 ;; Hardware stack levels used: 1
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_WriteStringToLCD
  9381 ;;		_LCD_Char_build
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385  1D2E                     _lcddata:	
  9386                           ;psect for function _lcddata
  9387                           
  9388                           
  9389                           ;incstack = 0
  9390                           ; Regs used in _lcddata: [wreg+status,2+status,0]
  9391                           ;lcddata@value stored from wreg
  9392  1D2E  00F2               	movwf	lcddata@value
  9393  1D2F                     l2170:
  9394                           
  9395                           ;../../LCD.c: 25: void lcddata(unsigned char value);../../LCD.c: 26: {;../../LCD.c: 27: 
      +                          unsigned char dta;;../../LCD.c: 28: dta = (value & 0xF0);
  9396  1D2F  0872               	movf	lcddata@value,w
  9397  1D30  39F0               	andlw	240
  9398  1D31  00F0               	movwf	??_lcddata
  9399  1D32  0870               	movf	??_lcddata,w
  9400  1D33  00F3               	movwf	lcddata@dta
  9401  1D34                     l2172:
  9402                           
  9403                           ;../../LCD.c: 29: PORTB =dta;
  9404  1D34  0873               	movf	lcddata@dta,w
  9405  1D35  1283               	bcf	3,5	;RP0=0, select bank0
  9406  1D36  1303               	bcf	3,6	;RP1=0, select bank0
  9407  1D37  0086               	movwf	6	;volatile
  9408  1D38                     l2174:
  9409                           
  9410                           ;../../LCD.c: 30: PORTBbits.RB1=1;
  9411  1D38  1486               	bsf	6,1	;volatile
  9412  1D39                     l2176:
  9413                           
  9414                           ;../../LCD.c: 31: PORTBbits.RB2=0;
  9415  1D39  1106               	bcf	6,2	;volatile
  9416  1D3A                     l2178:
  9417                           
  9418                           ;../../LCD.c: 32: PORTBbits.RB0=1;
  9419  1D3A  1406               	bsf	6,0	;volatile
  9420  1D3B                     l2180:
  9421                           
  9422                           ;../../LCD.c: 33: _delay((unsigned long)((1)*(20000000/4000.0)));
  9423  1D3B  3007               	movlw	7
  9424  1D3C  00F1               	movwf	??_lcddata+1
  9425  1D3D  307D               	movlw	125
  9426  1D3E  00F0               	movwf	??_lcddata
  9427  1D3F                     u5597:
  9428  1D3F  0BF0               	decfsz	??_lcddata,f
  9429  1D40  2D3F               	goto	u5597
  9430  1D41  0BF1               	decfsz	??_lcddata+1,f
  9431  1D42  2D3F               	goto	u5597
  9432  1D43                     l2182:
  9433                           
  9434                           ;../../LCD.c: 34: PORTBbits.RB0=0;
  9435  1D43  1283               	bcf	3,5	;RP0=0, select bank0
  9436  1D44  1303               	bcf	3,6	;RP1=0, select bank0
  9437  1D45  1006               	bcf	6,0	;volatile
  9438  1D46                     l2184:
  9439                           
  9440                           ;../../LCD.c: 36: dta= ((value<<4) & 0xF0);
  9441  1D46  0872               	movf	lcddata@value,w
  9442  1D47  00F0               	movwf	??_lcddata
  9443  1D48  3003               	movlw	3
  9444  1D49                     u2835:
  9445  1D49  1003               	clrc
  9446  1D4A  0DF0               	rlf	??_lcddata,f
  9447  1D4B  3EFF               	addlw	-1
  9448  1D4C  1D03               	skipz
  9449  1D4D  2D49               	goto	u2835
  9450  1D4E  1003               	clrc
  9451  1D4F  0D70               	rlf	??_lcddata,w
  9452  1D50  39F0               	andlw	240
  9453  1D51  00F1               	movwf	??_lcddata+1
  9454  1D52  0871               	movf	??_lcddata+1,w
  9455  1D53  00F3               	movwf	lcddata@dta
  9456  1D54                     l2186:
  9457                           
  9458                           ;../../LCD.c: 37: PORTB =dta;
  9459  1D54  0873               	movf	lcddata@dta,w
  9460  1D55  0086               	movwf	6	;volatile
  9461  1D56                     l2188:
  9462                           
  9463                           ;../../LCD.c: 38: PORTBbits.RB1=1;
  9464  1D56  1486               	bsf	6,1	;volatile
  9465  1D57                     l2190:
  9466                           
  9467                           ;../../LCD.c: 39: PORTBbits.RB2=0;
  9468  1D57  1106               	bcf	6,2	;volatile
  9469  1D58                     l2192:
  9470                           
  9471                           ;../../LCD.c: 40: PORTBbits.RB0=1;
  9472  1D58  1406               	bsf	6,0	;volatile
  9473  1D59                     l2194:
  9474                           
  9475                           ;../../LCD.c: 41: _delay((unsigned long)((10)*(20000000/4000.0)));
  9476  1D59  3041               	movlw	65
  9477  1D5A  00F1               	movwf	??_lcddata+1
  9478  1D5B  30EE               	movlw	238
  9479  1D5C  00F0               	movwf	??_lcddata
  9480  1D5D                     u5607:
  9481  1D5D  0BF0               	decfsz	??_lcddata,f
  9482  1D5E  2D5D               	goto	u5607
  9483  1D5F  0BF1               	decfsz	??_lcddata+1,f
  9484  1D60  2D5D               	goto	u5607
  9485  1D61  0000               	nop
  9486  1D62                     l2196:
  9487                           
  9488                           ;../../LCD.c: 42: PORTBbits.RB0=0;
  9489  1D62  1283               	bcf	3,5	;RP0=0, select bank0
  9490  1D63  1303               	bcf	3,6	;RP1=0, select bank0
  9491  1D64  1006               	bcf	6,0	;volatile
  9492  1D65                     l49:
  9493  1D65  0008               	return
  9494  1D66                     __end_of_lcddata:
  9495                           
  9496                           	psect	text25
  9497  1E57                     __ptext25:	
  9498 ;; *************** function _Read_adc *****************
  9499 ;; Defined at:
  9500 ;;		line 27 in file "../../Functions.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  adc_paramete    1    wreg     unsigned char 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  adc_paramete    1    6[BANK0 ] unsigned char 
  9505 ;;  i               2    9[BANK0 ] int 
  9506 ;;  sum             2    7[BANK0 ] int 
  9507 ;;  sample          2    4[BANK0 ] int 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  2    0[BANK0 ] unsigned int 
  9510 ;; Registers used:
  9511 ;;		wreg, status,2, status,0, pclath, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9517 ;;      Params:         0       2       0       0       0
  9518 ;;      Locals:         0       7       0       0       0
  9519 ;;      Temps:          0       2       0       0       0
  9520 ;;      Totals:         0      11       0       0       0
  9521 ;;Total ram usage:       11 bytes
  9522 ;; Hardware stack levels used: 1
  9523 ;; Hardware stack levels required when called: 1
  9524 ;; This function calls:
  9525 ;;		_GetADCValue
  9526 ;;		___lwdiv
  9527 ;; This function is called by:
  9528 ;;		_main
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532  1E57                     _Read_adc:	
  9533                           ;psect for function _Read_adc
  9534                           
  9535                           
  9536                           ;incstack = 0
  9537                           ; Regs used in _Read_adc: [wreg+status,2+status,0+pclath+cstack]
  9538                           ;Read_adc@adc_parameter stored from wreg
  9539  1E57  1283               	bcf	3,5	;RP0=0, select bank0
  9540  1E58  1303               	bcf	3,6	;RP1=0, select bank0
  9541  1E59  00A6               	movwf	Read_adc@adc_parameter
  9542  1E5A                     l3070:
  9543                           
  9544                           ;../../Functions.c: 27: unsigned int Read_adc(unsigned char adc_parameter);../../Functio
      +                          ns.c: 28: {;../../Functions.c: 30:   int sum = 0;
  9545  1E5A  01A7               	clrf	Read_adc@sum
  9546  1E5B  01A8               	clrf	Read_adc@sum+1
  9547                           
  9548                           ;../../Functions.c: 31:   int sample ;;../../Functions.c: 32:   for (int i=0; i<AVG_NUM;
      +                           i++)
  9549  1E5C  01A9               	clrf	Read_adc@i
  9550  1E5D  01AA               	clrf	Read_adc@i+1
  9551  1E5E  2E84               	goto	l3080
  9552  1E5F                     l3072:
  9553                           
  9554                           ;../../Functions.c: 33:   {;../../Functions.c: 34:     sample = GetADCValue(adc_paramete
      +                          r);
  9555  1E5F  0826               	movf	Read_adc@adc_parameter,w
  9556  1E60  160A  158A  259F  160A  158A  	fcall	_GetADCValue
  9557  1E65  0871               	movf	?_GetADCValue+1,w
  9558  1E66  1283               	bcf	3,5	;RP0=0, select bank0
  9559  1E67  1303               	bcf	3,6	;RP1=0, select bank0
  9560  1E68  00A5               	movwf	Read_adc@sample+1
  9561  1E69  0870               	movf	?_GetADCValue,w
  9562  1E6A  00A4               	movwf	Read_adc@sample
  9563  1E6B                     l3074:
  9564                           
  9565                           ;../../Functions.c: 35:     sum += sample;
  9566  1E6B  0824               	movf	Read_adc@sample,w
  9567  1E6C  07A7               	addwf	Read_adc@sum,f
  9568  1E6D  1803               	skipnc
  9569  1E6E  0AA8               	incf	Read_adc@sum+1,f
  9570  1E6F  0825               	movf	Read_adc@sample+1,w
  9571  1E70  07A8               	addwf	Read_adc@sum+1,f
  9572  1E71                     l3076:
  9573                           
  9574                           ;../../Functions.c: 36:     _delay((unsigned long)((5)*(20000000/4000.0)));
  9575  1E71  3021               	movlw	33
  9576  1E72  1283               	bcf	3,5	;RP0=0, select bank0
  9577  1E73  1303               	bcf	3,6	;RP1=0, select bank0
  9578  1E74  00A3               	movwf	??_Read_adc+1
  9579  1E75  3075               	movlw	117
  9580  1E76  00A2               	movwf	??_Read_adc
  9581  1E77                     u5617:
  9582  1E77  0BA2               	decfsz	??_Read_adc,f
  9583  1E78  2E77               	goto	u5617
  9584  1E79  0BA3               	decfsz	??_Read_adc+1,f
  9585  1E7A  2E77               	goto	u5617
  9586  1E7B  2E7C               	nop2
  9587  1E7C                     l3078:
  9588                           
  9589                           ;../../Functions.c: 37:   }
  9590  1E7C  3001               	movlw	1
  9591  1E7D  1283               	bcf	3,5	;RP0=0, select bank0
  9592  1E7E  1303               	bcf	3,6	;RP1=0, select bank0
  9593  1E7F  07A9               	addwf	Read_adc@i,f
  9594  1E80  1803               	skipnc
  9595  1E81  0AAA               	incf	Read_adc@i+1,f
  9596  1E82  3000               	movlw	0
  9597  1E83  07AA               	addwf	Read_adc@i+1,f
  9598  1E84                     l3080:
  9599  1E84  3000               	movlw	0
  9600  1E85  022A               	subwf	Read_adc@i+1,w
  9601  1E86  300A               	movlw	10
  9602  1E87  1903               	skipnz
  9603  1E88  0229               	subwf	Read_adc@i,w
  9604  1E89  1C03               	skipc
  9605  1E8A  2E8C               	goto	u5081
  9606  1E8B  2E8D               	goto	u5080
  9607  1E8C                     u5081:
  9608  1E8C  2E5F               	goto	l3072
  9609  1E8D                     u5080:
  9610  1E8D                     l3082:
  9611  1E8D  300A               	movlw	10
  9612  1E8E  00F6               	movwf	___lwdiv@divisor
  9613  1E8F  3000               	movlw	0
  9614  1E90  00F7               	movwf	___lwdiv@divisor+1
  9615  1E91  0828               	movf	Read_adc@sum+1,w
  9616  1E92  00F9               	movwf	___lwdiv@dividend+1
  9617  1E93  0827               	movf	Read_adc@sum,w
  9618  1E94  00F8               	movwf	___lwdiv@dividend
  9619  1E95  160A  158A  2613  160A  158A  	fcall	___lwdiv
  9620  1E9A  0877               	movf	?___lwdiv+1,w
  9621  1E9B  1283               	bcf	3,5	;RP0=0, select bank0
  9622  1E9C  1303               	bcf	3,6	;RP1=0, select bank0
  9623  1E9D  00A1               	movwf	?_Read_adc+1
  9624  1E9E  0876               	movf	?___lwdiv,w
  9625  1E9F  00A0               	movwf	?_Read_adc
  9626  1EA0                     l33:
  9627  1EA0  0008               	return
  9628  1EA1                     __end_of_Read_adc:
  9629                           
  9630                           	psect	text26
  9631  1E13                     __ptext26:	
  9632 ;; *************** function ___lwdiv *****************
  9633 ;; Defined at:
  9634 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;  divisor         2    6[COMMON] unsigned int 
  9637 ;;  dividend        2    8[COMMON] unsigned int 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  quotient        2   11[COMMON] unsigned int 
  9640 ;;  counter         1   13[COMMON] unsigned char 
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  2    6[COMMON] unsigned int 
  9643 ;; Registers used:
  9644 ;;		wreg, status,2, status,0
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9650 ;;      Params:         4       0       0       0       0
  9651 ;;      Locals:         3       0       0       0       0
  9652 ;;      Temps:          1       0       0       0       0
  9653 ;;      Totals:         8       0       0       0       0
  9654 ;;Total ram usage:        8 bytes
  9655 ;; Hardware stack levels used: 1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_Read_adc
  9660 ;;		_fround
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664  1E13                     ___lwdiv:	
  9665                           ;psect for function ___lwdiv
  9666                           
  9667  1E13                     l2280:	
  9668                           ;incstack = 0
  9669                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9670                           
  9671  1E13  01FB               	clrf	___lwdiv@quotient
  9672  1E14  01FC               	clrf	___lwdiv@quotient+1
  9673  1E15                     l2282:
  9674  1E15  0876               	movf	___lwdiv@divisor,w
  9675  1E16  0477               	iorwf	___lwdiv@divisor+1,w
  9676  1E17  1903               	btfsc	3,2
  9677  1E18  2E1A               	goto	u3031
  9678  1E19  2E1B               	goto	u3030
  9679  1E1A                     u3031:
  9680  1E1A  2E52               	goto	l2302
  9681  1E1B                     u3030:
  9682  1E1B                     l2284:
  9683  1E1B  01FD               	clrf	___lwdiv@counter
  9684  1E1C  0AFD               	incf	___lwdiv@counter,f
  9685  1E1D  2E29               	goto	l2290
  9686  1E1E                     l2286:
  9687  1E1E  3001               	movlw	1
  9688  1E1F                     u3045:
  9689  1E1F  1003               	clrc
  9690  1E20  0DF6               	rlf	___lwdiv@divisor,f
  9691  1E21  0DF7               	rlf	___lwdiv@divisor+1,f
  9692  1E22  3EFF               	addlw	-1
  9693  1E23  1D03               	skipz
  9694  1E24  2E1F               	goto	u3045
  9695  1E25                     l2288:
  9696  1E25  3001               	movlw	1
  9697  1E26  00FA               	movwf	??___lwdiv
  9698  1E27  087A               	movf	??___lwdiv,w
  9699  1E28  07FD               	addwf	___lwdiv@counter,f
  9700  1E29                     l2290:
  9701  1E29  1FF7               	btfss	___lwdiv@divisor+1,7
  9702  1E2A  2E2C               	goto	u3051
  9703  1E2B  2E2D               	goto	u3050
  9704  1E2C                     u3051:
  9705  1E2C  2E1E               	goto	l2286
  9706  1E2D                     u3050:
  9707  1E2D                     l2292:
  9708  1E2D  3001               	movlw	1
  9709  1E2E                     u3065:
  9710  1E2E  1003               	clrc
  9711  1E2F  0DFB               	rlf	___lwdiv@quotient,f
  9712  1E30  0DFC               	rlf	___lwdiv@quotient+1,f
  9713  1E31  3EFF               	addlw	-1
  9714  1E32  1D03               	skipz
  9715  1E33  2E2E               	goto	u3065
  9716  1E34  0877               	movf	___lwdiv@divisor+1,w
  9717  1E35  0279               	subwf	___lwdiv@dividend+1,w
  9718  1E36  1D03               	skipz
  9719  1E37  2E3A               	goto	u3075
  9720  1E38  0876               	movf	___lwdiv@divisor,w
  9721  1E39  0278               	subwf	___lwdiv@dividend,w
  9722  1E3A                     u3075:
  9723  1E3A  1C03               	skipc
  9724  1E3B  2E3D               	goto	u3071
  9725  1E3C  2E3E               	goto	u3070
  9726  1E3D                     u3071:
  9727  1E3D  2E45               	goto	l2298
  9728  1E3E                     u3070:
  9729  1E3E                     l2294:
  9730  1E3E  0876               	movf	___lwdiv@divisor,w
  9731  1E3F  02F8               	subwf	___lwdiv@dividend,f
  9732  1E40  0877               	movf	___lwdiv@divisor+1,w
  9733  1E41  1C03               	skipc
  9734  1E42  03F9               	decf	___lwdiv@dividend+1,f
  9735  1E43  02F9               	subwf	___lwdiv@dividend+1,f
  9736  1E44                     l2296:
  9737  1E44  147B               	bsf	___lwdiv@quotient,0
  9738  1E45                     l2298:
  9739  1E45  3001               	movlw	1
  9740  1E46                     u3085:
  9741  1E46  1003               	clrc
  9742  1E47  0CF7               	rrf	___lwdiv@divisor+1,f
  9743  1E48  0CF6               	rrf	___lwdiv@divisor,f
  9744  1E49  3EFF               	addlw	-1
  9745  1E4A  1D03               	skipz
  9746  1E4B  2E46               	goto	u3085
  9747  1E4C                     l2300:
  9748  1E4C  3001               	movlw	1
  9749  1E4D  02FD               	subwf	___lwdiv@counter,f
  9750  1E4E  1D03               	btfss	3,2
  9751  1E4F  2E51               	goto	u3091
  9752  1E50  2E52               	goto	u3090
  9753  1E51                     u3091:
  9754  1E51  2E2D               	goto	l2292
  9755  1E52                     u3090:
  9756  1E52                     l2302:
  9757  1E52  087C               	movf	___lwdiv@quotient+1,w
  9758  1E53  00F7               	movwf	?___lwdiv+1
  9759  1E54  087B               	movf	___lwdiv@quotient,w
  9760  1E55  00F6               	movwf	?___lwdiv
  9761  1E56                     l595:
  9762  1E56  0008               	return
  9763  1E57                     __end_of___lwdiv:
  9764                           
  9765                           	psect	text27
  9766  1D9F                     __ptext27:	
  9767 ;; *************** function _GetADCValue *****************
  9768 ;; Defined at:
  9769 ;;		line 13 in file "../../Functions.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  Channel         1    wreg     unsigned char 
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;  Channel         1    5[COMMON] unsigned char 
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  2    0[COMMON] unsigned int 
  9776 ;; Registers used:
  9777 ;;		wreg, status,2, status,0
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9783 ;;      Params:         2       0       0       0       0
  9784 ;;      Locals:         1       0       0       0       0
  9785 ;;      Temps:          3       0       0       0       0
  9786 ;;      Totals:         6       0       0       0       0
  9787 ;;Total ram usage:        6 bytes
  9788 ;; Hardware stack levels used: 1
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_Read_adc
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796  1D9F                     _GetADCValue:	
  9797                           ;psect for function _GetADCValue
  9798                           
  9799                           
  9800                           ;incstack = 0
  9801                           ; Regs used in _GetADCValue: [wreg+status,2+status,0]
  9802                           ;GetADCValue@Channel stored from wreg
  9803  1D9F  00F5               	movwf	GetADCValue@Channel
  9804  1DA0                     l2662:
  9805                           
  9806                           ;../../Functions.c: 13: unsigned int GetADCValue(unsigned char Channel);../../Functions.
      +                          c: 14: {;../../Functions.c: 15:    ADCON0 &= 0xc7;
  9807  1DA0  30C7               	movlw	199
  9808  1DA1  00F2               	movwf	??_GetADCValue
  9809  1DA2  0872               	movf	??_GetADCValue,w
  9810  1DA3  1283               	bcf	3,5	;RP0=0, select bank0
  9811  1DA4  1303               	bcf	3,6	;RP1=0, select bank0
  9812  1DA5  059F               	andwf	31,f	;volatile
  9813                           
  9814                           ;../../Functions.c: 16:    ADCON0 |= (Channel<<3);
  9815  1DA6  0875               	movf	GetADCValue@Channel,w	;volatile
  9816  1DA7  00F2               	movwf	??_GetADCValue
  9817  1DA8  3002               	movlw	2
  9818  1DA9                     u3995:
  9819  1DA9  1003               	clrc
  9820  1DAA  0DF2               	rlf	??_GetADCValue,f
  9821  1DAB  3EFF               	addlw	-1
  9822  1DAC  1D03               	skipz
  9823  1DAD  2DA9               	goto	u3995
  9824  1DAE  1003               	clrc
  9825  1DAF  0D72               	rlf	??_GetADCValue,w
  9826  1DB0  00F3               	movwf	??_GetADCValue+1
  9827  1DB1  0873               	movf	??_GetADCValue+1,w
  9828  1DB2  049F               	iorwf	31,f	;volatile
  9829  1DB3                     l2664:
  9830                           
  9831                           ;../../Functions.c: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9832  1DB3  3041               	movlw	65
  9833  1DB4  00F3               	movwf	??_GetADCValue+1
  9834  1DB5  30EE               	movlw	238
  9835  1DB6  00F2               	movwf	??_GetADCValue
  9836  1DB7                     u5627:
  9837  1DB7  0BF2               	decfsz	??_GetADCValue,f
  9838  1DB8  2DB7               	goto	u5627
  9839  1DB9  0BF3               	decfsz	??_GetADCValue+1,f
  9840  1DBA  2DB7               	goto	u5627
  9841  1DBB  0000               	nop
  9842  1DBC                     l2666:
  9843                           
  9844                           ;../../Functions.c: 20:    GO_nDONE = 1;
  9845  1DBC  1283               	bcf	3,5	;RP0=0, select bank0
  9846  1DBD  1303               	bcf	3,6	;RP1=0, select bank0
  9847  1DBE  151F               	bsf	31,2	;volatile
  9848  1DBF                     l2668:
  9849                           
  9850                           ;../../Functions.c: 21: _delay((unsigned long)((100)*(20000000/4000.0)));
  9851  1DBF  3003               	movlw	3
  9852  1DC0  00F4               	movwf	??_GetADCValue+2
  9853  1DC1  308A               	movlw	138
  9854  1DC2  00F3               	movwf	??_GetADCValue+1
  9855  1DC3  3055               	movlw	85
  9856  1DC4  00F2               	movwf	??_GetADCValue
  9857  1DC5                     u5637:
  9858  1DC5  0BF2               	decfsz	??_GetADCValue,f
  9859  1DC6  2DC5               	goto	u5637
  9860  1DC7  0BF3               	decfsz	??_GetADCValue+1,f
  9861  1DC8  2DC5               	goto	u5637
  9862  1DC9  0BF4               	decfsz	??_GetADCValue+2,f
  9863  1DCA  2DC5               	goto	u5637
  9864  1DCB  2DCC               	nop2
  9865  1DCC                     l24:	
  9866                           ;../../Functions.c: 22:    while(GO_nDONE);
  9867                           
  9868  1DCC  1283               	bcf	3,5	;RP0=0, select bank0
  9869  1DCD  1303               	bcf	3,6	;RP1=0, select bank0
  9870  1DCE  191F               	btfsc	31,2	;volatile
  9871  1DCF  2DD1               	goto	u4001
  9872  1DD0  2DD2               	goto	u4000
  9873  1DD1                     u4001:
  9874  1DD1  2DCC               	goto	l24
  9875  1DD2                     u4000:
  9876  1DD2                     l2670:
  9877                           
  9878                           ;../../Functions.c: 24:    return ((ADRESH<<8)+ADRESL);
  9879  1DD2  081E               	movf	30,w	;volatile
  9880  1DD3  00F1               	movwf	?_GetADCValue+1
  9881  1DD4  1683               	bsf	3,5	;RP0=1, select bank1
  9882  1DD5  1303               	bcf	3,6	;RP1=0, select bank1
  9883  1DD6  081E               	movf	30,w	;volatile
  9884  1DD7  00F0               	movwf	?_GetADCValue
  9885  1DD8                     l27:
  9886  1DD8  0008               	return
  9887  1DD9                     __end_of_GetADCValue:
  9888                           
  9889                           	psect	text28
  9890  1000                     __ptext28:	
  9891 ;; *************** function _Init_ADC *****************
  9892 ;; Defined at:
  9893 ;;		line 3 in file "../../Functions.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;		None
  9896 ;; Auto vars:     Size  Location     Type
  9897 ;;		None
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  1    wreg      void 
  9900 ;; Registers used:
  9901 ;;		wreg
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/0
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9907 ;;      Params:         0       0       0       0       0
  9908 ;;      Locals:         0       0       0       0       0
  9909 ;;      Temps:          0       0       0       0       0
  9910 ;;      Totals:         0       0       0       0       0
  9911 ;;Total ram usage:        0 bytes
  9912 ;; Hardware stack levels used: 1
  9913 ;; This function calls:
  9914 ;;		Nothing
  9915 ;; This function is called by:
  9916 ;;		_main
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920  1000                     _Init_ADC:	
  9921                           ;psect for function _Init_ADC
  9922                           
  9923  1000                     l3068:	
  9924                           ;incstack = 0
  9925                           ; Regs used in _Init_ADC: [wreg]
  9926                           
  9927                           
  9928                           ;../../Functions.c: 5:     ADCON1 = 0x80;
  9929  1000  3080               	movlw	128
  9930  1001  1683               	bsf	3,5	;RP0=1, select bank1
  9931  1002  1303               	bcf	3,6	;RP1=0, select bank1
  9932  1003  009F               	movwf	31	;volatile
  9933                           
  9934                           ;../../Functions.c: 7:     TRISA = 0x2f;
  9935  1004  302F               	movlw	47
  9936  1005  0085               	movwf	5	;volatile
  9937                           
  9938                           ;../../Functions.c: 8:     TRISE = 0x07;
  9939  1006  3007               	movlw	7
  9940  1007  0089               	movwf	9	;volatile
  9941                           
  9942                           ;../../Functions.c: 9:     ADCON0 = 0x81;
  9943  1008  3081               	movlw	129
  9944  1009  1283               	bcf	3,5	;RP0=0, select bank0
  9945  100A  1303               	bcf	3,6	;RP1=0, select bank0
  9946  100B  009F               	movwf	31	;volatile
  9947  100C                     l21:
  9948  100C  0008               	return
  9949  100D                     __end_of_Init_ADC:
  9950                           
  9951                           	psect	text29
  9952  1F9C                     __ptext29:	
  9953 ;; *************** function _InitLCD *****************
  9954 ;; Defined at:
  9955 ;;		line 45 in file "../../LCD.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;		None
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0, pclath, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9969 ;;      Params:         0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0
  9971 ;;      Temps:          3       0       0       0       0
  9972 ;;      Totals:         3       0       0       0       0
  9973 ;;Total ram usage:        3 bytes
  9974 ;; Hardware stack levels used: 1
  9975 ;; Hardware stack levels required when called: 1
  9976 ;; This function calls:
  9977 ;;		_lcdcmd
  9978 ;; This function is called by:
  9979 ;;		_main
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983  1F9C                     _InitLCD:	
  9984                           ;psect for function _InitLCD
  9985                           
  9986  1F9C                     l3086:	
  9987                           ;incstack = 0
  9988                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
  9989                           
  9990                           
  9991                           ;../../LCD.c: 47:     TRISB=0x00;
  9992  1F9C  1683               	bsf	3,5	;RP0=1, select bank1
  9993  1F9D  1303               	bcf	3,6	;RP1=0, select bank1
  9994  1F9E  0186               	clrf	6	;volatile
  9995                           
  9996                           ;../../LCD.c: 48:     PORTB=0x00;
  9997  1F9F  1283               	bcf	3,5	;RP0=0, select bank0
  9998  1FA0  1303               	bcf	3,6	;RP1=0, select bank0
  9999  1FA1  0186               	clrf	6	;volatile
 10000  1FA2                     l3088:
 10001                           
 10002                           ;../../LCD.c: 49:     _delay((unsigned long)((100)*(20000000/4000.0)));
 10003  1FA2  3003               	movlw	3
 10004  1FA3  00F6               	movwf	??_InitLCD+2
 10005  1FA4  308A               	movlw	138
 10006  1FA5  00F5               	movwf	??_InitLCD+1
 10007  1FA6  3055               	movlw	85
 10008  1FA7  00F4               	movwf	??_InitLCD
 10009  1FA8                     u5647:
 10010  1FA8  0BF4               	decfsz	??_InitLCD,f
 10011  1FA9  2FA8               	goto	u5647
 10012  1FAA  0BF5               	decfsz	??_InitLCD+1,f
 10013  1FAB  2FA8               	goto	u5647
 10014  1FAC  0BF6               	decfsz	??_InitLCD+2,f
 10015  1FAD  2FA8               	goto	u5647
 10016  1FAE  2FAF               	nop2
 10017  1FAF                     l3090:
 10018                           
 10019                           ;../../LCD.c: 50: PORTBbits.RB0=0;
 10020  1FAF  1283               	bcf	3,5	;RP0=0, select bank0
 10021  1FB0  1303               	bcf	3,6	;RP1=0, select bank0
 10022  1FB1  1006               	bcf	6,0	;volatile
 10023  1FB2                     l3092:
 10024                           
 10025                           ;../../LCD.c: 51: _delay((unsigned long)((250)*(20000000/4000.0)));
 10026  1FB2  3007               	movlw	7
 10027  1FB3  00F6               	movwf	??_InitLCD+2
 10028  1FB4  3058               	movlw	88
 10029  1FB5  00F5               	movwf	??_InitLCD+1
 10030  1FB6  3059               	movlw	89
 10031  1FB7  00F4               	movwf	??_InitLCD
 10032  1FB8                     u5657:
 10033  1FB8  0BF4               	decfsz	??_InitLCD,f
 10034  1FB9  2FB8               	goto	u5657
 10035  1FBA  0BF5               	decfsz	??_InitLCD+1,f
 10036  1FBB  2FB8               	goto	u5657
 10037  1FBC  0BF6               	decfsz	??_InitLCD+2,f
 10038  1FBD  2FB8               	goto	u5657
 10039  1FBE  2FBF               	nop2
 10040  1FBF                     l3094:
 10041                           
 10042                           ;../../LCD.c: 52: lcdcmd(0x2);
 10043  1FBF  3002               	movlw	2
 10044  1FC0  160A  158A  2566  160A  158A  	fcall	_lcdcmd
 10045  1FC5                     l3096:
 10046                           
 10047                           ;../../LCD.c: 53: _delay((unsigned long)((250)*(20000000/4000.0)));
 10048  1FC5  3007               	movlw	7
 10049  1FC6  00F6               	movwf	??_InitLCD+2
 10050  1FC7  3058               	movlw	88
 10051  1FC8  00F5               	movwf	??_InitLCD+1
 10052  1FC9  3059               	movlw	89
 10053  1FCA  00F4               	movwf	??_InitLCD
 10054  1FCB                     u5667:
 10055  1FCB  0BF4               	decfsz	??_InitLCD,f
 10056  1FCC  2FCB               	goto	u5667
 10057  1FCD  0BF5               	decfsz	??_InitLCD+1,f
 10058  1FCE  2FCB               	goto	u5667
 10059  1FCF  0BF6               	decfsz	??_InitLCD+2,f
 10060  1FD0  2FCB               	goto	u5667
 10061  1FD1  2FD2               	nop2
 10062  1FD2                     l3098:
 10063                           
 10064                           ;../../LCD.c: 54: lcdcmd(0x28);
 10065  1FD2  3028               	movlw	40
 10066  1FD3  160A  158A  2566  160A  158A  	fcall	_lcdcmd
 10067  1FD8                     l3100:
 10068                           
 10069                           ;../../LCD.c: 55: _delay((unsigned long)((15)*(20000000/4000.0)));
 10070  1FD8  3062               	movlw	98
 10071  1FD9  00F5               	movwf	??_InitLCD+1
 10072  1FDA  3065               	movlw	101
 10073  1FDB  00F4               	movwf	??_InitLCD
 10074  1FDC                     u5677:
 10075  1FDC  0BF4               	decfsz	??_InitLCD,f
 10076  1FDD  2FDC               	goto	u5677
 10077  1FDE  0BF5               	decfsz	??_InitLCD+1,f
 10078  1FDF  2FDC               	goto	u5677
 10079  1FE0  2FE1               	nop2
 10080  1FE1                     l3102:
 10081                           
 10082                           ;../../LCD.c: 57: lcdcmd(0x0C);
 10083  1FE1  300C               	movlw	12
 10084  1FE2  160A  158A  2566  160A  158A  	fcall	_lcdcmd
 10085  1FE7                     l3104:
 10086                           
 10087                           ;../../LCD.c: 58: _delay((unsigned long)((15)*(20000000/4000.0)));
 10088  1FE7  3062               	movlw	98
 10089  1FE8  00F5               	movwf	??_InitLCD+1
 10090  1FE9  3065               	movlw	101
 10091  1FEA  00F4               	movwf	??_InitLCD
 10092  1FEB                     u5687:
 10093  1FEB  0BF4               	decfsz	??_InitLCD,f
 10094  1FEC  2FEB               	goto	u5687
 10095  1FED  0BF5               	decfsz	??_InitLCD+1,f
 10096  1FEE  2FEB               	goto	u5687
 10097  1FEF  2FF0               	nop2
 10098  1FF0                     l3106:
 10099                           
 10100                           ;../../LCD.c: 59: lcdcmd(0x06);
 10101  1FF0  3006               	movlw	6
 10102  1FF1  160A  158A  2566  160A  158A  	fcall	_lcdcmd
 10103  1FF6                     l3108:
 10104                           
 10105                           ;../../LCD.c: 60: _delay((unsigned long)((15)*(20000000/4000.0)));
 10106  1FF6  3062               	movlw	98
 10107  1FF7  00F5               	movwf	??_InitLCD+1
 10108  1FF8  3065               	movlw	101
 10109  1FF9  00F4               	movwf	??_InitLCD
 10110  1FFA                     u5697:
 10111  1FFA  0BF4               	decfsz	??_InitLCD,f
 10112  1FFB  2FFA               	goto	u5697
 10113  1FFC  0BF5               	decfsz	??_InitLCD+1,f
 10114  1FFD  2FFA               	goto	u5697
 10115  1FFE  2FFF               	nop2
 10116  1FFF                     l52:
 10117  1FFF  0008               	return
 10118  2000                     __end_of_InitLCD:
 10119                           
 10120                           	psect	text30
 10121  1D66                     __ptext30:	
 10122 ;; *************** function _lcdcmd *****************
 10123 ;; Defined at:
 10124 ;;		line 3 in file "../../LCD.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  value           1    wreg     unsigned char 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  value           1    2[COMMON] unsigned char 
 10129 ;;  cmd             1    3[COMMON] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, status,2, status,0
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10139 ;;      Params:         0       0       0       0       0
 10140 ;;      Locals:         2       0       0       0       0
 10141 ;;      Temps:          2       0       0       0       0
 10142 ;;      Totals:         4       0       0       0       0
 10143 ;;Total ram usage:        4 bytes
 10144 ;; Hardware stack levels used: 1
 10145 ;; This function calls:
 10146 ;;		Nothing
 10147 ;; This function is called by:
 10148 ;;		_InitLCD
 10149 ;;		_WriteLCDLine1
 10150 ;;		_LCD_Char_build
 10151 ;;		_WriteLCDLine2
 10152 ;;		_ClearLCDScreen
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156  1D66                     _lcdcmd:	
 10157                           ;psect for function _lcdcmd
 10158                           
 10159                           
 10160                           ;incstack = 0
 10161                           ; Regs used in _lcdcmd: [wreg+status,2+status,0]
 10162                           ;lcdcmd@value stored from wreg
 10163  1D66  00F2               	movwf	lcdcmd@value
 10164  1D67                     l2674:
 10165                           
 10166                           ;../../LCD.c: 3: void lcdcmd(unsigned char value);../../LCD.c: 4: {;../../LCD.c: 5: unsi
      +                          gned char cmd;;../../LCD.c: 6: cmd = (value & 0xF0);
 10167  1D67  0872               	movf	lcdcmd@value,w
 10168  1D68  39F0               	andlw	240
 10169  1D69  00F0               	movwf	??_lcdcmd
 10170  1D6A  0870               	movf	??_lcdcmd,w
 10171  1D6B  00F3               	movwf	lcdcmd@cmd
 10172  1D6C                     l2676:
 10173                           
 10174                           ;../../LCD.c: 7: PORTB =cmd;
 10175  1D6C  0873               	movf	lcdcmd@cmd,w
 10176  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
 10177  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
 10178  1D6F  0086               	movwf	6	;volatile
 10179  1D70                     l2678:
 10180                           
 10181                           ;../../LCD.c: 8: PORTBbits.RB1=0;
 10182  1D70  1086               	bcf	6,1	;volatile
 10183  1D71                     l2680:
 10184                           
 10185                           ;../../LCD.c: 9: PORTBbits.RB2=0;
 10186  1D71  1106               	bcf	6,2	;volatile
 10187  1D72                     l2682:
 10188                           
 10189                           ;../../LCD.c: 10: PORTBbits.RB0=1;
 10190  1D72  1406               	bsf	6,0	;volatile
 10191  1D73                     l2684:
 10192                           
 10193                           ;../../LCD.c: 11: _delay((unsigned long)((10)*(20000000/4000.0)));
 10194  1D73  3041               	movlw	65
 10195  1D74  00F1               	movwf	??_lcdcmd+1
 10196  1D75  30EE               	movlw	238
 10197  1D76  00F0               	movwf	??_lcdcmd
 10198  1D77                     u5707:
 10199  1D77  0BF0               	decfsz	??_lcdcmd,f
 10200  1D78  2D77               	goto	u5707
 10201  1D79  0BF1               	decfsz	??_lcdcmd+1,f
 10202  1D7A  2D77               	goto	u5707
 10203  1D7B  0000               	nop
 10204  1D7C                     l2686:
 10205                           
 10206                           ;../../LCD.c: 12: PORTBbits.RB0=0;
 10207  1D7C  1283               	bcf	3,5	;RP0=0, select bank0
 10208  1D7D  1303               	bcf	3,6	;RP1=0, select bank0
 10209  1D7E  1006               	bcf	6,0	;volatile
 10210  1D7F                     l2688:
 10211                           
 10212                           ;../../LCD.c: 14: cmd= ((value<<4) & 0xF0);
 10213  1D7F  0872               	movf	lcdcmd@value,w
 10214  1D80  00F0               	movwf	??_lcdcmd
 10215  1D81  3003               	movlw	3
 10216  1D82                     u4015:
 10217  1D82  1003               	clrc
 10218  1D83  0DF0               	rlf	??_lcdcmd,f
 10219  1D84  3EFF               	addlw	-1
 10220  1D85  1D03               	skipz
 10221  1D86  2D82               	goto	u4015
 10222  1D87  1003               	clrc
 10223  1D88  0D70               	rlf	??_lcdcmd,w
 10224  1D89  39F0               	andlw	240
 10225  1D8A  00F1               	movwf	??_lcdcmd+1
 10226  1D8B  0871               	movf	??_lcdcmd+1,w
 10227  1D8C  00F3               	movwf	lcdcmd@cmd
 10228  1D8D                     l2690:
 10229                           
 10230                           ;../../LCD.c: 15: PORTB =cmd;
 10231  1D8D  0873               	movf	lcdcmd@cmd,w
 10232  1D8E  0086               	movwf	6	;volatile
 10233  1D8F                     l2692:
 10234                           
 10235                           ;../../LCD.c: 16: PORTBbits.RB1=0;
 10236  1D8F  1086               	bcf	6,1	;volatile
 10237  1D90                     l2694:
 10238                           
 10239                           ;../../LCD.c: 17: PORTBbits.RB2=0;
 10240  1D90  1106               	bcf	6,2	;volatile
 10241  1D91                     l2696:
 10242                           
 10243                           ;../../LCD.c: 18: PORTBbits.RB0=1;
 10244  1D91  1406               	bsf	6,0	;volatile
 10245  1D92                     l2698:
 10246                           
 10247                           ;../../LCD.c: 19: _delay((unsigned long)((10)*(20000000/4000.0)));
 10248  1D92  3041               	movlw	65
 10249  1D93  00F1               	movwf	??_lcdcmd+1
 10250  1D94  30EE               	movlw	238
 10251  1D95  00F0               	movwf	??_lcdcmd
 10252  1D96                     u5717:
 10253  1D96  0BF0               	decfsz	??_lcdcmd,f
 10254  1D97  2D96               	goto	u5717
 10255  1D98  0BF1               	decfsz	??_lcdcmd+1,f
 10256  1D99  2D96               	goto	u5717
 10257  1D9A  0000               	nop
 10258  1D9B                     l2700:
 10259                           
 10260                           ;../../LCD.c: 20: PORTBbits.RB0=0;
 10261  1D9B  1283               	bcf	3,5	;RP0=0, select bank0
 10262  1D9C  1303               	bcf	3,6	;RP1=0, select bank0
 10263  1D9D  1006               	bcf	6,0	;volatile
 10264  1D9E                     l46:
 10265  1D9E  0008               	return
 10266  1D9F                     __end_of_lcdcmd:
 10267  007E                     btemp	set	126	;btemp
 10268  007E                     wtemp0	set	126
 10269                           
 10270                           	psect	config
 10271                           
 10272                           ;Config register CONFIG @ 0x2007
 10273                           ;	Oscillator Selection bits
 10274                           ;	FOSC = HS, HS oscillator
 10275                           ;	Watchdog Timer Enable bit
 10276                           ;	WDTE = OFF, WDT disabled
 10277                           ;	Power-up Timer Enable bit
 10278                           ;	PWRTE = OFF, PWRT disabled
 10279                           ;	Brown-out Reset Enable bit
 10280                           ;	BOREN = OFF, BOR disabled
 10281                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10282                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10283                           ;	Data EEPROM Memory Code Protection bit
 10284                           ;	CPD = OFF, Data EEPROM code protection off
 10285                           ;	Flash Program Memory Write Enable bits
 10286                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10287                           ;	In-Circuit Debugger Mode bit
 10288                           ;	DEBUG = 0x1, unprogrammed default
 10289                           ;	Flash Program Memory Code Protection bit
 10290                           ;	CP = OFF, Code protection off
 10291  2007                     	org	8199
 10292  2007  3F3A               	dw	16186

Data Sizes:
    Strings     11
    Constant    144
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     72      74
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 25
		 -> main@string(BANK1[25]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    WriteLCDLine1@s	PTR const unsigned char  size(1) Largest target is 25
		 -> main@string(BANK1[25]), 

    WriteStringToLCD@s	PTR const unsigned char  size(1) Largest target is 25
		 -> main@string(BANK1[25]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _WriteLCDLine1->_WriteStringToLCD
    _WriteStringToLCD->_lcddata
    _Read_adc->___lwdiv
    ___lwdiv->___lwmod
    _InitLCD->_lcdcmd

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   38865
                                             78 BANK0      1     1      0
                                             37 BANK1     35    35      0
                            _InitLCD
                           _Init_ADC
                           _Read_adc
                      _WriteLCDLine1
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32236
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6327
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _WriteLCDLine1                                        1     1      0     346
                                              6 COMMON     1     1      0
                   _WriteStringToLCD
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (2) _WriteStringToLCD                                     2     2      0     201
                                              4 COMMON     2     2      0
                            _lcddata
 ---------------------------------------------------------------------------------
 (3) _lcddata                                              4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Read_adc                                            11     9      2     885
                                              0 BANK0     11     9      2
                        _GetADCValue
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetADCValue                                          6     4      2      22
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              3     3      0      90
                                              4 COMMON     3     3      0
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (2) _lcdcmd                                               4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitLCD
     _lcdcmd
   _Init_ADC
   _Read_adc
     _GetADCValue
     ___lwdiv
       ___lwmod (ARG)
   _WriteLCDLine1
     _WriteStringToLCD
       _lcddata
     _lcdcmd
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     48      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A7      12        0.0%
ABS                  0      0      A7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Nov 30 19:06:48 2023

          WriteLCDLine1@s 0076                         pc 0002                        l21 100C  
                      l24 1DCC                        l33 1EA0                        l27 1DD8  
                      l52 1FFF                        l46 1D9E                        l49 1D65  
                      l58 1CE4                        l90 1200                        l67 1CBB  
            ___awdiv@sign 0021                        fsr 0004       ___wmul@multiplicand 0072  
     __Umul8_16@word_mpld 0076                       l202 0C9E                       l224 0138  
                     l325 1099                       l502 0881                       l510 132F  
                     l270 0728                       l262 05C1                       l255 057D  
                     l506 136C                       l442 0072                       l291 1D2D  
                     l507 12DE                       l195 1577                       l620 1682  
                     l460 08A4                       l517 135F                       l605 1E12  
                     l285 07ED                       l622 1659                       l470 0932  
                     l463 0902                       l455 1F9B                       l480 10B6  
                     l616 15DB                       l712 0FFF                       l641 1771  
                     l545 1F42                       l289 1D15                       l650 17D1  
                     l475 1EBD                       l483 1122                       l459 093F  
                     l731 1021                       l476 1ED9                       l484 113B  
                     l492 0881                       l724 0FF3                       l477 1EEE  
                     l637 174D                       l629 17FF                       l733 1033  
                     l662 1D08                       l718 0F6B                       l647 1793  
                     l488 1CAD                       l658 17F3                       l770 11CB  
                     l762 11A3                       l595 1E56                       l659 17FF  
                     l499 086C                       l756 115E                       l758 11F5  
                     l776 1CCD                       l769 11BF               lcdcmd@value 0072  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0036              ___flmul@bexp 0037               _sprintf$829 00AA  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
            ___fltol@exp1 005B                      l3000 1EF7                      l2200 000D  
                    l3010 1F2B                      l3002 1EFA                      l2210 0021  
                    l2202 0011                      l3100 1FD8                      l2300 1E4C  
                    l3020 1CE9                      l3012 1F34                      l3004 1F07  
                    l2220 0037                      l2212 0025                      l2204 0016  
                    l3102 1FE1                      l2302 1E52                      l3110 1CAF  
                    l3006 1F0B                      l3014 1F3A                      l3030 1156  
                    l2310 1DE2                      l2230 0057                      l2222 003B  
                    l2214 0027                      l2206 0018                      l3104 1FE7  
                    l3112 1CB5                      l2400 1619                      l3008 1F1D  
                    l3040 1181                      l3032 1166                      l3024 113D  
                    l2160 1017                      l2320 1E01                      l2312 1DE9  
                    l2232 005E                      l2224 003F                      l2216 002D  
                    l2208 001C                      l3200 029C                      l3120 0088  
                    l3106 1FF0                      l2170 1D2F                      l2410 163D  
                    l2402 161D                      l2330 157F                      l3018 1CE5  
                    l3050 11B5                      l3042 1188                      l3026 1142  
                    l2162 101B                      l2322 1E08                      l2314 1DED  
                    l2306 1DD9                      l2226 0050                      l2218 0030  
                    l2234 0064                      l2250 1F4F                      l2242 1F43  
                    l3210 0324                      l3202 02B7                      l3130 00BA  
                    l3122 008D                      l3114 0076                      l3108 1FF6  
                    l2180 1D3B                      l2172 1D34                      l2500 17AF  
                    l2420 166D                      l2412 165D                      l2404 1621  
                    l2340 1594                      l2332 1585                      l3060 11E8  
                    l3052 11B9                      l3044 118C                      l3036 116F  
                    l3028 1146                      l2164 102A                      l2156 100E  
                    l2316 1DF1                      l2308 1DDF                      l2324 1E0E  
                    l2236 0069                      l2228 0056                      l2260 1F68  
                    l2252 1F53                      l2244 1F44                      l3300 0653  
                    l3220 0399                      l3212 033F                      l3204 02BF  
                    l3140 00F0                      l3132 00CD                      l3124 0091  
                    l3116 007B                      l3070 1E5A                      l2190 1D57  
                    l2182 1D43                      l2174 1D38                      l2510 17E8  
                    l2502 17CD                      l2422 1676                      l2414 1666  
                    l2406 1625                      l2350 15AC                      l2342 159C  
                    l2334 1589                      l3062 11EC                      l3054 11C3  
                    l3046 119A                      l3038 1174                      l2166 102F  
                    l2158 1010                      l2318 1DFB                      l2238 006E  
                    l2270 1F87                      l2262 1F6C                      l2254 1F58  
                    l2246 1F48                      l3310 06FC                      l3302 068E  
                    l3222 03A1                      l3214 0366                      l3230 03E7  
                    l3206 02CE                      l3150 0123                      l3142 00F4  
                    l3134 00D1                      l3126 00A1                      l3118 0081  
                    l2280 1E13                      l3072 1E5F                      l3080 1E84  
                    l2192 1D58                      l2184 1D46                      l2176 1D39  
                    l2520 17FE                      l2512 17E9                      l2504 17D6  
                    l2440 16BC                      l2432 1694                      l2416 1668  
                    l2424 167A                      l2408 1626                      l2360 15BE  
                    l2352 15B2                      l2344 159D                      l2336 158A  
                    l2328 1578                      l3064 11ED                      l3056 11CD  
                    l3048 11AA                      l2600 0EC9                      l2264 1F70  
                    l2256 1F5E                      l2272 1F8D                      l2248 1F4D  
                    l3320 071A                      l3312 0703                      l3304 06AD  
                    l3232 041C                      l3224 03BF                      l3216 0375  
                    l3208 0315                      l3160 0156                      l3144 00F7  
                    l3152 0134                      l3128 00A5                      l3136 00E1  
                    l3090 1FAF                      l2290 1E29                      l2282 1E15  
                    l3082 1E8D                      l3074 1E6B                      l2194 1D59  
                    l2186 1D54                      l2178 1D3A                      l2514 17ED  
                    l2506 17DB                      l2442 16BE                      l2434 16AB  
                    l2426 1686                      l2450 16D1                      l2418 166C  
                    l2362 15C3                      l2370 15D3                      l2354 15B3  
                    l2338 158F                      l2346 159F                      l3058 11E3  
                    l2610 0F37                      l2602 0EEF                      l2530 0CB1  
                    l2522 0C9F                      l2274 1F92                      l2266 1F7A  
                    l2258 1F61                      l3330 0752                      l3322 0722  
                    l3314 0707                      l3306 06B9                      l3250 04C9  
                    l3242 046D                      l3234 0469                      l3218 0390  
                    l3170 017C                      l3162 0162                      l3154 0136  
                    l3146 010C                      l3138 00EF                      l3410 12A6  
                    l3402 11F6                      l2700 1D9B                      l3092 1FB2  
                    l3068 1000                      l2292 1E2D                      l2284 1E1B  
                    l3076 1E71                      l2196 1D62                      l2188 1D56  
                    l2516 17EF                      l2508 17E3                      l2452 16E7  
                    l2460 173F                      l2444 16C2                      l2436 16AF  
                    l2428 168B                      l2380 15F1                      l2372 15E1  
                    l2364 15C8                      l2356 15B9                      l2348 15A7  
                    l2620 0F4F                      l2612 0F3B                      l2604 0F17  
                    l2540 0CCD                      l2532 0CB6                      l2524 0CA6  
                    l2276 1F97                      l2268 1F80                      l3340 077E  
                    l3332 075A                      l3324 0733                      l3316 070D  
                    l3308 06F4                      l3252 04CF                      l3236 046B  
                    l3228 03DE                      l3180 01CF                      l3172 0195  
                    l3164 0166                      l3148 011F                      l3404 1212  
                    l3094 1FBF                      l3086 1F9C                      l2294 1E3E  
                    l2286 1E1E                      l3078 1E7C                      l2702 1CCF  
                    l2518 17FA                      l2470 176C                      l2462 1755  
                    l2454 1725                      l2446 16C3                      l2438 16B3  
                    l2390 1605                      l2382 15F5                      l2374 15E5  
                    l2366 15D0                      l2358 15BD                      l2630 0F70  
                    l2622 0F50                      l2614 0F3C                      l2606 0F20  
                    l2550 0CE2                      l2542 0CD2                      l2534 0CBB  
                    l2526 0CAC                      l2710 1370                      l2198 000A  
                    l3350 07A6                      l3342 0787                      l3334 0766  
                    l3326 073A                      l3270 0517                      l3254 04DB  
                    l3262 04F0                      l3246 04A4                      l3190 020A  
                    l3182 01DA                      l3174 01AE                      l3166 016A  
                    l3318 0714                      l3158 013A                      l3406 1251  
                    l3096 1FC5                      l3088 1FA2                      l2296 1E44  
                    l2288 1E25                      l2704 1CD0                      l2480 177F  
                    l2472 1770                      l2464 175A                      l2456 172B  
                    l2448 16CC                      l2392 1609                      l2384 15F9  
                    l2376 15E9                      l2368 15D1                      l2800 12FF  
                    l2632 0F75                      l2640 0FA6                      l2624 0F54  
                    l2616 0F45                      l2608 0F2E                      l2560 0CFE  
                    l2552 0CE7                      l2544 0CD8                      l2536 0CC3  
                    l2528 0CB0                      l2720 1489                      l2712 1376  
                    l3360 07CF                      l3352 07AC                      l3344 078B  
                    l3336 076C                      l3328 0749                      l3280 0592  
                    l3272 0552                      l3264 04FD                      l3256 04E2  
                    l3248 04AE                      l3192 0210                      l3184 01E0  
                    l3176 01B2                      l3168 0178                      l3408 1290  
                    l3098 1FD2                      l2298 1E45                      l2706 1CD8  
                    l2490 1790                      l2474 1775                      l2482 1781  
                    l2458 1730                      l2394 160D                      l2386 15FD  
                    l2378 15ED                      l2810 1329                      l2802 1308  
                    l2650 0FD9                      l2642 0FB3                      l2634 0F83  
                    l2626 0F68                      l2618 0F4B                      l2570 0D29  
                    l2562 0D03                      l2554 0CEF                      l2546 0CDC  
                    l2538 0CC5                      l2730 0947                      l3354 07B3  
                    l3346 0796                      l3338 0770                      l3290 05CA  
                    l3282 0598                      l3274 0571                      l3266 050B  
                    l3258 04EB                      l3194 022F                      l3186 01F3  
                    l3178 01B6                      l3442 014E                      l2708 1CDC  
                    l2476 1778                      l2468 1763                      l2484 1785  
                    l2396 1611                      l2388 1601                      l2900 1044  
                    l2812 1333                      l2820 134D                      l2804 1316  
                    l2652 0FE7                      l2644 0FBE                      l2636 0F87  
                    l2580 0DC6                      l2572 0D46                      l2556 0CF1  
                    l2548 0CDD                      l2724 1534                      l2740 0A38  
                    l2732 0949                      l3356 07B7                      l3348 07A2  
                    l3292 05CF                      l3284 05A5                      l3276 0585  
                    l3268 0512                      l3196 027A                      l3188 0206  
                    l3364 07D7                      l2670 1DD2                      l2662 1DA0  
                    l2494 1798                      l2486 1786                      l2478 177A  
                    l2398 1615                      l2910 1073                      l2902 1047  
                    l2806 1320                      l2654 0FEB                      l2646 0FCD  
                    l2638 0FA0                      l2590 0E29                      l2582 0DCF  
                    l2574 0D62                      l2566 0D0C                      l2558 0CF9  
                    l2718 1483                      l2742 0A3F                      l2734 0950  
                    l2750 0AF4                      l3358 07C3                      l3294 05D6  
                    l3286 05B4                      l3278 058E                      l3198 0293  
                    l3366 07E9                      l2680 1D71                      l2664 1DB3  
                    l2496 179D                      l2488 178A                      l2912 1081  
                    l2904 1054                      l2832 0882                      l2808 1321  
                    l2656 0FEC                      l2648 0FD7                      l2592 0E42  
                    l2584 0DDF                      l2576 0D8E                      l2568 0D1C  
                    l2760 0BEA                      l2752 0AFB                      l2728 0943  
                    l3296 05DA                      l3288 05BB                      l2690 1D8D  
                    l2682 1D72                      l2674 1D67                      l2666 1DBC  
                    l2930 1EED                      l2922 1EA1                      l2498 17AB  
                    l2914 1082                      l2906 1058                      l2850 08C0  
                    l2834 088F                      l2826 1354                      l2818 133B  
                    l2658 0FF7                      l2594 0E5F                      l2586 0DFC  
                    l2578 0DAA                      l2770 1CBE                      l2746 0AC7  
                    l3298 05F8                      l2692 1D8F                      l2684 1D73  
                    l2676 1D6C                      l2668 1DBF                      l2924 1EB5  
                    l2940 10D2                      l2916 108B                      l2908 1061  
                    l2860 08F3                      l2852 08C9                      l2844 08A5  
                    l2828 1364                      l2780 12B0                      l2596 0E8C  
                    l2588 0E0C                      l2772 1CC4                      l2764 0C72  
                    l2694 1D90                      l2686 1D7C                      l2678 1D70  
                    l2926 1ED1                      l2950 113A                      l2942 10D6  
                    l2934 109A                      l2918 1091                      l2870 090E  
                    l2862 08FC                      l2854 08D2                      l2846 08AD  
                    l2838 0898                      l2782 12C3                      l2598 0E9C  
                    l2774 1CCA                      l2758 0BE3                      l2696 1D91  
                    l2688 1D7F                      l2928 1EEB                      l2944 10FA  
                    l2936 10AE                      l2880 0937                      l2864 0906  
                    l2872 0920                      l2856 08E4                      l2848 08BE  
                    l2792 12DF                      l2776 1CCC                      l2768 1CBD  
                    l2698 1D92                      l2946 10FE                      l2938 10CA  
                    l2954 1CA3                      l2970 0831                      l2962 0806  
                    l2890 1D1C                      l2858 08F2                      l2794 12E5  
                    l2786 12CC                      l2948 1138                      l2956 1CAB  
                    l2972 0832                      l2964 0813                      l2892 1D23  
                    l2884 1D09                      l2796 12F4                      l2958 1CAD  
                    l2974 083A                      l2894 1D29                      l2886 1D0B  
                    l2878 0927                      l2798 12F6                      l2992 0861  
                    l2984 0848                      l2976 083C                      l2968 081C  
                    l2888 1D0F                      l2994 0871                      l2978 0840  
                    l2986 085A                      l2898 1034                      l2996 0876  
                    l2998 1EEF                      STR_1 1896                      u3010 1F8D  
                    u3011 1F8C                      u3100 1DDF                      u3020 1F92  
                    u3101 1DDE                      u3021 1F91                      u3005 1F81  
                    u3030 1E1B                      u3031 1E1A                      u4000 1DD2  
                    u3200 15BD                      u3120 1DF1                      u4001 1DD1  
                    u3201 15BC                      u3121 1DF0                      u3050 1E2D  
                    u3210 15C3                      u3130 1DFB                      u3051 1E2C  
                    u3211 15C2                      u3131 1DFA                      u3115 1DE3  
                    u4020 1CE4                      u3220 15C8                      u3045 1E1F  
                    u4021 1CE3                      u3221 15C7                      u3070 1E3E  
                    u3310 1682                      u3230 15E1                      u3150 1E0E  
                    u4030 1376                      u4110 0947                      u4015 1D82  
                    u3071 1E3D                      u3311 1681                      u3231 15E0  
                    u3151 1E0D                      u3135 1DF7                      u4031 1375  
                    u4111 0946                      u3320 1686                      u3240 15E5  
                    u3160 1589                      u5000 11A9                      u4200 0AFB  
                    u4120 0950                      u3065 1E2E                      u3401 16FE  
                    u3321 1685                      u3305 166F                      u3241 15E4  
                    u3161 1588                      u5001 11A8                      u3145 1E02  
                    u4105 153F                      u4201 0AFA                      u4121 094F  
                    u3090 1E52                      u3410 1712                      u3402 16FF  
                    u3330 168B                      u3250 163D                      u3170 158F  
                    u3091 1E51                      u3075 1E3A                      u3411 1713  
                    u3403 1704                      u3331 168A                      u3251 163C  
                    u3171 158E                      u3500 178A                      u3420 1730  
                    u3412 1718                      u3404 1705                      u3260 1648  
                    u3180 1594                      u5020 11B9                      u4300 12C3  
                    u5100 00A1                      u3085 1E46                      u3501 1789  
                    u3421 172F                      u3413 1719                      u3405 170A  
                    u3341 169D                      u3261 1646                      u3181 1593  
                    u5021 11B8                      u4301 12C2                      u4045 1393  
                    u5101 00A0                      u3510 1790                      u3430 1755  
                    u3406 170B                      u3350 16AF                      u3342 16A4  
                    u3270 1649                      u3190 15B2                      u5030 11BF  
                    u4310 12DD                      u4070 1489                      u5110 00E1  
                    u3511 178F                      u3431 1754                      u3351 16AE  
                    u3343 16AB                      u3255 1639                      u3191 15B1  
                    u5031 11BE                      u5015 11AE                      u4311 12DC  
                    u4071 1488                      u4055 13ED                      u4215 0B1B  
                    u4135 0970                      u5111 00E0                      u3600 17ED  
                    u3520 1797                      u3440 175A                      u3360 16B3  
                    u3280 165D                      u5040 11C3                      u4400 1353  
                    u2800 101B                      u4240 0BEA                      u4160 0A3F  
                    u5200 02B7                      u5120 00EF                      u3601 17EC  
                    u3521 1796                      u3441 1759                      u3361 16B2  
                    u3281 165C                      u5041 11C2                      u4401 1352  
                    u2801 101A                      u4065 1442                      u4241 0BE9  
                    u4225 0B57                      u4161 0A3E                      u4145 09AC  
                    u5201 02B6                      u5121 00EE                      u3610 17FE  
                    u3530 179D                      u3370 16C2                      u3290 166C  
                    u5050 11D8                      u4330 1316                      u5210 02CE  
                    u5130 0133                      u3611 17FD                      u3531 179C  
                    u3371 16C1                      u3291 166B                      u4331 1315  
                    u4235 0BA2                      u4155 09F7                      u5211 02CD  
                    u5131 0132                      u3540 17AF                      u3460 1770  
                    u5060 11E8                      u4500 090D                      u4420 1364  
                    u2820 102F                      u3620 0CB0                      u2900 0050  
                    u5300 04C9                      u5220 0324                      u5140 0162  
                    u3541 17AE                      u3461 176F                      u5061 11E7  
                    u4501 090C                      u4421 1363                      u4325 1301  
                    u2821 102E                      u3701 0D54                      u3621 0CAF  
                    u4085 14A6                      u2901 004F                      u5301 04C8  
                    u5221 0323                      u5141 0161                      u3550 17BE  
                    u3470 1775                      u3390 16E7                      u5070 11EC  
                    u4430 088F                      u4350 132F                      u3702 0D5B  
                    u3630 0CB6                      u5310 04DB                      u5230 033F  
                    u5150 0166                      u3471 1774                      u3455 1765  
                    u3391 16E6                      u5071 11EB                      u5055 11D3  
                    u4431 088E                      u4415 1356                      u4351 132E  
                    u4335 1312                      u2815 1022                      u3711 0D70  
                    u3703 0D62                      u3631 0CB5                      u4095 14F3  
                    u4255 0BFD                      u4175 0A52                      u5311 04DA  
                    u5231 033E                      u5215 02CA                      u5151 0165  
                    u5080 1E8D                      u3560 17CD                      u3480 177F  
                    u4600 1044                      u4520 091F                      u4440 08A3  
                    u4360 1333                      u3712 0D77                      u3640 0CBB  
                    u4280 1CC4                      u2920 0064                      u2840 0011  
                    u5320 04FD                      u5240 0366                      u5160 0195  
                    u5081 1E8C                      u3561 17CC                      u3481 177E  
                    u3393 16E3                      u3385 16C5                      u4601 1043  
                    u4521 091E                      u4441 08A2                      u4361 1332  
                    u4345 1322                      u3801 0EAB                      u3721 0D9C  
                    u3713 0D7E                      u3641 0CBA                      u4281 1CC3  
                    u2921 0063                      u2905 004C                      u2841 0010  
                    u4265 0C39                      u4185 0A8E                      u5321 04FC  
                    u5241 0365                      u5225 0320                      u5161 0194  
                    u3570 17D6                      u3490 1785                      u4530 0926  
                    u4370 133A                      u3810 0ED5                      u3802 0EB2  
                    u3722 0DA3                      u3650 0CDC                      u4290 1CCA  
                    u2930 0069                      u2850 001C                      u5410 06FB  
                    u5330 050B                      u5250 0375                      u5170 01CF  
                    u5090 0081                      u2835 1D49                      u3571 17D5  
                    u3555 17B9                      u3491 1784                      u4531 0925  
                    u4515 090F                      u4371 1339                      u3803 0EB9  
                    u3731 0DB8                      u3723 0DAA                      u3651 0CDB  
                    u4291 1CC9                      u2931 0068                      u2915 0058  
                    u2851 001B                      u4275 0C75                      u4195 0ACA  
                    u5411 06FA                      u5331 050A                      u5251 0374  
                    u5171 01CE                      u5091 0080                      u4700 10AE  
                    u3580 17DB                      u4620 1058                      u4460 08E4  
                    u3900 0F54                      u3732 0DBF                      u3660 0CE2  
                    u2860 002D                      u2940 1F48                      u5500 077E  
                    u5420 0713                      u5260 0390                      u5180 020A  
                    u4701 10AD                      u3581 17DA                      u4621 1057  
                    u4461 08E3                      u3901 0F53                      u3821 0EE1  
                    u3733 0DC6                      u3661 0CE1                      u2861 002C  
                    u2941 1F47                      u5501 077D                      u5421 0712  
                    u5405 06BC                      u5325 04F9                      u5261 038F  
                    u5181 0209                      u4710 10CA                      u3590 17E8  
                    u4550 0937                      u4390 134C                      u3910 0F68  
                    u3830 0EFD                      u3822 0EE8                      u3670 0CE7  
                    u2950 1F53                      u5510 0796                      u5430 071A  
                    u5350 0584                      u5190 0293                      u4711 10C9  
                    u3591 17E7                      u4615 1049                      u4551 0936  
                    u4455 08CB                      u4391 134B                      u3911 0F67  
                    u3823 0EEF                      u3815 0ED0                      u3751 0DEE  
                    u3671 0CE6                      u2951 1F52                      u5511 0795  
                    u5431 0719                      u5351 0583                      u5255 0371  
                    u5191 0292                      u4720 10D6                      u4800 0840  
                    u4640 1073                      u4560 1D0F                      u4480 0902  
                    u3920 0F6F                      u3752 0DF5                      u3680 0CFE  
                    u2880 003F                      u2960 1F5E                      u5520 07AC  
                    u5440 0722                      u5360 05A5                      u5280 04A3  
                    u4721 10D5                      u4801 083F                      u4641 1072  
                    u4561 1D0E                      u4545 0929                      u4481 0901  
                    u4465 08E0                      u4385 133C                      u3921 0F6E  
                    u3841 0F09                      u3761 0E1B                      u3753 0DFC  
                    u3745 0DC8                      u3681 0CFD                      u2881 003E  
                    u2961 1F5D                      u5521 07AB                      u5505 077A  
                    u5441 0721                      u5361 05A4                      u5345 051A  
                    u5281 04A2                      u4810 0847                      u4490 0906  
                    u3930 0F75                      u3842 0F10                      u3762 0E22  
                    u3690 0D03                      u5530 07C3                      u5450 0733  
                    u5370 05B4                      u5290 04AE                      u4731 10E5  
                    u4811 0846                      u4635 105A                      u4491 0905  
                    u4475 08F5                      u3931 0F74                      u3843 0F17  
                    u3835 0EF8                      u3763 0E29                      u3691 0D02  
                    u2875 0031                      u5531 07C2                      u5515 0792  
                    u5451 0732                      u5371 05B3                      u5291 04AD  
                    u5275 0470                      u4740 10FE                      u4732 10E6  
                    u4660 1091                      u4900 1F0B                      u3940 0F87  
                    u2980 1F70                      u5540 07CF                      u5460 0749  
                    u5380 05CF                      u4741 10FD                      u4733 10EB  
                    u4661 1090                      u4645 106F                      u4901 1F0A  
                    u3941 0F86                      u3781 0E51                      u2981 1F6F  
                    u5541 07CE                      u5461 0748                      u5381 05CE  
                    u5365 05A1                      u5285 049F                      u4670 1EB5  
                    u4734 10EC                      u4830 0859                      u4910 1F1D  
                    u4590 1D29                      u3950 0F96                      u3870 0F3B  
                    u3782 0E58                      u2990 1F7A                      u5550 07E9  
                    u5470 075A                      u5607 1D5D                      u4671 1EB4  
                    u4751 110D                      u4735 10F1                      u4831 0858  
                    u4655 1083                      u4911 1F1C                      u4591 1D28  
                    u4575 1D16                      u3871 0F3A                      u3855 0F19  
                    u3791 0E7E                      u3783 0E5F                      u3775 0E2B  
                    u2895 0040                      u2991 1F79                      u2975 1F62  
                    u5551 07E8                      u5471 0759                      u5455 072F  
                    u5375 05B0                      u4680 1ED1                      u4760 1138  
                    u4752 110E                      u4736 10F2                      u4840 0860  
                    u3960 0FB3                      u3792 0E85                      u5480 0766  
                    u5617 1E77                      u4681 1ED0                      u4761 1137  
                    u4753 1113                      u4841 085F                      u4825 0849  
                    u4585 1D1D                      u3961 0FB2                      u3865 0F30  
                    u3793 0E8C                      u5481 0765                      u5465 0745  
                    u4690 1EEB                      u4754 1114                      u4770 1CAB  
                    u4930 1F3A                      u3970 0FCD                      u3890 0F4F  
                    u5490 0770                      u5707 1D77                      u5627 1DB7  
                    u4691 1EEA                      u4755 1119                      u4771 1CAA  
                    u4931 1F39                      u4915 1F19                      u3971 0FCC  
                    u3955 0F91                      u3891 0F4E                      u2995 1F76  
                    u5491 076F                      u5395 0656                      u4756 111A  
                    u4860 0871                      u4780 0813                      u4940 1142  
                    u3980 0FEB                      u5717 1D96                      u5637 1DC5  
                    u4765 1134                      u4861 0870                      u4781 0812  
                    u4925 1F2C                      u4941 1141                      u3981 0FEA  
                    u3965 0FAF                      u3885 0F3E                      u4870 0876  
                    u4790 082A                      u4950 1146                      u5647 1FA8  
                    u4695 1EE7                      u4871 0875                      u4855 0863  
                    u4951 1145                      u3975 0FC9                      u4880 1EF7  
                    u4960 1166                      u5657 1FB8                      u4881 1EF6  
                    u4961 1165                      u5667 1FCB                      u3995 1DA9  
                    u4795 0825                      u4980 1187                      u5677 1FDC  
                    u5597 1D3F                      u4981 1186                      u5687 1FEB  
                    u4895 1EFC                      u4975 1179                      u5697 1FFA  
                    u4995 119B                      _main 11F6              lcddata@value 0072  
                    btemp 007E               _GetADCValue 1D9F                      start 0000  
         __end_of_InitLCD 2000            Read_adc@sample 0024             ___fltol@sign1 005A  
         __end_of___fladd 1800                     ?_main 0070           __end_of___awdiv 0073  
         __end_of___flneg 1CAE           __end_of___awmod 1F9C           __end_of___flmul 1000  
         __end_of___flsub 1D09           __end_of___fltol 0882           __end_of___lldiv 109A  
         ___awdiv@divisor 0077           __end_of___llmod 1F43           __end_of___lwdiv 1E57  
         __end_of___lwmod 1E13           ___awdiv@counter 0020                     _PORTB 0006  
                   _TRISA 0085                     _TRISB 0086                     _TRISE 0089  
         __end_of_lcddata 1D66           __end_of_dpowers 1896                     _scale 0940  
         __end_of_isdigit 1CCE                     pclath 000A             _WriteLCDLine1 1CAE  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07EE  
         __initialization 07EE               Read_adc@sum 0027              __end_of_main 12B0  
        __end_of_Init_ADC 100D          __end_of_Read_adc 1EA1                    ??_main 006E  
                  _ADCON0 001F                    _ADCON1 009F          ___llmod@dividend 0074  
                  ?_scale 003E                    _ADRESH 001E                    _ADRESL 009E  
        ___awdiv@dividend 0079            ?_WriteLCDLine1 0070          __end_of___xxtofl 11F6  
               ??_InitLCD 0074          __end_of__powers_ 183A                    ___flge 109A  
                  ___fleq 1EA1                 ??___fladd 005A                    ___wmul 1D09  
               ??___awdiv 007B                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _lcdcmd 1D66                    _fround 136D  
        ___awdiv@quotient 0022           ___awmod@divisor 0070         WriteStringToLCD@s 0075  
         ___awmod@counter 0075                 ??_lcddata 0070                 ??_isdigit 0070  
       ?_WriteStringToLCD 0070        ??_WriteStringToLCD 0074                 ??_sprintf 00A5  
              ___flge@ff1 0070                ___flge@ff2 0074              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070                ___fleq@ff1 0070  
              ___fleq@ff2 0074   __end_of__initialization 07FC                ___flneg@f1 0070  
              ___fltol@f1 0051            __pcstackCOMMON 0070              __pidataBANK1 0008  
           __end_of_scale 0C9F                __div_to_l_ 0882           ??_WriteLCDLine1 0076  
         __div_to_l_@exp1 0025           __div_to_l_@cntr 0024                   ??_scale 0042  
         __div_to_l_@quot 0020              sprintf@width 00B5                 ?_Init_ADC 0070  
               ?_Read_adc 0020              ?_GetADCValue 0070             __div_to_l_@f1 0070  
           __div_to_l_@f2 0074         __end_of__Umul8_16 1034                __pmaintext 11F6  
                 ?___flge 0070                   ?___fleq 0070                   ?___wmul 0070  
                 ?_lcdcmd 0070                   ?_fround 003E                   _AVG_NUM 00E8  
               ?___xxtofl 0070                __stringtab 1800                ??_Init_ADC 0070  
              ??_Read_adc 0022                   _InitLCD 1F9C         __end_of__npowers_ 186E  
                 ___fladd 1578                   ___awdiv 000A                   ___flneg 1CA3  
                 ___awmod 1F43                   ___flmul 0C9F                   ___flsub 1CE5  
                 ___fltol 0806                   ___lldiv 1034                   ___llmod 1EEF  
                 ___lwdiv 1E13                _fround$826 004D                _fround$827 0049  
                 ___lwmod 1DD9                   __ptext1 0073                   __ptext2 0940  
                 __ptext3 1F43                   __ptext4 000A                   __ptext5 1CBC  
                 __ptext6 136D                   __ptext7 1DD9                   __ptext8 0C9F  
                 __ptext9 100D     Read_adc@adc_parameter 0026                   _lcddata 1D2E  
             ?__div_to_l_ 0070                   _dpowers 186E                   _isdigit 1CBC  
              ??___xxtofl 0074          ___awmod@dividend 0072                   _sprintf 0073  
    end_of_initialization 07FC           ___lldiv@divisor 0070           ___lldiv@counter 007D  
          __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078  
               _PORTBbits 0006               ___fladd@grs 0065             ___xxtofl@sign 0078  
              lcddata@dta 0073               ___flmul@grs 0032                main@string 00C5  
               Read_adc@i 0029            __end_of___flge 113C            __end_of___fleq 1EEF  
          __end_of___wmul 1D2E            __end_of_lcdcmd 1D9F        GetADCValue@Channel 0075  
          __end_of_fround 1578       start_initialization 07EE       __end_of__tdiv_to_l_ 136D  
         ___llmod@divisor 0070           ___llmod@counter 0079                  ??___flge 0078  
                ??___fleq 0078                  ??___wmul 0074                 __Umul8_16 100D  
                ??_lcdcmd 0070               __pdataBANK1 00E8                  ??_fround 0042  
           sprintf@tmpval 00B7                 ___fladd@a 0056                 ___fladd@b 0052  
              fround@prec 0051                 ___flmul@a 0028                 ___flmul@b 0024  
               ___flsub@a 0066                 ___flsub@b 006A                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0     __end_of_WriteLCDLine1 1CBC  
             sprintf@flag 00B3               sprintf@eexp 00BB               sprintf@fval 00BD  
             sprintf@prec 00C2                  ?_InitLCD 0070          ___lwdiv@dividend 0078  
                ?___fladd 0052                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 183A                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 __pstrings 1800               __tdiv_to_l_ 12B0  
                ?_lcddata 0070              ??__div_to_l_ 0078                  ?_isdigit 0070  
               _scale$828 004C          ___lwdiv@quotient 007B                  ?_sprintf 00A0  
          ___wmul@product 0074          _WriteStringToLCD 1CCE        __end_of__div_to_l_ 0940  
                _GO_nDONE 00FA               __stringbase 1805         ___wmul@multiplier 0070  
               lcdcmd@cmd 0073                  _Init_ADC 1000                  _Read_adc 1E57  
             ??__Umul8_16 0072        __end_of__stringtab 1806               _isdigit$634 0070  
              sprintf@val 00AF                  ___xxtofl 113C                  _main$825 00E2  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007D                  __ptext10 12B0  
                __ptext11 0882                  __ptext20 109A                  __ptext12 113C  
                __ptext21 1EA1                  __ptext13 1D09                  __ptext30 1D66  
                __ptext22 1CAE                  __ptext14 1EEF                  __ptext23 1CCE  
                __ptext15 1034                  __ptext24 1D2E                  __ptext16 0806  
                __ptext25 1E57                  __ptext17 1CE5                  __ptext26 1E13  
                __ptext18 1578                  __ptext27 1D9F                  __ptext19 1CA3  
                __ptext28 1000                  __ptext29 1F9C                  __powers_ 1806  
           ??_GetADCValue 0072             main@ADC_Value 00E6                  main@Volt 00DE  
                isdigit@c 0071                  scale@scl 0050                 sprintf@ap 00AE  
        __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024                 sprintf@sp 00C1  
        __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
               stringcode 1800       __end_of_GetADCValue 1DD9              ?__tdiv_to_l_ 0070  
  __Umul8_16@multiplicand 0070                  sprintf@c 00C4                  sprintf@f 00A0  
__end_of_WriteStringToLCD 1CE5          ___lldiv@quotient 0079           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 1800                  stringtab 1800  
           ___fladd@signs 0062              ___fladd@aexp 0063              ___fladd@bexp 0064  
    __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
